-- DW START --
	drop database DW;
	create or replace database DW;

	create or replace schema DW.BASE;

	create or replace schema DW.CONTROL;

	use schema DW.CONTROL;

	create or replace TABLE COLUMNDETAILS (
		SOURCESYSTEMID NUMBER(38,0),
		STAGEDATABASENAME VARCHAR(100),
		STAGESCHEMANAME VARCHAR(100),
		STAGETABLENAME VARCHAR(100),
		STAGETABLECOLUMN VARCHAR(100),
		ODSDATABASENAME VARCHAR(100),
		ODSSCHEMANAME VARCHAR(100),
		ODSTABLENAME VARCHAR(100),
		ODSTABLECOLUMN VARCHAR(100),
		ACTIVEFLAG BOOLEAN,
		ISPSEUDONYMISED BOOLEAN,
		EXPRESSIONS VARCHAR(100),
		CREATEDUSERID VARCHAR(50),
		CREATEDDATETIME TIMESTAMP_LTZ(9),
		LASTUPDATEDUSERID VARCHAR(50),
		LASTUPDATEDDATETIME TIMESTAMP_LTZ(9),
		ISPKEY BOOLEAN,
		DATATYP VARCHAR(100)
	);
	create or replace TABLE "COLUMNDETAILS_02Nov" (
		SOURCESYSTEMID NUMBER(38,0) NOT NULL,
		STAGEDATABASENAME VARCHAR(100),
		STAGESCHEMANAME VARCHAR(100),
		STAGETABLENAME VARCHAR(100),
		STAGETABLECOLUMN VARCHAR(100),
		ODSDATABASENAME VARCHAR(100),
		ODSSCHEMANAME VARCHAR(100),
		ODSTABLENAME VARCHAR(100),
		ODSTABLECOLUMN VARCHAR(100),
		ACTIVEFLAG BOOLEAN DEFAULT FALSE,
		ISPSEUDONYMISED BOOLEAN DEFAULT FALSE,
		EXPRESSIONS VARCHAR(100),
		CREATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
		CREATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		LASTUPDATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
		LASTUPDATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ISPKEY BOOLEAN,
		DATATYP VARCHAR(100),
		constraint PK_COLUMNDETAILS primary key (SOURCESYSTEMID, STAGESCHEMANAME, STAGETABLENAME, STAGETABLECOLUMN)
	);
	create or replace TABLE COLUMNDETAILS_BKP (
		SOURCESYSTEMID NUMBER(38,0),
		STAGEDATABASENAME VARCHAR(100),
		STAGESCHEMANAME VARCHAR(100),
		STAGETABLENAME VARCHAR(100),
		STAGETABLECOLUMN VARCHAR(100),
		ODSDATABASENAME VARCHAR(100),
		ODSSCHEMANAME VARCHAR(100),
		ODSTABLENAME VARCHAR(100),
		ODSTABLECOLUMN VARCHAR(100),
		ACTIVEFLAG BOOLEAN,
		ISPSEUDONYMISED BOOLEAN,
		EXPRESSIONS VARCHAR(100),
		CREATEDUSERID VARCHAR(50),
		CREATEDDATETIME TIMESTAMP_LTZ(9),
		LASTUPDATEDUSERID VARCHAR(50),
		LASTUPDATEDDATETIME TIMESTAMP_LTZ(9),
		ISPKEY BOOLEAN,
		DATATYP VARCHAR(100)
	);
	create or replace TABLE KEYSTORE (
		TABLE_CATALOG VARCHAR(100),
		SOURCESYSTEM VARCHAR(100),
		SOURCESYSTEMID ARRAY,
		KEY_VALUE VARCHAR(100),
		PASSPHRASE VARCHAR(100),
		PASSPHARSE VARCHAR(100),
		ADVANCED_ENCRYPTION_STD VARCHAR(100),
		VALID_ROLES ARRAY,
		DW_SRC_SYSTEM_ID NUMBER(38,0),
		DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_KEYSTORE primary key (TABLE_CATALOG)
	);
	create or replace TABLE KEY_STORE (
		SOURCESYSTEM VARCHAR(100),
		SOURCESYSTEMID ARRAY,
		KEY_VALUE VARCHAR(100),
		PASSPHARSE VARCHAR(100),
		ADVANCED_ENCRYPTION_STD VARCHAR(100),
		VALID_ROLES ARRAY,
		TABLE_CATALOG VARCHAR(100),
		PASSPHRASE VARCHAR(100),
		DW_SRC_SYSTEM_ID NUMBER(38,0)
	);
	create or replace TABLE LOADPROCESS (
		SOURCESYSTEMID NUMBER(38,0) NOT NULL,
		SOURCESCHEMANAME VARCHAR(100) NOT NULL,
		SOURCETABLENAME VARCHAR(100) NOT NULL,
		STAGESCHEMANAME VARCHAR(100),
		STAGETABLENAME VARCHAR(100),
		ODSSCHEMANAME VARCHAR(100),
		ODSTABLENAME VARCHAR(100),
		STAGETYPE VARCHAR(20),
		LOADTYPE VARCHAR(20),
		ACTIVEFLAG BOOLEAN DEFAULT FALSE,
		WATERMARKCOLUMNNAME VARCHAR(100) DEFAULT '2',
		WATERMARKDATATYPE VARCHAR(100),
		WATERMARKLASTVALUE VARCHAR(100) DEFAULT '1',
		LASTSTAGEDATETIME TIMESTAMP_LTZ(9),
		LASTLOADDATETIME TIMESTAMP_LTZ(9),
		CREATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
		CREATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		LASTUPDATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
		LASTUPDATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_PK VARCHAR(200),
		NRTFLAG BOOLEAN DEFAULT FALSE,
		ISRESTRICTED BOOLEAN,
		RESTRICTEDCOLUMNNAME VARCHAR(100),
		RESTRICTEDTABLENAME VARCHAR(100),
		SOURCE_SQL VARCHAR(4000),
		EXPRESSIONS VARCHAR(4000),
		RESTRICTEDTABLE_RANK NUMBER(38,0),
		constraint PK_LOADPROCESS primary key (SOURCESYSTEMID, SOURCESCHEMANAME, SOURCETABLENAME)
	);
	create or replace TABLE LOADPROCESS_3NOV (
		SOURCESYSTEMID NUMBER(38,0),
		SOURCESCHEMANAME VARCHAR(100),
		SOURCETABLENAME VARCHAR(100),
		STAGESCHEMANAME VARCHAR(100),
		STAGETABLENAME VARCHAR(100),
		ODSSCHEMANAME VARCHAR(100),
		ODSTABLENAME VARCHAR(100),
		STAGETYPE VARCHAR(20),
		LOADTYPE VARCHAR(20),
		ACTIVEFLAG BOOLEAN,
		WATERMARKCOLUMNNAME VARCHAR(100),
		WATERMARKDATATYPE VARCHAR(100),
		WATERMARKLASTVALUE VARCHAR(100),
		LASTSTAGEDATETIME TIMESTAMP_LTZ(9),
		LASTLOADDATETIME TIMESTAMP_LTZ(9),
		CREATEDUSERID VARCHAR(50),
		CREATEDDATETIME TIMESTAMP_LTZ(9),
		LASTUPDATEDUSERID VARCHAR(50),
		LASTUPDATEDDATETIME TIMESTAMP_LTZ(9),
		ODS_PK VARCHAR(200),
		NRTFLAG BOOLEAN,
		ISRESTRICTED BOOLEAN,
		RESTRICTEDCOLUMNNAME VARCHAR(100),
		RESTRICTEDTABLENAME VARCHAR(100),
		SOURCE_SQL VARCHAR(4000),
		EXPRESSIONS VARCHAR(4000),
		RESTRICTEDTABLE_RANK NUMBER(38,0)
	);
	create or replace TABLE LOADPROCESS_BKP (
		SOURCESYSTEMID NUMBER(38,0),
		SOURCESCHEMANAME VARCHAR(100),
		SOURCETABLENAME VARCHAR(100),
		STAGESCHEMANAME VARCHAR(100),
		STAGETABLENAME VARCHAR(100),
		ODSSCHEMANAME VARCHAR(100),
		ODSTABLENAME VARCHAR(100),
		STAGETYPE VARCHAR(20),
		LOADTYPE VARCHAR(20),
		ACTIVEFLAG BOOLEAN,
		WATERMARKCOLUMNNAME VARCHAR(100),
		WATERMARKDATATYPE VARCHAR(100),
		WATERMARKLASTVALUE VARCHAR(100),
		LASTSTAGEDATETIME TIMESTAMP_LTZ(9),
		LASTLOADDATETIME TIMESTAMP_LTZ(9),
		CREATEDUSERID VARCHAR(50),
		CREATEDDATETIME TIMESTAMP_LTZ(9),
		LASTUPDATEDUSERID VARCHAR(50),
		LASTUPDATEDDATETIME TIMESTAMP_LTZ(9),
		ODS_PK VARCHAR(200),
		NRTFLAG BOOLEAN,
		ISRESTRICTED BOOLEAN,
		RESTRICTEDCOLUMNNAME VARCHAR(100),
		RESTRICTEDTABLENAME VARCHAR(100),
		SOURCE_SQL VARCHAR(4000),
		EXPRESSIONS VARCHAR(4000),
		RESTRICTEDTABLE_RANK NUMBER(38,0)
	);
	create or replace TABLE LOGGING (
		LOGGING_ID NUMBER(38,0) NOT NULL,
		PROCESS_TYPE VARCHAR(100) NOT NULL,
		PROCESS_ID NUMBER(38,0),
		OBJECT_NAME VARCHAR(255),
		COMMAND VARCHAR(16777216) NOT NULL,
		RUN_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL,
		RUN_RESULT VARCHAR(100) NOT NULL,
		RECORDS_INSERTED NUMBER(38,0),
		RECORDS_UPDATED NUMBER(38,0),
		RECORDS_DELETED NUMBER(38,0),
		SRC_SYSTEM_ID NUMBER(38,0) NOT NULL,
		DW_SRC_SYSTEM_ID NUMBER(38,0),
		DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
	);
	create or replace TABLE PROCESS (
		PROCESS_ID NUMBER(38,0) NOT NULL,
		TABLE_CATALOG VARCHAR(200) NOT NULL,
		PROCESS_TYPE VARCHAR(100) NOT NULL,
		PROCESS_ORDER NUMBER(38,0) NOT NULL,
		LAST_RUN_TIMESTAMP TIMESTAMP_LTZ(9),
		NOTES VARCHAR(16777216),
		COMMAND VARCHAR(16777216),
		DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
	);
	create or replace TABLE SOURCESYSTEM (
		SOURCESYSTEMID NUMBER(38,0) NOT NULL,
		SOURCESYSTEMNAME VARCHAR(100) NOT NULL,
		SOURCEHOSTNAME VARCHAR(100),
		SOURCEDATABASENAME VARCHAR(100),
		SOURCEPORTNUMBER VARCHAR(10),
		SOURCECONNECTIONSTRING VARCHAR(100),
		SOURCEUSERID VARCHAR(50),
		SOURCEPASSWORD VARCHAR(50),
		SOURCECATALOGQUERY VARCHAR(1000),
		SOURCETIMEZONE VARCHAR(30),
		STAGEDATABASENAME VARCHAR(100),
		ODSDATABASENAME VARCHAR(100),
		ACTIVEFLAG BOOLEAN,
		CREATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
		CREATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		LASTUPDATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
		LASTUPDATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		DBMS VARCHAR(100),
		BACKUPSCHEMANAME VARCHAR(100),
		EKEY VARCHAR(100),
		PASSPHARSE VARCHAR(100),
		constraint PK_SOURCESYSTEM primary key (SOURCESYSTEMID)
	);



	CREATE OR REPLACE VIEW SOURCESYSTEM_CSV_LOADPROCESS AS  
	With PSEUDONYMISEDCOLUMNLISTEXP AS 
	  (
		SELECT a.SOURCESYSTEMID,NVL(a.Column_List||','||b.Column_List_exp,a.Column_List) ColumnListExp,a.STAGEDATABASENAME,a.STAGETABLENAME from   
		 (
		 SELECT SOURCESYSTEMID,STAGEDATABASENAME,STAGETABLENAME,
		listagg( NVL(EXPRESSIONS,'') || '  "' ||(STAGETABLECOLUMN) ||'" as ' ||UPPER(STAGETABLECOLUMN), ',') 
			within GROUP (ORDER BY (STAGETABLENAME)) AS Column_List
		FROM "DW"."CONTROL"."COLUMNDETAILS" WHERE 
		ACTIVEFLAG = 'TRUE' 
		AND NVL(ISPSEUDONYMISED,'FALSE')  = 'FALSE'
		AND SOURCESYSTEMID=3
		GROUP BY SOURCESYSTEMID,STAGEDATABASENAME,STAGETABLENAME) a 
		LEFT OUTER JOIN 
		 (SELECT c.SOURCESYSTEMID,c.STAGEDATABASENAME,c.STAGETABLENAME,
		listagg( NVL('encrypt("'||c.STAGETABLECOLUMN||'",'||ks.PASSPHARSE||','''||ks.KEY_VALUE||''','''||ks.ADVANCED_ENCRYPTION_STD||''')','') || ' ' ||UPPER(c.STAGETABLECOLUMN), '  ,') 
			within GROUP (ORDER BY (c.STAGETABLENAME)) AS Column_List_exp
		FROM "DW"."CONTROL"."COLUMNDETAILS" c, "DW"."CONTROL"."KEY_STORE" ks, "DW"."CONTROL"."SOURCESYSTEM" s WHERE 
		c.ACTIVEFLAG = 'TRUE'
		AND c.ISPSEUDONYMISED  = 'TRUE' AND c.SOURCESYSTEMID=s.SOURCESYSTEMID AND s.SOURCESYSTEMNAME=ks.SOURCESYSTEM
		AND c.SOURCESYSTEMID=3
		GROUP BY c.SOURCESYSTEMID,c.STAGEDATABASENAME,c.STAGETABLENAME) b
		on a.STAGETABLENAME=b.STAGETABLENAME
		)
	SELECT SOURCESYSTEMID,SOURCESYSTEMNAME,DBMS,SOURCEDATABASENAME,SOURCETIMEZONE,STAGEDATABASENAME,ODSDATABASENAME,SOURCESYSTEM_ACTIVEFLAG,
	SOURCESCHEMANAME,SOURCETABLENAME,STAGESCHEMANAME,STAGETABLENAME,ODSSCHEMANAME,ODSTABLENAME,STAGETYPE,LOADTYPE,LOADPROCESS_ACTIVEFLAG,
	LOADPROCESS_NRTFLAG,WATERMARKCOLUMNNAME,WATERMARKDATATYPE,WATERMARKVALUE,ODS_PK,BACKUPSCHEMANAME,----COLUMNLISTEXP,
	ISRESTRICTED,RESTRICTEDTABLENAME,
	RESTRICTEDCOLUMNNAME,SOURCE_SQL,EXPRESSIONS,RESTRICTEDTABLE_RANK
	 FROM (SELECT 
	ss.sourcesystemid,
	ss.sourcesystemname,
	ss.dbms,
	ss.sourcedatabasename,
	ss.sourcetimezone,
	ss.stagedatabasename,
	ss.odsdatabasename,
	ss.activeflag AS sourcesystem_activeflag,
	lp.sourceschemaname,
	lp.sourcetablename,
	lp.stageschemaname,
	lp.stagetablename,
	lp.odsschemaname,
	lp.odstablename,
	lp.stagetype,
	lp.loadtype,
	lp.activeflag AS loadprocess_activeflag,
	lp.nrtflag AS loadprocess_nrtflag,
	lp.watermarkcolumnname,
	lp.watermarkdatatype,
	CASE 
		WHEN upper(ss.dbms)='ORACLE' AND upper(lp.stagetype) = 'INCREMENTAL' AND upper(lp.WATERMARKDATATYPE) ='TIMESTAMP' THEN 'TO_TIMESTAMP('||lp.WATERMARKLASTVALUE||', \'YYYY--MM--DD HH24:MI:SS\')' 
		ELSE lp.WATERMARKLASTVALUE 
	END AS watermarkvalue,
	lp.ods_pk,
	ss.backupschemaname,
	----pcl.ColumnListExp,
	lp.IsRestricted,
	lp.RestrictedTablename,
	lp.RestrictedColumnName,
	lp.SOURCE_SQL,
	lp.Expressions,
	lp.RestrictedTable_Rank    
	FROM dw.control.sourcesystem ss
	JOIN control.loadprocess lp ON ss.sourcesystemid=lp.sourcesystemid
	----LEFT OUTER JOIN  PSEUDONYMISEDCOLUMNLISTEXP pcl
	----ON ss.sourcesystemid=pcl.sourcesystemid
	----AND ss.STAGEDATABASENAME=pcl.STAGEDATABASENAME
	----AND lp.STAGETABLENAME=pcl.STAGETABLENAME
	AND ss.sourcesystemid =3
		  ) t	
	GROUP BY SOURCESYSTEMID,SOURCESYSTEMNAME,DBMS,SOURCEDATABASENAME,SOURCETIMEZONE,STAGEDATABASENAME,ODSDATABASENAME,SOURCESYSTEM_ACTIVEFLAG,
	SOURCESCHEMANAME,SOURCETABLENAME,STAGESCHEMANAME,STAGETABLENAME,ODSSCHEMANAME,ODSTABLENAME,STAGETYPE,LOADTYPE,LOADPROCESS_ACTIVEFLAG,
	LOADPROCESS_NRTFLAG,WATERMARKCOLUMNNAME,WATERMARKDATATYPE,WATERMARKVALUE,ODS_PK,BACKUPSCHEMANAME,----COLUMNLISTEXP,
	ISRESTRICTED,RESTRICTEDTABLENAME,
	RESTRICTEDCOLUMNNAME,SOURCE_SQL,EXPRESSIONS,RESTRICTEDTABLE_RANK;
	alter view SOURCESYSTEM_CSV_LOADPROCESS set secure;

	CREATE OR REPLACE VIEW SOURCESYSTEM_LOADPROCESS3 AS  
	With PSEUDONYMISEDCOLUMNLISTEXP AS 
	  (
		SELECT a.SOURCESYSTEMID,a.SOURCESYSTEMNAME,NVL(a.Column_List||','||b.Column_List_exp,a.Column_List) ColumnListExp,a.STAGEDATABASENAME,a.STAGETABLENAME from   
		 (
		 SELECT c.SOURCESYSTEMID,s.SOURCESYSTEMNAME,c.STAGEDATABASENAME,c.STAGETABLENAME,
		listagg( NVL(EXPRESSIONS,'') || '  "' ||(STAGETABLECOLUMN) ||'" as ' ||UPPER(STAGETABLECOLUMN), ',') 
			within GROUP (ORDER BY (c.STAGETABLENAME)) AS Column_List
		FROM "DW"."CONTROL"."COLUMNDETAILS" c, "DW"."CONTROL"."SOURCESYSTEM" s WHERE 
		c.ACTIVEFLAG = 'TRUE' 
		AND NVL(ISPSEUDONYMISED,'FALSE')  = 'FALSE'
		AND c.SOURCESYSTEMID=s.SOURCESYSTEMID
	   ---- AND SOURCESYSTEMID=3 
		GROUP BY c.SOURCESYSTEMID,s.SOURCESYSTEMNAME,c.STAGEDATABASENAME,c.STAGETABLENAME) a 
		LEFT OUTER JOIN 
		 (SELECT c.SOURCESYSTEMID,s.SOURCESYSTEMNAME,c.STAGEDATABASENAME,c.STAGETABLENAME,
		listagg( NVL('encrypt("'||c.STAGETABLECOLUMN||'",'||ks.PASSPHARSE||','''||ks.KEY_VALUE||''','''||ks.ADVANCED_ENCRYPTION_STD||''')','') || ' ' ||UPPER(c.STAGETABLECOLUMN), '  ,') 
			within GROUP (ORDER BY (c.STAGETABLENAME)) AS Column_List_exp
		FROM "DW"."CONTROL"."COLUMNDETAILS" c, "DW"."CONTROL"."KEY_STORE" ks, "DW"."CONTROL"."SOURCESYSTEM" s WHERE 
		c.ACTIVEFLAG = 'TRUE'
		AND c.ISPSEUDONYMISED  = 'TRUE' AND c.SOURCESYSTEMID=s.SOURCESYSTEMID AND s.SOURCESYSTEMNAME=ks.SOURCESYSTEM
		----AND c.SOURCESYSTEMID=3
		GROUP BY c.SOURCESYSTEMID,s.SOURCESYSTEMNAME,c.STAGEDATABASENAME,c.STAGETABLENAME) b
		on a.STAGETABLENAME =b.STAGETABLENAME
		AND a.SOURCESYSTEMID = b.SOURCESYSTEMID
		AND a.SOURCESYSTEMNAME= b.SOURCESYSTEMNAME
		)
	SELECT SOURCESYSTEMID,SOURCESYSTEMNAME,DBMS,SOURCEHOSTNAME,SOURCEPORTNUMBER,SOURCEUSERID,SOURCEPASSWORD,SOURCEDATABASENAME,
	SOURCETIMEZONE,SOURCEJDBCDRIVER,SOURCECONNECTIONSTRING,SOURCECURRENTTIMESTAMP,STAGEDATABASENAME,ODSDATABASENAME,SOURCESYSTEM_ACTIVEFLAG,
	SOURCESCHEMANAME,SOURCETABLENAME,SOURCECATALOGQUERY,STAGESCHEMANAME,STAGETABLENAME,ODSSCHEMANAME,ODSTABLENAME,STAGETYPE,LOADTYPE,LOADPROCESS_ACTIVEFLAG,
	LOADPROCESS_NRTFLAG,WATERMARKCOLUMNNAME,WATERMARKDATATYPE,WATERMARKVALUE,ODS_PK,BACKUPSCHEMANAME,COLUMNLISTEXP,
	ISRESTRICTED,RESTRICTEDTABLENAME,RESTRICTEDCOLUMNNAME,SOURCE_SQL,EXPRESSIONS,RESTRICTEDTABLE_RANK
	 FROM (SELECT 
	ss.sourcesystemid,
	ss.sourcesystemname,
	ss.dbms,
	ss.sourcehostname,
	ss.sourceportnumber,
	ss.sourceuserid,
	ss.sourcepassword,
	ss.sourcedatabasename,
	ss.sourcetimezone,
	----ss.sourcecatalogquery,
	CASE 
		----WHEN dbms='SQL SERVER' THEN 'Microsoft SQL Server'
		WHEN ss.dbms='SQL SERVER'	THEN 'SQL Server (Microsoft Driver)'
		WHEN ss.dbms='MYSQL' 		THEN 'MySQL'
		WHEN ss.dbms='ORACLE' 		THEN 'Oracle'
	END AS SOURCEJDBCDRIVER,
	CASE 
		WHEN ss.dbms='SQL SERVER' 	THEN 'jdbc:sqlserver://'||ss.sourcehostname||'\\'||ss.sourcedatabasename||':'||ss.sourceportnumber
		WHEN ss.dbms='MYSQL' 		THEN 'jdbc:mysql://'||ss.sourcehostname||':'||ss.sourceportnumber||'/'||ss.sourcedatabasename
		WHEN ss.dbms='ORACLE' 		THEN 'jdbc:oracle:thin:@'||ss.sourcehostname||':'||ss.sourceportnumber||':'||ss.sourcedatabasename
	END AS SOURCECONNECTIONSTRING,
	CASE 
		WHEN ss.dbms='SQL SERVER' THEN 'select convert(varchar, current_timestamp,120) TS;'
		WHEN ss.dbms='MYSQL' THEN 'select date_format(CURRENT_TIMESTAMP, ''%Y--%m--%d %H:%i:%s'') TS;'
		WHEN ss.dbms='ORACLE' THEN 'select to_char(current_timestamp,''YYYY--MM--DD HH24:MI:SS'') TS FROM dual;'
	END AS SOURCEcurrenttimestamp,
	ss.stagedatabasename,
	ss.odsdatabasename,
	ss.activeflag AS sourcesystem_activeflag,
	lp.sourceschemaname,
	lp.sourcetablename,
	CASE 
		WHEN dbms='SQL SERVER' THEN 'select s.name as TABLE_SCHEMA, o.name as TABLE_NAME from sys.all_objects o inner join sys.schemas s on o.schema_id=s.schema_id where s.name = '''||lp.sourceschemaname||''' and o.type in (''U'');'
		WHEN dbms='MYSQL' THEN 'select o.TABLE_SCHEMA, o.TABLE_NAME from information_schema.TABLES o where o.table_schema='''||lp.sourceschemaname||''';'
		WHEN dbms='ORACLE' THEN 'select o.owner as TABLE_SCHEMA, o.OBJECT_NAME as TABLE_NAME from sys.all_objects o WHERE o.object_type = ''TABLE'' AND o.owner='''||lp.sourceschemaname||''';'
	END AS SOURCECATALOGQUERY,
	lp.stageschemaname,
	lp.stagetablename,
	lp.odsschemaname,
	lp.odstablename,
	lp.stagetype,
	lp.loadtype,
	lp.activeflag AS loadprocess_activeflag,
	lp.nrtflag AS loadprocess_nrtflag,
	lp.watermarkcolumnname,
	lp.watermarkdatatype,
	----lp.watermarklastvalue,
	CASE 
		WHEN upper(ss.dbms)='ORACLE' AND upper(lp.stagetype) = 'INCREMENTAL' AND upper(lp.WATERMARKDATATYPE) ='TIMESTAMP' THEN 'TO_TIMESTAMP('||lp.WATERMARKLASTVALUE||', \'YYYY--MM--DD HH24:MI:SS\')' 
		ELSE lp.WATERMARKLASTVALUE 
	END AS watermarkvalue,
	lp.ods_pk,
	ss.backupschemaname,
	pcl.ColumnListExp,
	lp.IsRestricted,
	lp.RestrictedTablename,
	lp.RestrictedColumnName,
	lp.SOURCE_SQL,
	lp.Expressions,
	lp.RestrictedTable_Rank    
	FROM dw.control.sourcesystem ss
	LEFT OUTER JOIN control.loadprocess lp ON ss.sourcesystemid=lp.sourcesystemid
	LEFT OUTER JOIN  PSEUDONYMISEDCOLUMNLISTEXP pcl
	ON ss.sourcesystemid=pcl.sourcesystemid
	AND ss.STAGEDATABASENAME=pcl.STAGEDATABASENAME
	AND lp.STAGETABLENAME=pcl.STAGETABLENAME
		  ) t	
	GROUP BY SOURCESYSTEMID,SOURCESYSTEMNAME,DBMS,SOURCEHOSTNAME,SOURCEPORTNUMBER,SOURCEUSERID,SOURCEPASSWORD,SOURCEDATABASENAME,
	SOURCETIMEZONE,SOURCEJDBCDRIVER,SOURCECONNECTIONSTRING,SOURCECURRENTTIMESTAMP,STAGEDATABASENAME,ODSDATABASENAME,SOURCESYSTEM_ACTIVEFLAG,
	SOURCESCHEMANAME,SOURCETABLENAME,SOURCECATALOGQUERY,STAGESCHEMANAME,STAGETABLENAME,ODSSCHEMANAME,ODSTABLENAME,STAGETYPE,LOADTYPE,LOADPROCESS_ACTIVEFLAG,
	LOADPROCESS_NRTFLAG,WATERMARKCOLUMNNAME,WATERMARKDATATYPE,WATERMARKVALUE,ODS_PK,BACKUPSCHEMANAME,COLUMNLISTEXP,
	ISRESTRICTED,RESTRICTEDTABLENAME,RESTRICTEDCOLUMNNAME,SOURCE_SQL,EXPRESSIONS,RESTRICTEDTABLE_RANK
	;
	alter view SOURCESYSTEM_LOADPROCESS3 set secure;
	
	
	create or replace schema DW.FUNCTION;

	use schema DW.FUNCTION;

	CREATE OR REPLACE SECURE PROCEDURE "ROLE_CHECK"(A ARRAY)
	RETURNS VARCHAR(16777216)
	LANGUAGE JAVASCRIPT
	STRICT
	COMMENT='Returns a boolean if any of the ROLEs in the array is in the upward hierarchy of the current_role'
	EXECUTE AS CALLER
	AS '
		var result = ''false'';
		var x;
		for (var i = 0; i < A.length; i++) {
			x = A[i];
			try {
				stmt = `SELECT IS_ROLE_IN_SESSION(''` + x + `'') ;`  ;
				var output = snowflake.execute( {sqlText: stmt } ) ;
				output.next();
				resultx = output.getColumnValue(1);
				if (resultx == "true") {
					result = resultx;
					}
	//----            return result
			}
		catch (err) {
			errmsg = ''FAILED: Code: '' + err.code + ''\\n State: '' + err.state;result += ''\\n Message: '' + err.message;result += ''\\nStack Trace:\\n'' + err.stackTraceTxt;
			return errmsg;
			}
		}
		return result
	';
	create or replace schema DW.KEY;
	use schema DW.KEY;
	create or replace sequence SEQ_CLIENT_ID start with 1 increment by 1;
	create or replace sequence SEQ_KEYMAP_ID start with 1 increment by 1;
	create or replace TABLE CLIENT (
		KEYMAP_ID NUMBER(38,0) NOT NULL,
		COLUMN_VALUE_LIST ARRAY NOT NULL,
		CLIENT_ID NUMBER(38,0) NOT NULL,
		DW_SRC_SYSTEM_ID NUMBER(38,0) NOT NULL,
		DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CLIENT primary key (KEYMAP_ID, COLUMN_VALUE_LIST)
	);
	create or replace TABLE KEYMAP (
		KEYMAP_ID NUMBER(38,0) NOT NULL DEFAULT DW.KEY.SEQ_KEYMAP_ID.NEXTVAL,
		COLUMN_NAME_LIST ARRAY NOT NULL,
		PARENT_KEYMAP_ID NUMBER(38,0),
		SRC_SYSTEM_ID NUMBER(38,0),
		TABLE_CATALOG VARCHAR(255),
		TABLE_SCHEMA VARCHAR(255),
		TABLE_NAME VARCHAR(255),
		KEY_PRECEDENCE NUMBER(38,0),
		DW_SEQUENCE_NAME VARCHAR(255) NOT NULL,
		DW_KEY_NAME VARCHAR(255) NOT NULL,
		DW_TABLE_NAME VARCHAR(255) NOT NULL,
		DW_COLUMN_NAME VARCHAR(255) NOT NULL,
		NOTES VARCHAR(1000),
		FILTER_CRITERIA VARCHAR(16777216),
		DW_SRC_SYSTEM_ID NUMBER(38,0),
		DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP(),
		DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_KEYMAP primary key (KEYMAP_ID, COLUMN_NAME_LIST)
	);


---DW END --

	drop database STG_GRS_NO;
	create or replace database STG_GRS_NO;
	create or replace schema STG_GRS_NO.DBO;
	
	drop database STG_REFERNCE_NO;
	create or replace database  STG_REFERNCE_NO;
	create or replace schema STG_REFERNCE_NO.BASE;

	drop database ODS_REFERNCE_NO;
	create or replace database ODS_REFERNCE_NO;
	create or replace schema ODS_REFERNCE_NO.BASE;
	

	----ODS_GRS_NO_ START----
	drop database ODS_GRS_NO;
	create or replace database ODS_GRS_NO;
	create or replace schema ODS_GRS_NO.DBO;
	use  schema ODS_GRS_NO.DBO;

	create or replace TABLE ALARM (
		ALARM_ID NUMBER(10,0),
		ALARM_NO VARCHAR(50),
		ALARM_GROUP_ID NUMBER(10,0),
		ALARM_TYPE_ID NUMBER(10,0),
		ALARM_KEY_STORAGE_INCL NUMBER(10,0),
		CUST_OBJ_ID NUMBER(10,0),
		UNIT_PROD_OBJ_ID NUMBER(10,0),
		UNIT_LOC_OBJ_ID NUMBER(10,0),
		CENTRAL_UNIT_TYPE VARCHAR(50),
		ALARM_ADM_CENTRAL_ID NUMBER(10,0),
		ALARM_DISTRIB_CENTRAL_ID NUMBER(10,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		NOTES BINARY(8388608),
		ALARM_PORTABLE_ID NUMBER(10,0),
		TURN_OUT_COUNT NUMBER(10,0),
		DATEFROM TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		ALARM_PORTABLE_ITEM_ID NUMBER(10,0),
		APPERANCE_TIME NUMBER(10,0),
		APPERANCE_TIME_EXCEPTION NUMBER(10,0),
		APPERANCE_TIME_EXCEPTION_START TIMESTAMP_NTZ(9),
		APPERANCE_TIME_EXCEPTION_STOP TIMESTAMP_NTZ(9),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (ALARM_ID)
	);
	create or replace TABLE ALARM_CODES (
		ALARM_CODE_ID NUMBER(38,0) NOT NULL,
		SHORT_DESCRIPTION VARCHAR(4000),
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ALARM_CODE_NO VARCHAR(20),
		INSERT_USER VARCHAR(254),
		ROWID VARCHAR(16),
		EXCLUDE_FROM_REPORT BOOLEAN,
		SHOWFORASSIGNMENT BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ALARM_CODES primary key (ALARM_CODE_ID)
	);
	create or replace TABLE ALARM_GROUP (
		ALARM_GROUP_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		SORT_ORDER NUMBER(10,0),
		ALARM_GROUP_NO VARCHAR(10),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		PORTABLE_ALARM NUMBER(10,0),
		TRANSFERTOGCS BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ALARM_GROUP primary key (ALARM_GROUP_ID)
	);
	create or replace TABLE ASSIGNMENT_TYPE (
		ASSIGNMENT_TYPE_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ALLOW_TO_SPLIT NUMBER(10,0),
		ASSIGNMENT_TYPE_NO VARCHAR(2),
		ALLOW_OUTSIDE_GD NUMBER(10,0),
		MINUTES_REDUCE_ST NUMBER(10,0),
		MINUTES_REDUCE_END NUMBER(10,0),
		ALLOW_TO_DISPLACE NUMBER(10,0),
		MINUTES_ADVANCE NUMBER(10,0),
		MINUTES_AFTERWARDS NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ALLOW_MULTIPLE_ASSIGNM_PER_DAYT BOOLEAN,
		GROUPED_COMMITMENT NUMBER(10,0),
		GROUPED_COMMITMENT_MEMBER NUMBER(10,0),
		RAZZIA NUMBER(10,0),
		SHOW_PO NUMBER(10,0),
		Y_TYPE NUMBER(10,0),
		ICON_ID VARCHAR(20),
		TIME_BANK_NOT_USED NUMBER(10,0),
		EXCLUDE_FROM_TIME_BANK NUMBER(10,0),
		INTERNAL NUMBER(10,0),
		UICOLOR VARCHAR(20),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ASSIGNMENT_TYPE primary key (ASSIGNMENT_TYPE_ID)
	);
	create or replace TABLE BAD_VIEW_SNAPSHOT (
		LOGG_ID NUMBER(38,0),
		TRANS_ID NUMBER(38,0),
		SUB_ID NUMBER(38,0),
		GD_ID NUMBER(38,0),
		PROD_OBJ_ID NUMBER(38,0),
		LOC_OBJ_ID NUMBER(38,0),
		MULTIPLICATION_FACTOR NUMBER(38,0),
		REPORT_NOTES BINARY(8388608),
		COMMITMENT_ID NUMBER(38,0),
		POSITION BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		BARCODE_DATE TIMESTAMP_NTZ(9),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(16),
		BARCODE_GROUP NUMBER(10,0),
		BARCODE_TYPE NUMBER(10,0),
		LOC_MARK_TYPE NUMBER(10,0),
		REQUIRED BOOLEAN,
		EMPLOYEE_ID NUMBER(10,0),
		VALID_ASSOCIATION BOOLEAN,
		DAY_T_ID NUMBER(10,0),
		VERSION_FROM TIMESTAMP_NTZ(9),
		ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
		CE_VALID_ASSOCIATION BOOLEAN,
		CE_COMMITMENT_ID NUMBER(10,0),
		CE_EXCEPTION NUMBER(10,0),
		CE_DAY_T_ID NUMBER(10,0),
		CE_DATEFROM TIMESTAMP_NTZ(9),
		CE_TIMEFROM TIMESTAMP_NTZ(9),
		REQ_CORRECTION_TYPE NUMBER(10,0),
		ERROR_FLAG BOOLEAN,
		NOTES BINARY(8388608),
		ASSOCIATION_NORMAL NUMBER(5,0),
		ASSOCIATION_CE NUMBER(5,0),
		LOCATION_MARK_ID NUMBER(10,0),
		ACTION VARCHAR(100),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		EMPLOYEE_NO BINARY(8388608),
		FIRSTNAME BINARY(8388608),
		LASTNAME BINARY(8388608),
		TIME_CONSUMPTION NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255),
		ODS_MODIFIEDBY VARCHAR(255),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9)
	);
	create or replace TABLE COMMITMENT (
		COMMITMENT_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSTRUCTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		ASSIGNMENT_TYPE_NO NUMBER(10,0),
		ASSIGNMENT_TYPE_ID NUMBER(10,0),
		CONTRACT_ID NUMBER(10,0),
		CONTRACT_PART_ID NUMBER(10,0),
		ROAD_TIME_FROM_GD NUMBER(10,0),
		DATEFROM TIMESTAMP_NTZ(9),
		VERSION_FROM TIMESTAMP_NTZ(9),
		VERSION_TO TIMESTAMP_NTZ(9),
		DISTRIBUTION_TYPE NUMBER(10,0),
		RANDOM_COUNT NUMBER(10,0),
		RANDOM_PERIOD NUMBER(10,0),
		RANDOM_PERIOD_TYPE NUMBER(10,0),
		RANDOM_MIN_DIST NUMBER(10,0),
		PERIOD_LENGTH NUMBER(10,0),
		PERIOD_TOTALLENGTH NUMBER(10,0),
		PERIOD_START TIMESTAMP_NTZ(9),
		ABS_COUNT NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		PRIORITY_TYPE NUMBER(5,0),
		INCOME_TYPE NUMBER(5,0),
		EXECUTE_TYPE NUMBER(5,0),
		MULTIPLE_EXECUTION NUMBER(5,0),
		SEASON_TYPE NUMBER(5,0),
		PROCESS_TYPE NUMBER(5,0),
		INCOME NUMBER(19,4),
		ON_REPORT_REPLACE_CO_WITH_PO NUMBER(10,0),
		RED NUMBER(10,0),
		ENABLE_MONITORING NUMBER(10,0),
		ENABLE_PRE_START_MONITORING NUMBER(10,0),
		ENABLE_POST_START_MONITORING NUMBER(10,0),
		PRE_START NUMBER(10,0),
		POST_START NUMBER(10,0),
		ENABLE_PRE_STOP_MONITORING NUMBER(10,0),
		ENABLE_POST_STOP_MONITORING NUMBER(10,0),
		PRE_STOP NUMBER(10,0),
		POST_STOP NUMBER(10,0),
		ENABLE_PERIOD_MONITORING NUMBER(10,0),
		MONITORING_PERIOD NUMBER(10,0),
		ENABLE_NOTIFY NUMBER(10,0),
		PRE_TRANSPORT_NOTIFY_TIME NUMBER(10,0),
		NOTIFY_PERIOD NUMBER(10,0),
		ENABLE_NOTIFY_TRANSPORT NUMBER(10,0),
		HIDDEN NUMBER(10,0),
		ALLOWFINGERSCANNING BOOLEAN,
		EXTRAORDER_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_COMMITMENT primary key (COMMITMENT_ID)
	);
	create or replace TABLE COMMIT_LOC_OBJECT (
		COMMITMENT_ID NUMBER(10,0),
		PROD_OBJ_ID NUMBER(10,0),
		LOC_OBJ_ID NUMBER(10,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (COMMITMENT_ID, PROD_OBJ_ID, LOC_OBJ_ID)
	);
	create or replace TABLE CONTRACT (
		CONTRACT_ID NUMBER(38,0),
		CONTRACT_NO VARCHAR(4000),
		CUSTOMER_ID NUMBER(38,0),
		CONTACT BINARY(8388608),
		INVOICE_LATEST DATE,
		INVOICED_TO DATE,
		VALIDTO DATE,
		MONTHLY_INC_ALL NUMBER(19,4),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		VALIDFROM TIMESTAMP_NTZ(9),
		RENEWED TIMESTAMP_NTZ(9),
		TERMINATE TIMESTAMP_NTZ(9),
		CANCELLED TIMESTAMP_NTZ(9),
		CONTRACT_TYPE_ID NUMBER(10,0),
		TERM_OF_NOTICE NUMBER(10,0),
		CANCEL_TYPE_ID NUMBER(10,0),
		CANCEL_GROUND_ID NUMBER(10,0),
		INVOICE_TYPE_ID NUMBER(10,0),
		PAYMENT_MONTH VARCHAR(12),
		JOINT_INVOICE VARCHAR(2),
		JOINT_INVOICE_SORT VARCHAR(10),
		INVOICE_FEE_ID NUMBER(10,0),
		INVOICE_ACCEPT NUMBER(10,0),
		TERMS_OF_PAYMNT_ID NUMBER(10,0),
		MANUAL_ENVELOPE NUMBER(10,0),
		MONTHLY_INC_CONT NUMBER(19,4),
		CUSTOMER_REF VARCHAR(25),
		INVOICE_TEXT_CODE VARCHAR(2),
		SALESMAN_ID VARCHAR(5),
		ENGINEER_ID VARCHAR(4),
		SIGNED_CONTRACT NUMBER(10,0),
		PRICE_CHANGE_PERC NUMBER(18,0),
		PRICE_CHANGE_ID VARCHAR(4),
		TOTAL_INV NUMBER(19,4),
		TOTAL_INV_PREV_Y NUMBER(19,4),
		TOTAL_INV_THIS_Y NUMBER(19,4),
		LATEST_INVOICE_ID NUMBER(10,0),
		LATEST_EXTRA_ID NUMBER(10,0),
		NEW_CONTRACT NUMBER(10,0),
		UPDATE_CODE VARCHAR(1),
		CANCELLED_BY VARCHAR(30),
		PRICE_CHANGE_EARL TIMESTAMP_NTZ(9),
		REPLACE_OTHER_CONT VARCHAR(1),
		REGISTRATION_DATE TIMESTAMP_NTZ(9),
		REGISTERED_BY VARCHAR(10),
		LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
		LATEST_CHANGED_BY VARCHAR(10),
		ROWIDMASTER VARCHAR(30),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		CONTRACT_CONDITION_ID NUMBER(10,0),
		PROFITCENTER_ID NUMBER(10,0),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CENTRAL_VALIDTO TIMESTAMP_NTZ(9),
		SYSTEM_CONTRACT_TYPE_ID NUMBER(5,0),
		CENTRAL_USER VARCHAR(60),
		CENTRAL_COMPANY VARCHAR(60),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255),
		ODS_MODIFIEDBY VARCHAR(255),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9)
	);
	create or replace TABLE CONTRACT_PART (
		CONTRACT_ID NUMBER(38,0) NOT NULL,
		CONTRACT_PART_ID NUMBER(38,0) NOT NULL,
		CONTRACT_PART_NO VARCHAR(4000),
		CUST_OBJ_ID NUMBER(38,0),
		CONTRACT_PART_CENTRAL_NO VARCHAR(20),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		PRODUCT_ID NUMBER(10,0),
		INVOICE_ADDR_CODE VARCHAR(1),
		INVOICE_TEXT_CODE VARCHAR(2),
		TRANSMITTER_NO VARCHAR(12),
		PLANNED_PROD_START TIMESTAMP_NTZ(9),
		TERMINATION_CODE VARCHAR(1),
		LATEST_CONTR_CHAN NUMBER(10,0),
		CONTR_REG_DATE TIMESTAMP_NTZ(9),
		VALIDFROM TIMESTAMP_NTZ(9),
		VALIDTO TIMESTAMP_NTZ(9),
		PORTF_PROFITC_ID NUMBER(10,0),
		PORTF_MONTH_INCOME NUMBER(19,4),
		REGISTRATION_DATE TIMESTAMP_NTZ(9),
		REGISTERED_BY VARCHAR(10),
		LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
		LATEST_CHANGED_BY VARCHAR(10),
		ROWIDMASTER VARCHAR(30),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CENTRAL_USER VARCHAR(60),
		CENTRAL_COMPANY VARCHAR(60),
		COMMITMENT_INCOME_TYPE NUMBER(10,0),
		DESCRIPTION VARCHAR(60),
		MULTIPLE_ASSIGNMENTS NUMBER(10,0),
		COMMITMENT_INCOME_MONEY NUMBER(19,4),
		TIME_BANK NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTRACT_PART primary key (CONTRACT_ID, CONTRACT_PART_ID)
	);
	create or replace TABLE CONTRACT_TMP2 (
		CONTRACT_ID NUMBER(38,0) NOT NULL,
		CONTRACT_NO VARCHAR(4000),
		CUSTOMER_ID NUMBER(38,0),
		CONTACT BINARY(8388608),
		INVOICE_LATEST DATE,
		INVOICED_TO DATE,
		VALIDTO DATE,
		MONTHLY_INC_ALL NUMBER(19,4),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		VALIDFROM TIMESTAMP_NTZ(9),
		RENEWED TIMESTAMP_NTZ(9),
		TERMINATE TIMESTAMP_NTZ(9),
		CANCELLED TIMESTAMP_NTZ(9),
		CONTRACT_TYPE_ID NUMBER(10,0),
		TERM_OF_NOTICE NUMBER(10,0),
		CANCEL_TYPE_ID NUMBER(10,0),
		CANCEL_GROUND_ID NUMBER(10,0),
		INVOICE_TYPE_ID NUMBER(10,0),
		PAYMENT_MONTH VARCHAR(12),
		JOINT_INVOICE VARCHAR(2),
		JOINT_INVOICE_SORT VARCHAR(10),
		INVOICE_FEE_ID NUMBER(10,0),
		INVOICE_ACCEPT NUMBER(10,0),
		TERMS_OF_PAYMNT_ID NUMBER(10,0),
		MANUAL_ENVELOPE NUMBER(10,0),
		MONTHLY_INC_CONT NUMBER(19,4),
		CUSTOMER_REF VARCHAR(25),
		INVOICE_TEXT_CODE VARCHAR(2),
		SALESMAN_ID VARCHAR(5),
		ENGINEER_ID VARCHAR(4),
		SIGNED_CONTRACT NUMBER(10,0),
		PRICE_CHANGE_PERC NUMBER(18,0),
		PRICE_CHANGE_ID VARCHAR(4),
		TOTAL_INV NUMBER(19,4),
		TOTAL_INV_PREV_Y NUMBER(19,4),
		TOTAL_INV_THIS_Y NUMBER(19,4),
		LATEST_INVOICE_ID NUMBER(10,0),
		LATEST_EXTRA_ID NUMBER(10,0),
		NEW_CONTRACT NUMBER(10,0),
		UPDATE_CODE VARCHAR(1),
		CANCELLED_BY VARCHAR(30),
		PRICE_CHANGE_EARL TIMESTAMP_NTZ(9),
		REPLACE_OTHER_CONT VARCHAR(1),
		REGISTRATION_DATE TIMESTAMP_NTZ(9),
		REGISTERED_BY VARCHAR(10),
		LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
		LATEST_CHANGED_BY VARCHAR(10),
		ROWIDMASTER VARCHAR(30),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		CONTRACT_CONDITION_ID NUMBER(10,0),
		PROFITCENTER_ID NUMBER(10,0),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CENTRAL_VALIDTO TIMESTAMP_NTZ(9),
		SYSTEM_CONTRACT_TYPE_ID NUMBER(5,0),
		CENTRAL_USER VARCHAR(60),
		CENTRAL_COMPANY VARCHAR(60),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTRACT primary key (CONTRACT_ID)
	);
	create or replace TABLE CONTRACT_TYPE (
		CONTRACT_TYPE_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CONTRACT_TYPE_NO VARCHAR(10),
		ROWIDMASTER VARCHAR(30),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTRACT_TYPE primary key (CONTRACT_TYPE_ID)
	);
	create or replace TABLE CONTR_PART_VER (
		CONTRACT_ID NUMBER(38,0) NOT NULL,
		CONTRACT_PART_ID NUMBER(38,0) NOT NULL,
		VERSION_FROM DATE NOT NULL,
		PROFITCENTER_ID NUMBER(38,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		VERSION_TO TIMESTAMP_NTZ(9),
		MONTHLY_INCOME NUMBER(19,4),
		CONTR_REG_DATE TIMESTAMP_NTZ(9),
		INVOICE_STATUS NUMBER(10,0),
		ALTERATION_TYPE VARCHAR(1),
		PRICE_CHANGE_CONST NUMBER(18,0),
		REGISTRATION_DATE TIMESTAMP_NTZ(9),
		REGISTERED_BY VARCHAR(10),
		LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
		LATEST_CHANGED_BY VARCHAR(10),
		INSERT_USER BINARY(8388608),
		CHANGE_USER BINARY(8388608),
		ROWID VARCHAR(16),
		DAYTYPE_MINUTES NUMBER(10,0),
		DATE_MINUTES NUMBER(10,0),
		DAYTYPE_CALCULATION_READY NUMBER(5,0),
		DATE_CALCULATION_READY NUMBER(5,0),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CHANGE_TYPE_1 NUMBER(5,0),
		CHANGE_TYPE_2 NUMBER(5,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (CONTRACT_ID, CONTRACT_PART_ID, VERSION_FROM)
	);
	create or replace TABLE CUSTOMER (
		CUSTOMER_ID NUMBER(38,0) NOT NULL,
		NAME_SEARCH BINARY(8388608),
		CUSTOMER_TYPE_ID NUMBER(38,0),
		CUSTOMER_NO BINARY(8388608),
		NAME_1 BINARY(8388608),
		ADDRESS BINARY(8388608),
		POSTCODE BINARY(8388608),
		POSTADDRESS BINARY(8388608),
		VALIDTO DATE,
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ORGANIZATION_NO VARCHAR(11),
		NAME_2 BINARY(8388608),
		POSTDELIVERY_ADDRESS BINARY(8388608),
		TELEPHONE_1 BINARY(8388608),
		TELEPHONE_2 BINARY(8388608),
		TELEFAX BINARY(8388608),
		ROWIDMASTER VARCHAR(30),
		MARKET_CODE BINARY(8388608),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
		MASTER_DATE TIMESTAMP_NTZ(9),
		SYSTEM_CUSTOMER_TYPE_ID NUMBER(5,0),
		SYSTEM_PROFITCENTER_ID NUMBER(5,0),
		CENTRAL_COMPANY VARCHAR(60),
		CENTRAL_USER BINARY(8388608),
		CONFIRM_QUESTION_LIMIT NUMBER(10,0),
		GRSRWENABLE NUMBER(5,0),
		REQUIRESKAMPERMISSION BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CUSTOMER primary key (CUSTOMER_ID)
	);
	create or replace TABLE CUSTOMER_OBJECT (
		CUST_OBJ_NO BINARY(8388608),
		CUST_OBJ_ID NUMBER(38,0) NOT NULL,
		PROFITCENTER_ID VARCHAR(4000),
		NAME BINARY(8388608),
		ADDRESS BINARY(8388608),
		POSTDELIVERY_ADDRESS BINARY(8388608),
		POSTCODE BINARY(8388608),
		ADDRESS_2 BINARY(8388608),
		POSTADDRESS BINARY(8388608),
		ASSIGNMENTGEOLOCATION BINARY(8388608),
		TERMINATE_DATE DATE,
		GEO_LAT BINARY(8388608),
		GEO_LONG BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		BLOCK BINARY(8388608),
		CUST_OBJ_NO_ALT VARCHAR(15),
		DISTRICT BINARY(8388608),
		REF_PERSON BINARY(8388608),
		TELEPHONE BINARY(8388608),
		TELEFAX BINARY(8388608),
		TELEMODEM BINARY(8388608),
		MARKET_ID NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CITY_ID NUMBER(10,0),
		CITY_PART_ID NUMBER(10,0),
		BLOCK_ID NUMBER(10,0),
		INVOICECUSTOMER_NO VARCHAR(25),
		CUSTOMER_OBJECT_TYPE VARCHAR(2),
		ADDRESSCODE VARCHAR(1),
		PROFITCENTER_NO VARCHAR(4),
		XPOS BINARY(8388608),
		YPOS BINARY(8388608),
		CENTRAL_USER VARCHAR(60),
		CENTRAL_COMPANY VARCHAR(60),
		MARKET_ITEM_ID NUMBER(10,0),
		NOTES BINARY(8388608),
		PROTECTED NUMBER(10,0),
		ENABLE_PROD_OBJ_POSITION NUMBER(10,0),
		VISION_ID VARCHAR(15),
		ASSIGNMENTPOSTCODE BINARY(8388608),
		ALLOWCAMERA BOOLEAN,
		CALENDAR_TEMPLATE_ID NUMBER(10,0),
		USECUSTOMERADDRESS BOOLEAN,
		XDE_SUBCONTRACTOR_CCT_NO VARCHAR(20),
		XDE_EXTRA_INFORMATION VARCHAR(300),
		XDE_PRODUCTS VARCHAR(100),
		XDE_CUSTOMER_NAME BINARY(8388608),
		XDE_IS_EXTERNAL BOOLEAN,
		ISBLACKLISTED BOOLEAN,
		BLACKLISTCOMMENT VARCHAR(1000),
		GLOBAL_MASTER_NO VARCHAR(50),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CUSTOMER_OBJECT primary key (CUST_OBJ_ID)
	);
	create or replace TABLE CUSTOMER_RESTRICTED_DATA (
		"RowId" NUMBER(10,0),
		CUSTOMER_ID FLOAT,
		SOURCE_SYSTEM_NAME VARCHAR(2000)
	);
	create or replace TABLE CUST_CUST_OBJECT (
		CUST_OBJ_ID NUMBER(38,0) NOT NULL,
		CUSTOMER_ID NUMBER(38,0) NOT NULL,
		DATEFROM DATE NOT NULL,
		DATETO DATE,
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		MASTER_DATE TIMESTAMP_NTZ(9),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CUST_CUST_OBJECT primary key (CUST_OBJ_ID, CUSTOMER_ID, DATEFROM)
	);
	create or replace TABLE DECRYPT_TEST (
		LOGG_ID NUMBER(38,0),
		TRANS_ID NUMBER(38,0),
		SUB_ID NUMBER(38,0),
		REPORT_NOTES VARCHAR(16777216),
		POSITION VARCHAR(16777216),
		NOTES VARCHAR(16777216),
		EMPLOYEE_NO VARCHAR(16777216),
		FIRSTNAME VARCHAR(16777216),
		LASTNAME VARCHAR(16777216)
	);
	create or replace TABLE GCS_EXPORT_ERP_CALL_OUTS (
		CASE_NUMBER VARCHAR(14),
		ALARM_NUMBER VARCHAR(50),
		ALARM_CENTER_NAME VARCHAR(50),
		ALARM_CENTER_CONTRACT_NUMBER VARCHAR(30),
		ALARM_TIME VARCHAR(10),
		ALARM_REACH_TIME VARCHAR(10),
		ALARM_TYPE VARCHAR(55),
		ALARM_TYPE_TEXT VARCHAR(50),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		GUARD_SECTION VARCHAR(40000),
		MEASURES_CODE NUMBER(38,0),
		MEASURES_TEXT VARCHAR(60),
		BUILDING_NUMBER BINARY(8388608),
		BUILDING_NAME BINARY(8388608),
		BUILDING_ADDRESS BINARY(8388608),
		BUILDING_LOCATION BINARY(8388608),
		BUILDING_SECTION BINARY(8388608),
		BUILDING_ZIP_CODE BINARY(8388608),
		FREE_TEXT_FROM_GUARD BINARY(8388608),
		FREE_TEXT_FROM_OPERATOR BINARY(8388608),
		ALARM_ISSUE_CODE NUMBER(10,0),
		ALARM_ISSUE_DESCRIPTION VARCHAR(60),
		TRANSFERRING_TIME VARCHAR(10),
		HANDLE_MANUALLY BOOLEAN,
		ALARM_CENTER_NUMBER VARCHAR(3),
		ALARM_CENTER_REFERENCE VARCHAR(36),
		ALARM_CENTER_ADDRESS VARCHAR(255),
		ALARM_CENTER_ZIP_CODE VARCHAR(50),
		ALARM_CENTER_LOCATION VARCHAR(30),
		ALARM_CENTER_TELEPHONE_NUMBER VARCHAR(40),
		CUSTOMER_OBJECT VARCHAR(30),
		CUSTOMER_NUMBER BINARY(8388608),
		CUSTOMER_ORGANIZATION_ID VARCHAR(15),
		CUSTOMER_VAT_NUMBER BINARY(8388608),
		CUSTOMER_SOCIAL_SECURITY_NUMBER BINARY(8388608),
		CUSTOMER_NAME_1 BINARY(8388608),
		CUSTOMER_NAME_2 BINARY(8388608),
		CUSTOMER_ADDRESS BINARY(8388608),
		CUSTOMER_ZIP_CODE BINARY(8388608),
		CUSTOMER_LOCATION BINARY(8388608),
		INVOICE_CUSTOMER_NAME_1 BINARY(8388608),
		INVOICE_CUSTOMER_NAME_2 BINARY(8388608),
		INVOICE_CUSTOMER_ADDRESS BINARY(8388608),
		INVOICE_CUSTOMER_ZIPCODE BINARY(8388608),
		INVOICE_CUSTOMER_LOCATION BINARY(8388608),
		EXPORTED_TIME_STAMP TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		CALL_OUT_BARCODE BINARY(8388608),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ primary key (CASE_NUMBER)
	);
	create or replace TABLE GCS_EXPORT_ERP_CALL_OUT_GUARDS (
		BASE_LOCATION_NUMBER VARCHAR(20),
		COST_CENTRE VARCHAR(20),
		ARRIVAL_TIME VARCHAR(10),
		DEPARTURE_TIME VARCHAR(10),
		ELAPSED_TIME NUMBER(30,0),
		GUARD_TYPE VARCHAR(1),
		CASE_NUMBER VARCHAR(14),
		VISIT_DETAIL VARCHAR(16777216),
		INSERT_USER VARCHAR(254),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		EMPLOYMENT_NUMBER BINARY(8388608),
		ROWID VARCHAR(16),
		ON_WAY_TIME VARCHAR(10),
		RETURN_TIME_BACK_TO_OFFICE VARCHAR(10),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
	);
	create or replace TABLE GD (
		GD_ID NUMBER(38,0) NOT NULL,
		GD_NO VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		PROFITCENTER_ID NUMBER(10,0),
		GD_TYPE_ID NUMBER(10,0),
		GD_KNOWREQ NUMBER(10,0),
		DATEFROM TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		NAME BINARY(8388608),
		ADDRESS BINARY(8388608),
		POSTCODE BINARY(8388608),
		POSTADDRESS BINARY(8388608),
		REF_PERSON BINARY(8388608),
		TELEPHONE BINARY(8388608),
		TELEFAX BINARY(8388608),
		TELEMODEM BINARY(8388608),
		INSERT_USER BINARY(8388608),
		CHANGE_USER BINARY(8388608),
		ROWID VARCHAR(16),
		POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
		PE_PROFITC VARCHAR(4),
		PE_NO VARCHAR(4),
		REPORT_MARK_FOLDER_ID NUMBER(10,0),
		EXPORT_TO_GMP NUMBER(10,0),
		VISIBLE_IN_153 NUMBER(10,0),
		EXCLUDE_EMPTY_GD_SHIFT NUMBER(10,0),
		STARTLOCATION BINARY(8388608),
		GEOLOCATION BINARY(8388608),
		GEO_LAT BINARY(8388608),
		GEO_LONG BINARY(8388608),
		CALENDAR_TEMPLATE_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_GD primary key (GD_ID)
	);
	create or replace TABLE GRS_ADDONINFO (
		CASE_NUMBER VARCHAR(14),
		CUST_OBJ_NO VARCHAR(15),
		CUSTOMER_NO BINARY(8388608),
		GRSR_EVENT_ID NUMBER(38,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ALARM_NO VARCHAR(50),
		TRANSFERRING_TIME TIMESTAMP_NTZ(9),
		ALARM_GROUP_NO VARCHAR(50),
		ALARM_GROUP_NAME VARCHAR(60),
		ALARM_PORTABLE_NO VARCHAR(50),
		ALARAM_PORTABLE_NAME VARCHAR(60),
		CUST_OBJ_NO_ALT VARCHAR(15),
		ALARM_ID NUMBER(10,0),
		ALARM_TIME TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ID NUMBER(10,0),
		SFU_EVENT_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_GRS_ADDONINFO primary key (CASE_NUMBER)
	);
	create or replace TABLE LOCATION_MARK (
		LOCATION_MARK_ID NUMBER(38,0) NOT NULL,
		BARCODE VARCHAR(4000),
		POSITION BINARY(8388608),
		POSITION_GUARD_INFO VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		PROD_OBJ_ID NUMBER(10,0),
		LOC_OBJ_ID NUMBER(10,0),
		LOC_MARK_TYPE_ID NUMBER(10,0),
		ACTION VARCHAR(100),
		ORDER_NO NUMBER(10,0),
		ORDER_NO_EXTRA NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		VALIDTO TIMESTAMP_NTZ(9),
		VALIDFROM TIMESTAMP_NTZ(9),
		LOC_MARK_SERVICE_NO VARCHAR(60),
		LOC_MARK_SERVICE_LOCATION VARCHAR(60),
		LOC_MARK_SERVICE_INTERVAL_ID NUMBER(10,0),
		LOC_MARK_SERVICE_EXT_INTERVAL_ID NUMBER(10,0),
		LOC_MARK_SERVICE_TYPE_ID NUMBER(10,0),
		LOC_MARK_SERVICE_TYPE_ITEM_ID NUMBER(10,0),
		LOC_MARK_SERVICE_TYPE_ITEM_2_ID NUMBER(10,0),
		LOC_MARK_SERVICE_YEAR NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_LOCATION_MARK primary key (LOCATION_MARK_ID)
	);
	create or replace TABLE LOCATION_OBJECT (
		PROD_OBJ_ID NUMBER(38,0) NOT NULL,
		LOC_OBJ_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		VALIDFROM TIMESTAMP_NTZ(9),
		VALIDTO TIMESTAMP_NTZ(9),
		LOCATION_OBJ_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_LOCATION_OBJECT primary key (PROD_OBJ_ID, LOC_OBJ_ID)
	);
	create or replace TABLE LOC_MARK_REPORT (
		LOCATION_MARK_ID NUMBER(10,0),
		REPORT_MARK_ID NUMBER(10,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		SORT_ORDER NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (LOCATION_MARK_ID, REPORT_MARK_ID)
	);
	create or replace TABLE LOC_MARK_TYPE (
		LOC_MARK_TYPE_ID NUMBER(10,0),
		FORCING NUMBER(10,0),
		COLOUR VARCHAR(20),
		NAME VARCHAR(20),
		DESCRIPTION VARCHAR(100),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		RGB_COLOUR NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_LOC_MARK_TYPE primary key (LOC_MARK_TYPE_ID)
	);
	create or replace TABLE PROCESSED_TRANSACTIONS cluster by (BARCODE_TYPE,BARCODE_NO)(
		LOGG_ID NUMBER(38,0) NOT NULL,
		TRANS_ID NUMBER(38,0) NOT NULL,
		SUB_ID NUMBER(38,0) NOT NULL,
		GD_ID NUMBER(38,0),
		PROD_OBJ_ID NUMBER(38,0),
		LOC_OBJ_ID NUMBER(38,0),
		MULTIPLICATION_FACTOR NUMBER(38,0),
		REPORT_NOTES BINARY(8388608),
		COMMITMENT_ID NUMBER(38,0),
		POSITION BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		BARCODE_DATE TIMESTAMP_NTZ(9),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(16),
		BARCODE_GROUP NUMBER(10,0),
		BARCODE_TYPE NUMBER(10,0),
		LOC_MARK_TYPE NUMBER(10,0),
		REQUIRED BOOLEAN,
		EMPLOYEE_ID NUMBER(10,0),
		VALID_ASSOCIATION BOOLEAN,
		DAY_T_ID NUMBER(10,0),
		VERSION_FROM TIMESTAMP_NTZ(9),
		ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
		CE_VALID_ASSOCIATION BOOLEAN,
		CE_COMMITMENT_ID NUMBER(10,0),
		CE_EXCEPTION NUMBER(10,0),
		CE_DAY_T_ID NUMBER(10,0),
		CE_DATEFROM TIMESTAMP_NTZ(9),
		CE_TIMEFROM TIMESTAMP_NTZ(9),
		REQ_CORRECTION_TYPE NUMBER(10,0),
		ERROR_FLAG BOOLEAN,
		NOTES BINARY(8388608),
		ASSOCIATION_NORMAL NUMBER(5,0),
		ASSOCIATION_CE NUMBER(5,0),
		LOCATION_MARK_ID NUMBER(10,0),
		ACTION VARCHAR(100),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		EMPLOYEE_NO BINARY(8388608),
		FIRSTNAME BINARY(8388608),
		LASTNAME BINARY(8388608),
		TIME_CONSUMPTION NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_PROCESSED_TRANSACTIONS primary key (LOGG_ID, TRANS_ID, SUB_ID)
	);
	create or replace TABLE PROCESSED_TRANSACTIONS_2020 cluster by (BARCODE_NO)(
		LOGG_ID NUMBER(38,0),
		TRANS_ID NUMBER(38,0),
		SUB_ID NUMBER(38,0),
		GD_ID NUMBER(38,0),
		PROD_OBJ_ID NUMBER(38,0),
		LOC_OBJ_ID NUMBER(38,0),
		MULTIPLICATION_FACTOR NUMBER(38,0),
		REPORT_NOTES BINARY(8388608),
		COMMITMENT_ID NUMBER(38,0),
		POSITION BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		BARCODE_DATE TIMESTAMP_NTZ(9),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(16),
		BARCODE_GROUP NUMBER(10,0),
		BARCODE_TYPE NUMBER(10,0),
		LOC_MARK_TYPE NUMBER(10,0),
		REQUIRED BOOLEAN,
		EMPLOYEE_ID NUMBER(10,0),
		VALID_ASSOCIATION BOOLEAN,
		DAY_T_ID NUMBER(10,0),
		VERSION_FROM TIMESTAMP_NTZ(9),
		ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
		CE_VALID_ASSOCIATION BOOLEAN,
		CE_COMMITMENT_ID NUMBER(10,0),
		CE_EXCEPTION NUMBER(10,0),
		CE_DAY_T_ID NUMBER(10,0),
		CE_DATEFROM TIMESTAMP_NTZ(9),
		CE_TIMEFROM TIMESTAMP_NTZ(9),
		REQ_CORRECTION_TYPE NUMBER(10,0),
		ERROR_FLAG BOOLEAN,
		NOTES BINARY(8388608),
		ASSOCIATION_NORMAL NUMBER(5,0),
		ASSOCIATION_CE NUMBER(5,0),
		LOCATION_MARK_ID NUMBER(10,0),
		ACTION VARCHAR(100),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		EMPLOYEE_NO BINARY(8388608),
		FIRSTNAME BINARY(8388608),
		LASTNAME BINARY(8388608),
		TIME_CONSUMPTION NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255),
		ODS_MODIFIEDBY VARCHAR(255),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9)
	);
	create or replace TABLE PRODUCTION_OBJECT (
		PROD_OBJ_ID NUMBER(38,0) NOT NULL,
		PROD_OBJ_NO BINARY(8388608),
		DESCRIPTION VARCHAR(4000),
		ADDRESS BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		POSTDELIVERY_ADDRESS BINARY(8388608),
		POSTCODE BINARY(8388608),
		POSTADDRESS BINARY(8388608),
		REF_PERSON BINARY(8388608),
		TELEPHONE BINARY(8388608),
		TELEFAX BINARY(8388608),
		TELEMODEM BINARY(8388608),
		XPOS BINARY(8388608),
		YPOS BINARY(8388608),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ADDRESS_2 BINARY(8388608),
		POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_PRODUCTION_OBJECT primary key (PROD_OBJ_ID)
	);
	create or replace TABLE PROD_CUST_OBJECT (
		PROD_OBJ_ID NUMBER(10,0),
		CUST_OBJ_ID NUMBER(10,0),
		DATEFROM TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (PROD_OBJ_ID, CUST_OBJ_ID)
	);
	create or replace TABLE PROFITCENTER (
		PROFITCENTER_ID NUMBER(38,0) NOT NULL,
		PROFITCENTER_NO VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		RESPONSIBLE BINARY(8388608),
		DESCRIPTION VARCHAR(60),
		DATEFROM TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		POSITION_TYPE_REF NUMBER(10,0),
		VISIBLE BOOLEAN,
		CO_OWNERSHIP_ALLOWED NUMBER(10,0),
		KPISTARTDATE TIMESTAMP_NTZ(9),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_PROFITCENTER primary key (PROFITCENTER_ID)
	);
	create or replace TABLE REPORT_MARK cluster by (REP_MARK_TYPE_ID, BARCODE)(
		REPORT_MARK_ID NUMBER(38,0) NOT NULL,
		REPORT_LABEL VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		REP_MARK_TYPE_ID NUMBER(10,0),
		BARCODE VARCHAR(20),
		ACTIVITY_CODE VARCHAR(1),
		TIMELIMIT_CODE VARCHAR(3),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		REPORT_MARK_VERSION NUMBER(5,0),
		RISK_LEVEL NUMBER(10,0),
		SYSTEM BOOLEAN,
		REPORT_FOLDER_LABEL VARCHAR(30),
		STATISTICS_MEMBER NUMBER(10,0),
		CODE VARCHAR(10),
		REPORT_LABEL_2 VARCHAR(60),
		REPORT_MARK_SET_ONLY NUMBER(10,0),
		SBA NUMBER(10,0),
		REPORT_LABEL_GCS_SYNC VARCHAR(60),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_REPORT_MARK primary key (REPORT_MARK_ID)
	);
	create or replace TABLE REPORT_MARK_CULTURE (
		REPORT_MARK_ID NUMBER(10,0),
		CULTURE_ID NUMBER(10,0),
		REPORT_LABEL VARCHAR(60),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (REPORT_MARK_ID, CULTURE_ID)
	);
	create or replace TABLE SFU_COMMITMENTPERFORMED (
		COMMITMENT_ID NUMBER(10,0),
		DATEPERFORMED TIMESTAMP_NTZ(9),
		GD_ID NUMBER(10,0),
		GD_STARTDATE TIMESTAMP_NTZ(9),
		EMPLOYEE_ID NUMBER(10,0),
		CUST_OBJ_ID NUMBER(10,0),
		STARTDATETIME TIMESTAMP_NTZ(9),
		STOPDATATIME TIMESTAMP_NTZ(9),
		LOGG_ID NUMBER(10,0),
		NOREPORTS NUMBER(10,0),
		NOATTACHMENTS NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ROWID VARCHAR(16),
		MANUALREGISTRATIONDATETIME TIMESTAMP_NTZ(9),
		START_TRANS_ID NUMBER(10,0),
		STOP_TRANS_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (COMMITMENT_ID, DATEPERFORMED)
	);
	create or replace TABLE SFU_COMMITMENTPERFORMEDEXTRAVISITS (
		SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID NUMBER(10,0),
		COMMITMENT_ID NUMBER(10,0),
		DATEPERFORMED TIMESTAMP_NTZ(9),
		GD_ID NUMBER(10,0),
		GD_STARTDATE TIMESTAMP_NTZ(9),
		EMPLOYEE_ID NUMBER(10,0),
		CUST_OBJ_ID NUMBER(10,0),
		STARTDATETIME TIMESTAMP_NTZ(9),
		STOPDATATIME TIMESTAMP_NTZ(9),
		LOGG_ID NUMBER(10,0),
		NOREPORTS NUMBER(10,0),
		NOATTACHMENTS NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ROWID VARCHAR(16),
		MANUALREGISTRATIONDATETIME TIMESTAMP_NTZ(9),
		START_TRANS_ID NUMBER(10,0),
		STOP_TRANS_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID)
	);
	create or replace TABLE TEMP_TRANSACTIONS (
		LOGG_ID NUMBER(38,0) NOT NULL,
		TRANS_ID NUMBER(38,0) NOT NULL,
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(4000),
		BARCODE_GROUP NUMBER(10,0),
		LATITUDE BINARY(8388608),
		LONGITUDE BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		NOTES BINARY(8388608),
		ADJUSTED_GD_ID NUMBER(10,0),
		ADJUSTED_EMPLOYEE_ID NUMBER(10,0),
		MUASSIGNMENT_ID NUMBER(10,0),
		REPORT_NOTES BINARY(8388608),
		MULTIPLICATION_FACTOR NUMBER(10,0),
		ASSIGNMENTPLANNEDID VARCHAR(20),
		IS_FINGERSCANNED BOOLEAN,
		GPSTIMESTAMP TIMESTAMP_NTZ(9),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_TEMP_TRANSACTIONS primary key (LOGG_ID, TRANS_ID)
	);
	create or replace TABLE TEMP_TRANSACTIONS_ATTACHMENT (
		TEMP_TRANSACTIONS_ATTACHMENT_ID NUMBER(10,0),
		STATISTICSATTACHMENT_ID VARCHAR(36),
		LOGG_ID NUMBER(10,0),
		TRANS_ID NUMBER(10,0),
		ATTACHMENT VARCHAR(16777216),
		CHECKSUM VARCHAR(10),
		MIMETYPE VARCHAR(40),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		GCS_IMPORTTRANSACTIONSFORMRESPONSE_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ATTACHMENT_BASESTR VARCHAR(16777216),
		constraint PK_CONTR_PART_VER primary key (TEMP_TRANSACTIONS_ATTACHMENT_ID)
	);
	create or replace TABLE TEMP_TRANSACTIONS_ATTACHMENT_CULTURE (
		TEMP_TRANSACTIONS_ATTACHMENT_CULTURE_ID NUMBER(10,0),
		TEMP_TRANSACTIONS_ATTACHMENT_ID NUMBER(10,0),
		ATTACHMENT VARCHAR(16777216),
		MIMETYPE VARCHAR(40),
		CULTURE_ID NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ATTACHMENT_BASESTR VARCHAR(16777216),
		constraint PK_CONTR_PART_VER primary key (TEMP_TRANSACTIONS_ATTACHMENT_CULTURE_ID)
	);
	create or replace TABLE USERS (
		USER_ID NUMBER(10,0),
		USER_NO BINARY(8388608),
		USER_NAME BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER BINARY(8388608),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER BINARY(8388608),
		ROWID VARCHAR(16),
		VALIDFROM TIMESTAMP_NTZ(9),
		VALIDTO TIMESTAMP_NTZ(9),
		ONLINEUSER BOOLEAN,
		CULTURE_ID NUMBER(10,0),
		SUPERUSER BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (USER_ID)
	);
	create or replace TABLE V (
		CASE_NUMBER VARCHAR(14),
		ALARM_NUMBER VARCHAR(50),
		ALARM_CENTER_NAME VARCHAR(50),
		ALARM_CENTER_CONTRACT_NUMBER VARCHAR(30),
		ALARM_TIME VARCHAR(10),
		ALARM_REACH_TIME VARCHAR(10),
		ALARM_TYPE VARCHAR(55),
		ALARM_TYPE_TEXT VARCHAR(50),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		GUARD_SECTION VARCHAR(40000),
		MEASURES_CODE NUMBER(38,0),
		MEASURES_TEXT VARCHAR(60),
		BUILDING_NUMBER BINARY(8388608),
		BUILDING_NAME BINARY(8388608),
		BUILDING_ADDRESS BINARY(8388608),
		BUILDING_LOCATION BINARY(8388608),
		BUILDING_SECTION BINARY(8388608),
		BUILDING_ZIP_CODE BINARY(8388608),
		FREE_TEXT_FROM_GUARD BINARY(8388608),
		FREE_TEXT_FROM_OPERATOR BINARY(8388608),
		ALARM_ISSUE_CODE NUMBER(10,0),
		ALARM_ISSUE_DESCRIPTION VARCHAR(60),
		TRANSFERRING_TIME VARCHAR(10),
		HANDLE_MANUALLY BOOLEAN,
		ALARM_CENTER_NUMBER VARCHAR(3),
		ALARM_CENTER_REFERENCE VARCHAR(36),
		ALARM_CENTER_ADDRESS VARCHAR(255),
		ALARM_CENTER_ZIP_CODE VARCHAR(50),
		ALARM_CENTER_LOCATION VARCHAR(30),
		ALARM_CENTER_TELEPHONE_NUMBER VARCHAR(40),
		CUSTOMER_OBJECT VARCHAR(30),
		CUSTOMER_NUMBER VARCHAR(120),
		CUSTOMER_ORGANIZATION_ID VARCHAR(15),
		CUSTOMER_VAT_NUMBER BINARY(8388608),
		CUSTOMER_SOCIAL_SECURITY_NUMBER BINARY(8388608),
		CUSTOMER_NAME_1 BINARY(8388608),
		CUSTOMER_NAME_2 BINARY(8388608),
		CUSTOMER_ADDRESS BINARY(8388608),
		CUSTOMER_ZIP_CODE BINARY(8388608),
		CUSTOMER_LOCATION BINARY(8388608),
		INVOICE_CUSTOMER_NAME_1 BINARY(8388608),
		INVOICE_CUSTOMER_NAME_2 BINARY(8388608),
		INVOICE_CUSTOMER_ADDRESS BINARY(8388608),
		INVOICE_CUSTOMER_ZIPCODE BINARY(8388608),
		INVOICE_CUSTOMER_LOCATION BINARY(8388608),
		EXPORTED_TIME_STAMP TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		CALL_OUT_BARCODE BINARY(8388608),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ primary key (CASE_NUMBER)
	);
	create or replace TABLE XPROCESSED_BARCODES cluster by (BARCODE_NO)(
		LOGG_ID NUMBER(38,0),
		TRANS_ID NUMBER(38,0),
		SUB_ID NUMBER(38,0),
		BARCODE_DATE TIMESTAMP_NTZ(9),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(16),
		BARCODE_GROUP NUMBER(38,0),
		BARCODE_TYPE NUMBER(38,0),
		LOC_MARK_TYPE NUMBER(38,0),
		REQUIRED BOOLEAN,
		EMPLOYEE_ID NUMBER(38,0),
		GD_ID NUMBER(38,0),
		VALID_ASSOCIATION BOOLEAN,
		COMMITMENT_ID NUMBER(38,0),
		DAY_T_ID NUMBER(38,0),
		VERSION_FROM TIMESTAMP_NTZ(9),
		ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
		CE_VALID_ASSOCIATION BOOLEAN,
		CE_COMMITMENT_ID NUMBER(38,0),
		CE_EXCEPTION NUMBER(38,0),
		CE_DAY_T_ID NUMBER(38,0),
		CE_DATEFROM TIMESTAMP_NTZ(9),
		CE_TIMEFROM TIMESTAMP_NTZ(9),
		REQ_CORRECTION_TYPE NUMBER(38,0),
		ERROR_FLAG BOOLEAN,
		NOTES BINARY(8388608),
		ASSOCIATION_NORMAL NUMBER(38,0),
		ASSOCIATION_CE NUMBER(38,0),
		LOCATION_MARK_ID NUMBER(38,0),
		PROD_OBJ_ID NUMBER(38,0),
		LOC_OBJ_ID NUMBER(38,0),
		POSITION BINARY(8388608),
		ACTION VARCHAR(100),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		REPORT_NOTES BINARY(8388608),
		EMPLOYEE_NO BINARY(8388608),
		FIRSTNAME BINARY(8388608),
		LASTNAME BINARY(8388608),
		MULTIPLICATION_FACTOR NUMBER(38,0),
		TIME_CONSUMPTION NUMBER(38,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
	);
	create or replace TABLE XPROCESSED_TRANSACTIONS cluster by (BARCODE_NO)(
		LOGG_ID NUMBER(38,0),
		TRANS_ID NUMBER(38,0),
		SUB_ID NUMBER(38,0),
		BARCODE_DATE TIMESTAMP_NTZ(9),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(16),
		BARCODE_GROUP NUMBER(38,0),
		BARCODE_TYPE NUMBER(38,0),
		LOC_MARK_TYPE NUMBER(38,0),
		REQUIRED BOOLEAN,
		EMPLOYEE_ID NUMBER(38,0),
		GD_ID NUMBER(38,0),
		VALID_ASSOCIATION BOOLEAN,
		COMMITMENT_ID NUMBER(38,0),
		DAY_T_ID NUMBER(38,0),
		VERSION_FROM TIMESTAMP_NTZ(9),
		ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
		CE_VALID_ASSOCIATION BOOLEAN,
		CE_COMMITMENT_ID NUMBER(38,0),
		CE_EXCEPTION NUMBER(38,0),
		CE_DAY_T_ID NUMBER(38,0),
		CE_DATEFROM TIMESTAMP_NTZ(9),
		CE_TIMEFROM TIMESTAMP_NTZ(9),
		REQ_CORRECTION_TYPE NUMBER(38,0),
		ERROR_FLAG BOOLEAN,
		NOTES BINARY(8388608),
		ASSOCIATION_NORMAL NUMBER(38,0),
		ASSOCIATION_CE NUMBER(38,0),
		LOCATION_MARK_ID NUMBER(38,0),
		PROD_OBJ_ID NUMBER(38,0),
		LOC_OBJ_ID NUMBER(38,0),
		POSITION BINARY(8388608),
		ACTION VARCHAR(100),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		REPORT_NOTES BINARY(8388608),
		EMPLOYEE_NO VARCHAR(6),
		FIRSTNAME BINARY(8388608),
		LASTNAME BINARY(8388608),
		MULTIPLICATION_FACTOR NUMBER(38,0),
		TIME_CONSUMPTION NUMBER(38,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
	);
	create or replace TABLE XREPORT_MARK (
		REPORT_MARK_ID NUMBER(38,0),
		REP_MARK_TYPE_ID NUMBER(38,0),
		BARCODE VARCHAR(20),
		REPORT_LABEL VARCHAR(60),
		ACTIVITY_CODE VARCHAR(1),
		TIMELIMIT_CODE VARCHAR(3),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		REPORT_MARK_VERSION NUMBER(38,0),
		RISK_LEVEL NUMBER(38,0),
		SYSTEM BOOLEAN,
		REPORT_FOLDER_LABEL VARCHAR(30),
		STATISTICS_MEMBER NUMBER(38,0),
		CODE VARCHAR(10),
		REPORT_LABEL_2 VARCHAR(60),
		REPORT_MARK_SET_ONLY NUMBER(38,0),
		SBA NUMBER(38,0),
		CULTURE_ID NUMBER(38,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
	);
	create or replace TABLE XTEMP_TRANSACTIONS (
		LOGG_ID NUMBER(10,0),
		TRANS_ID NUMBER(10,0),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(20),
		BARCODE_GROUP NUMBER(10,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		NOTES BINARY(8388608),
		ADJUSTED_GD_ID NUMBER(10,0),
		ADJUSTED_EMPLOYEE_ID NUMBER(10,0),
		MUASSIGNMENT_ID NUMBER(10,0),
		REPORT_NOTES BINARY(8388608),
		MULTIPLICATION_FACTOR NUMBER(10,0),
		LATITUDE BINARY(8388608),
		LONGITUDE BINARY(8388608),
		ASSIGNMENTPLANNEDID VARCHAR(20),
		GPSTIMESTAMP TIMESTAMP_NTZ(9),
		IS_FINGERSCANNED BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
	);
	create or replace TABLE XTEMP_TRANSACTIONS_ATTACHMENT (
		CHANGE_DATE TIMESTAMP_NTZ(9)
	);

	create or replace view CUSTOMER_KEY as (select src.CUSTOMER_ID, key_1.CLIENT_ID as DW_CLIENT_ID FROM ODS_GRS_NO.DBO.CUSTOMER src  LEFT OUTER JOIN DW.KEY.CLIENT key_1 ON key_1.keymap_id = 1 AND key_1.COLUMN_VALUE_LIST = ARRAY_CONSTRUCT(TO_VARCHAR(src.CUSTOMER_ID)) );


	CREATE OR REPLACE VIEW XPROCESSED_BARCODES_SDV AS 
	with sub1 as (
	SELECT PT2.LOGG_ID, PT2.TRANS_ID, PT2.SUB_ID, PT2.BARCODE_TYPE, RM.BARCODE, REP_MARK_TYPE_ID
	FROM PROCESSED_TRANSACTIONS PT2
	LEFT OUTER JOIN REPORT_MARK RM
	ON
	PT2.BARCODE_NO = RM.BARCODE
	)
	SELECT
	PT.*
	FROM "PROCESSED_TRANSACTIONS" PT
	inner join sub1 s1
	on s1.LOGG_ID = PT.LOGG_ID
	and s1.TRANS_ID = PT.TRANS_ID
	and s1.SUB_ID = PT.SUB_ID
	WHERE  
	(s1.BARCODE_TYPE <> 2) OR 
		(s1.BARCODE_TYPE = 2) AND 
		  ---- PRECISERING MEN INGA HSNDELSE, STGSRD ETC
		  (s1.REP_MARK_TYPE_ID BETWEEN 71 AND 80 ----and NOT (PT2.REP_MARK_TYPE_ID BETWEEN 71 AND 80 OR PT2.REP_MARK_TYPE_ID BETWEEN 31 AND 70 OR PT2.REP_MARK_TYPE_ID BETWEEN 91 AND 99)
		  and not exists (
				select 1 
				from sub1 PT2
				WHERE 
				PT2.LOGG_ID = s1.LOGG_ID
				and PT2.TRANS_ID = s1.TRANS_ID
				and (PT2.SUB_ID=0 or PT2.SUB_ID =s1.SUB_ID)
				and (PT2.REP_MARK_TYPE_ID BETWEEN 71 AND 80 OR PT2.REP_MARK_TYPE_ID BETWEEN 31 AND 70 OR PT2.REP_MARK_TYPE_ID BETWEEN 91 AND 99)
				)
		  ) 
		  OR
		  ---- KOMPONENT MEN INGA ANDRA
		  (s1.REP_MARK_TYPE_ID BETWEEN 11 AND 30 ----AND NOT (PT2.REP_MARK_TYPE_ID BETWEEN 31 AND 99)
		   and not exists (
				select 1 
				from sub1 PT2
				WHERE 
				PT2.LOGG_ID = s1.LOGG_ID
				and PT2.TRANS_ID = s1.TRANS_ID
				and (PT2.SUB_ID=0 or PT2.SUB_ID =s1.SUB_ID)
				and PT2.REP_MARK_TYPE_ID BETWEEN 31 AND 99
				)
		  ) 
			OR
			---- HSNDELSE MEN INTE STGSRD ETC
		  (s1.REP_MARK_TYPE_ID BETWEEN 31 AND 50 ----AND NOT (PT2.REP_MARK_TYPE_ID BETWEEN 51 AND 70 OR PT2.REP_MARK_TYPE_ID BETWEEN 91 AND 99)
		   and not exists (
				select 1 
				from sub1 PT2
				WHERE 
				PT2.LOGG_ID = s1.LOGG_ID
				and PT2.TRANS_ID = s1.TRANS_ID
				and (PT2.SUB_ID=0 or PT2.SUB_ID =s1.SUB_ID)       
				and (PT2.REP_MARK_TYPE_ID BETWEEN 51 AND 70 OR PT2.REP_MARK_TYPE_ID BETWEEN 91 AND 99)
			 )
		  )
			OR
		   ---- +TGSRD MEN INTE ÅTGÄRD,  SIGNATUR ETC
		  (s1.REP_MARK_TYPE_ID BETWEEN 51 AND 70 ----AND NOT (PT2.REP_MARK_TYPE_ID BETWEEN 51 AND 70 OR PT2.REP_MARK_TYPE_ID BETWEEN 91 AND 99)
				and not exists (
				select 1 
				from sub1 PT2
				WHERE 
				PT2.LOGG_ID = s1.LOGG_ID
				and PT2.TRANS_ID = s1.TRANS_ID
				and (PT2.SUB_ID=0 or PT2.SUB_ID =s1.SUB_ID)       
				and (PT2.REP_MARK_TYPE_ID BETWEEN 51 AND 70 OR PT2.REP_MARK_TYPE_ID BETWEEN 91 AND 99)
			  )
		  ) 
			OR
			---- SIGNATUR MEN INTE TIDSGRSNS
		  (s1.REP_MARK_TYPE_ID BETWEEN 96 AND 99 ----AND NOT (PT2.REP_MARK_TYPE_ID BETWEEN 91 AND 95)
				and not exists (
				select 1 
				from sub1 PT2
				WHERE 
				PT2.LOGG_ID = s1.LOGG_ID
				and PT2.TRANS_ID = s1.TRANS_ID
				and (PT2.SUB_ID=0 or PT2.SUB_ID =s1.SUB_ID)       
				and (PT2.REP_MARK_TYPE_ID BETWEEN 91 AND 95)
				)
		   ) 
			OR
			---- TIDSGRSNS
		  (s1.REP_MARK_TYPE_ID BETWEEN 91 AND 95) 
	----limit 10000000
	;
	alter view XPROCESSED_BARCODES_SDV set secure;

	CREATE or replace view XREPORT_MARK_SDV as 
	select
		rm.REPORT_MARK_ID
		,rm.REP_MARK_TYPE_ID
		,rm.BARCODE
		----,isnull(rmc.REPORT_LABEL,rm.REPORT_LABEL) as REPORT_LABEL
		,rm.ACTIVITY_CODE
		,rm.TIMELIMIT_CODE
		,rm.INSERT_DATE
		,rm.INSERT_USER
		,rm.CHANGE_DATE
		,rm.CHANGE_USER
		,rm.ROWID
		,rm.report_mark_version
		,rm.RISK_LEVEL
		,rm."SYSTEM"
		,rm.REPORT_FOLDER_LABEL
		,rm.STATISTICS_MEMBER
		,rm.CODE
		,rm.report_label_2
		,rm.REPORT_MARK_SET_ONLY
		,rm.SBA
	----	,isnull(rmc.culture_id,0) as culture_id
	from REPORT_MARK rm
		----left join users u on u.USER_NO = right(SYSTEM_USER,len(SYSTEM_USER)--patindex('%\%',SYSTEM_USER)) 
		----left join report_mark_culture rmc on rmc.report_mark_id = rm.report_mark_id and rmc.culture_id = u.culture_id
		----If we are pulling directly from this view in the source, what "culture" are we getting?
		----what should this view return from the DW?  A Cartesian of all cultures?
	;
	alter view XREPORT_MARK_SDV set secure;

	create or replace view XTEMP_TRANSACTIONS_ATTACHMENT_SDV as 
	select ta.TEMP_TRANSACTIONS_ATTACHMENT_ID
		  ,ta.StatisticsAttachment_ID
		  ,ta.LOGG_ID
		  ,ta.TRANS_ID
	 ----     ,isnull(tac.Attachment, ta."Attachment") as Attachment
		  ,ta.Checksum
	 ----     ,isnull(tac.MimeType, ta.MimeType) as MimeType
		  ,ta.INSERT_DATE
		  ,ta.INSERT_USER
		  ,ta.CHANGE_DATE
		  ,ta.CHANGE_USER
		  ,ta.ROWID
		  ,ta.GCS_importTransactionsFormResponse_Id
	----	  ,isnull(tac.Culture_id,0) as Culture_id
	from TEMP_TRANSACTIONS_ATTACHMENT ta
	----	  left join users u on u.USER_NO = right(SYSTEM_USER,len(SYSTEM_USER)--patindex('%\%',SYSTEM_USER)) 
	----	  left join TEMP_TRANSACTIONS_ATTACHMENT_Culture tac on tac.[TEMP_TRANSACTIONS_ATTACHMENT_ID] = ta.[TEMP_TRANSACTIONS_ATTACHMENT_ID] and tac.Culture_id = u.Culture_id
	;
	alter view XTEMP_TRANSACTIONS_ATTACHMENT_SDV set secure;
	-- create or replace masking policy MASK_DECRYPT_CHAR as (VAL BINARY(8388608)) 
	-- returns BINARY(8388608) -->
	-- case
	  -- ----when arrays_overlap(array_construct(CURRENT_ROLE()),(select valid_roles from key_store where table_catalog='TM_EXP')) then decrypt(val,(select key_value from key_store where table_catalog='TM_EXP'))
	  -- ----else null  ---- due to type mismatch issues, cannot return actual val
	  -- WHEN ARRAYS_OVERLAP(ARRAY_CONSTRUCT(CURRENT_ROLE()),(select valid_roles from DW.CONTROL.key_store where SOURCESYSTEM='GRS_NO'))
		-- THEN DECRYPT(val,(select PASSPHARSE from DW.CONTROL.key_store where SOURCESYSTEM='GRS_NO'),(select KEY_VALUE from DW.CONTROL.key_store where SOURCESYSTEM='GRS_NO'),(select ADVANCED_ENCRYPTION_STD from DW.CONTROL.key_store where SOURCESYSTEM='GRS_NO'))
	  -- ELSE NULL
	-- end
	-- ;



	----ODS_GRS_NO_ END----

	----ODS_GRS_NO_MP START----

	create or replace database ODS_GRS_NO_MP;

	create or replace schema ODS_GRS_NO_MP.DBO;

	use schema ODS_GRS_NO_MP.DBO;

	create or replace TABLE ALARM (
		ALARM_ID NUMBER(10,0),
		ALARM_NO VARCHAR(50),
		ALARM_GROUP_ID NUMBER(10,0),
		ALARM_TYPE_ID NUMBER(10,0),
		ALARM_KEY_STORAGE_INCL NUMBER(10,0),
		CUST_OBJ_ID NUMBER(10,0),
		UNIT_PROD_OBJ_ID NUMBER(10,0),
		UNIT_LOC_OBJ_ID NUMBER(10,0),
		CENTRAL_UNIT_TYPE VARCHAR(50),
		ALARM_ADM_CENTRAL_ID NUMBER(10,0),
		ALARM_DISTRIB_CENTRAL_ID NUMBER(10,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		NOTES BINARY(8388608),
		ALARM_PORTABLE_ID NUMBER(10,0),
		TURN_OUT_COUNT NUMBER(10,0),
		DATEFROM TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		ALARM_PORTABLE_ITEM_ID NUMBER(10,0),
		APPERANCE_TIME NUMBER(10,0),
		APPERANCE_TIME_EXCEPTION NUMBER(10,0),
		APPERANCE_TIME_EXCEPTION_START TIMESTAMP_NTZ(9),
		APPERANCE_TIME_EXCEPTION_STOP TIMESTAMP_NTZ(9),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (ALARM_ID)
	);
	create or replace TABLE ALARM_CODES (
		ALARM_CODE_ID NUMBER(38,0) NOT NULL,
		SHORT_DESCRIPTION VARCHAR(4000),
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ALARM_CODE_NO VARCHAR(20),
		INSERT_USER VARCHAR(254),
		ROWID VARCHAR(16),
		EXCLUDE_FROM_REPORT BOOLEAN,
		SHOWFORASSIGNMENT BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ALARM_CODES primary key (ALARM_CODE_ID)
	);
	create or replace TABLE ALARM_GROUP (
		ALARM_GROUP_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		SORT_ORDER NUMBER(10,0),
		ALARM_GROUP_NO VARCHAR(10),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		PORTABLE_ALARM NUMBER(10,0),
		TRANSFERTOGCS BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ALARM_GROUP primary key (ALARM_GROUP_ID)
	);
	create or replace TABLE ASSIGNMENT_TYPE (
		ASSIGNMENT_TYPE_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ALLOW_TO_SPLIT NUMBER(10,0),
		ASSIGNMENT_TYPE_NO VARCHAR(2),
		ALLOW_OUTSIDE_GD NUMBER(10,0),
		MINUTES_REDUCE_ST NUMBER(10,0),
		MINUTES_REDUCE_END NUMBER(10,0),
		ALLOW_TO_DISPLACE NUMBER(10,0),
		MINUTES_ADVANCE NUMBER(10,0),
		MINUTES_AFTERWARDS NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ALLOW_MULTIPLE_ASSIGNM_PER_DAYT BOOLEAN,
		GROUPED_COMMITMENT NUMBER(10,0),
		GROUPED_COMMITMENT_MEMBER NUMBER(10,0),
		RAZZIA NUMBER(10,0),
		SHOW_PO NUMBER(10,0),
		Y_TYPE NUMBER(10,0),
		ICON_ID VARCHAR(20),
		TIME_BANK_NOT_USED NUMBER(10,0),
		EXCLUDE_FROM_TIME_BANK NUMBER(10,0),
		INTERNAL NUMBER(10,0),
		UICOLOR VARCHAR(20),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ASSIGNMENT_TYPE primary key (ASSIGNMENT_TYPE_ID)
	);
	create or replace TABLE BAD_VIEW_SNAPSHOT (
		LOGG_ID NUMBER(38,0),
		TRANS_ID NUMBER(38,0),
		SUB_ID NUMBER(38,0),
		GD_ID NUMBER(38,0),
		PROD_OBJ_ID NUMBER(38,0),
		LOC_OBJ_ID NUMBER(38,0),
		MULTIPLICATION_FACTOR NUMBER(38,0),
		REPORT_NOTES BINARY(8388608),
		COMMITMENT_ID NUMBER(38,0),
		POSITION BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		BARCODE_DATE TIMESTAMP_NTZ(9),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(16),
		BARCODE_GROUP NUMBER(10,0),
		BARCODE_TYPE NUMBER(10,0),
		LOC_MARK_TYPE NUMBER(10,0),
		REQUIRED BOOLEAN,
		EMPLOYEE_ID NUMBER(10,0),
		VALID_ASSOCIATION BOOLEAN,
		DAY_T_ID NUMBER(10,0),
		VERSION_FROM TIMESTAMP_NTZ(9),
		ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
		CE_VALID_ASSOCIATION BOOLEAN,
		CE_COMMITMENT_ID NUMBER(10,0),
		CE_EXCEPTION NUMBER(10,0),
		CE_DAY_T_ID NUMBER(10,0),
		CE_DATEFROM TIMESTAMP_NTZ(9),
		CE_TIMEFROM TIMESTAMP_NTZ(9),
		REQ_CORRECTION_TYPE NUMBER(10,0),
		ERROR_FLAG BOOLEAN,
		NOTES BINARY(8388608),
		ASSOCIATION_NORMAL NUMBER(5,0),
		ASSOCIATION_CE NUMBER(5,0),
		LOCATION_MARK_ID NUMBER(10,0),
		ACTION VARCHAR(100),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		EMPLOYEE_NO BINARY(8388608),
		FIRSTNAME BINARY(8388608),
		LASTNAME BINARY(8388608),
		TIME_CONSUMPTION NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255),
		ODS_MODIFIEDBY VARCHAR(255),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9)
	);
	create or replace TABLE COMMITMENT (
		COMMITMENT_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSTRUCTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		ASSIGNMENT_TYPE_NO NUMBER(10,0),
		ASSIGNMENT_TYPE_ID NUMBER(10,0),
		CONTRACT_ID NUMBER(10,0),
		CONTRACT_PART_ID NUMBER(10,0),
		ROAD_TIME_FROM_GD NUMBER(10,0),
		DATEFROM TIMESTAMP_NTZ(9),
		VERSION_FROM TIMESTAMP_NTZ(9),
		VERSION_TO TIMESTAMP_NTZ(9),
		DISTRIBUTION_TYPE NUMBER(10,0),
		RANDOM_COUNT NUMBER(10,0),
		RANDOM_PERIOD NUMBER(10,0),
		RANDOM_PERIOD_TYPE NUMBER(10,0),
		RANDOM_MIN_DIST NUMBER(10,0),
		PERIOD_LENGTH NUMBER(10,0),
		PERIOD_TOTALLENGTH NUMBER(10,0),
		PERIOD_START TIMESTAMP_NTZ(9),
		ABS_COUNT NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		PRIORITY_TYPE NUMBER(5,0),
		INCOME_TYPE NUMBER(5,0),
		EXECUTE_TYPE NUMBER(5,0),
		MULTIPLE_EXECUTION NUMBER(5,0),
		SEASON_TYPE NUMBER(5,0),
		PROCESS_TYPE NUMBER(5,0),
		INCOME NUMBER(19,4),
		ON_REPORT_REPLACE_CO_WITH_PO NUMBER(10,0),
		RED NUMBER(10,0),
		ENABLE_MONITORING NUMBER(10,0),
		ENABLE_PRE_START_MONITORING NUMBER(10,0),
		ENABLE_POST_START_MONITORING NUMBER(10,0),
		PRE_START NUMBER(10,0),
		POST_START NUMBER(10,0),
		ENABLE_PRE_STOP_MONITORING NUMBER(10,0),
		ENABLE_POST_STOP_MONITORING NUMBER(10,0),
		PRE_STOP NUMBER(10,0),
		POST_STOP NUMBER(10,0),
		ENABLE_PERIOD_MONITORING NUMBER(10,0),
		MONITORING_PERIOD NUMBER(10,0),
		ENABLE_NOTIFY NUMBER(10,0),
		PRE_TRANSPORT_NOTIFY_TIME NUMBER(10,0),
		NOTIFY_PERIOD NUMBER(10,0),
		ENABLE_NOTIFY_TRANSPORT NUMBER(10,0),
		HIDDEN NUMBER(10,0),
		ALLOWFINGERSCANNING BOOLEAN,
		EXTRAORDER_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_COMMITMENT primary key (COMMITMENT_ID)
	);
	create or replace TABLE COMMIT_LOC_OBJECT (
		COMMITMENT_ID NUMBER(10,0),
		PROD_OBJ_ID NUMBER(10,0),
		LOC_OBJ_ID NUMBER(10,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (COMMITMENT_ID, PROD_OBJ_ID, LOC_OBJ_ID)
	);
	create or replace TABLE CONTRACT (
		CONTRACT_ID NUMBER(38,0) NOT NULL,
		CONTRACT_NO VARCHAR(4000),
		CUSTOMER_ID NUMBER(38,0),
		CONTACT BINARY(8388608),
		INVOICE_LATEST DATE,
		INVOICED_TO DATE,
		VALIDTO DATE,
		MONTHLY_INC_ALL NUMBER(19,4),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		VALIDFROM TIMESTAMP_NTZ(9),
		RENEWED TIMESTAMP_NTZ(9),
		TERMINATE TIMESTAMP_NTZ(9),
		CANCELLED TIMESTAMP_NTZ(9),
		CONTRACT_TYPE_ID NUMBER(10,0),
		TERM_OF_NOTICE NUMBER(10,0),
		CANCEL_TYPE_ID NUMBER(10,0),
		CANCEL_GROUND_ID NUMBER(10,0),
		INVOICE_TYPE_ID NUMBER(10,0),
		PAYMENT_MONTH VARCHAR(12),
		JOINT_INVOICE VARCHAR(2),
		JOINT_INVOICE_SORT VARCHAR(10),
		INVOICE_FEE_ID NUMBER(10,0),
		INVOICE_ACCEPT NUMBER(10,0),
		TERMS_OF_PAYMNT_ID NUMBER(10,0),
		MANUAL_ENVELOPE NUMBER(10,0),
		MONTHLY_INC_CONT NUMBER(19,4),
		CUSTOMER_REF VARCHAR(25),
		INVOICE_TEXT_CODE VARCHAR(2),
		SALESMAN_ID VARCHAR(5),
		ENGINEER_ID VARCHAR(4),
		SIGNED_CONTRACT NUMBER(10,0),
		PRICE_CHANGE_PERC NUMBER(18,0),
		PRICE_CHANGE_ID VARCHAR(4),
		TOTAL_INV NUMBER(19,4),
		TOTAL_INV_PREV_Y NUMBER(19,4),
		TOTAL_INV_THIS_Y NUMBER(19,4),
		LATEST_INVOICE_ID NUMBER(10,0),
		LATEST_EXTRA_ID NUMBER(10,0),
		NEW_CONTRACT NUMBER(10,0),
		UPDATE_CODE VARCHAR(1),
		CANCELLED_BY VARCHAR(30),
		PRICE_CHANGE_EARL TIMESTAMP_NTZ(9),
		REPLACE_OTHER_CONT VARCHAR(1),
		REGISTRATION_DATE TIMESTAMP_NTZ(9),
		REGISTERED_BY VARCHAR(10),
		LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
		LATEST_CHANGED_BY VARCHAR(10),
		ROWIDMASTER VARCHAR(30),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		CONTRACT_CONDITION_ID NUMBER(10,0),
		PROFITCENTER_ID NUMBER(10,0),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CENTRAL_VALIDTO TIMESTAMP_NTZ(9),
		SYSTEM_CONTRACT_TYPE_ID NUMBER(5,0),
		CENTRAL_USER VARCHAR(60),
		CENTRAL_COMPANY VARCHAR(60),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTRACT primary key (CONTRACT_ID)
	);
	create or replace TABLE CONTRACT_PART (
		CONTRACT_ID NUMBER(38,0) NOT NULL,
		CONTRACT_PART_ID NUMBER(38,0) NOT NULL,
		CONTRACT_PART_NO VARCHAR(4000),
		CUST_OBJ_ID NUMBER(38,0),
		CONTRACT_PART_CENTRAL_NO VARCHAR(20),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		PRODUCT_ID NUMBER(10,0),
		INVOICE_ADDR_CODE VARCHAR(1),
		INVOICE_TEXT_CODE VARCHAR(2),
		TRANSMITTER_NO VARCHAR(12),
		PLANNED_PROD_START TIMESTAMP_NTZ(9),
		TERMINATION_CODE VARCHAR(1),
		LATEST_CONTR_CHAN NUMBER(10,0),
		CONTR_REG_DATE TIMESTAMP_NTZ(9),
		VALIDFROM TIMESTAMP_NTZ(9),
		VALIDTO TIMESTAMP_NTZ(9),
		PORTF_PROFITC_ID NUMBER(10,0),
		PORTF_MONTH_INCOME NUMBER(19,4),
		REGISTRATION_DATE TIMESTAMP_NTZ(9),
		REGISTERED_BY VARCHAR(10),
		LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
		LATEST_CHANGED_BY VARCHAR(10),
		ROWIDMASTER VARCHAR(30),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CENTRAL_USER VARCHAR(60),
		CENTRAL_COMPANY VARCHAR(60),
		COMMITMENT_INCOME_TYPE NUMBER(10,0),
		DESCRIPTION VARCHAR(60),
		MULTIPLE_ASSIGNMENTS NUMBER(10,0),
		COMMITMENT_INCOME_MONEY NUMBER(19,4),
		TIME_BANK NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTRACT_PART primary key (CONTRACT_ID, CONTRACT_PART_ID)
	);
	create or replace TABLE CONTRACT_TYPE (
		CONTRACT_TYPE_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CONTRACT_TYPE_NO VARCHAR(10),
		ROWIDMASTER VARCHAR(30),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTRACT_TYPE primary key (CONTRACT_TYPE_ID)
	);
	create or replace TABLE CONTR_PART_VER (
		CONTRACT_ID NUMBER(38,0) NOT NULL,
		CONTRACT_PART_ID NUMBER(38,0) NOT NULL,
		VERSION_FROM DATE NOT NULL,
		PROFITCENTER_ID NUMBER(38,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		VERSION_TO TIMESTAMP_NTZ(9),
		MONTHLY_INCOME NUMBER(19,4),
		CONTR_REG_DATE TIMESTAMP_NTZ(9),
		INVOICE_STATUS NUMBER(10,0),
		ALTERATION_TYPE VARCHAR(1),
		PRICE_CHANGE_CONST NUMBER(18,0),
		REGISTRATION_DATE TIMESTAMP_NTZ(9),
		REGISTERED_BY VARCHAR(10),
		LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
		LATEST_CHANGED_BY VARCHAR(10),
		INSERT_USER BINARY(8388608),
		CHANGE_USER BINARY(8388608),
		ROWID VARCHAR(16),
		DAYTYPE_MINUTES NUMBER(10,0),
		DATE_MINUTES NUMBER(10,0),
		DAYTYPE_CALCULATION_READY NUMBER(5,0),
		DATE_CALCULATION_READY NUMBER(5,0),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CHANGE_TYPE_1 NUMBER(5,0),
		CHANGE_TYPE_2 NUMBER(5,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (CONTRACT_ID, CONTRACT_PART_ID, VERSION_FROM)
	);
	create or replace TABLE CUSTOMER (
		CUSTOMER_ID NUMBER(38,0) NOT NULL,
		NAME_SEARCH BINARY(8388608),
		CUSTOMER_TYPE_ID NUMBER(38,0),
		CUSTOMER_NO BINARY(8388608),
		NAME_1 BINARY(8388608),
		ADDRESS BINARY(8388608),
		POSTCODE BINARY(8388608),
		POSTADDRESS BINARY(8388608),
		VALIDTO DATE,
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ORGANIZATION_NO VARCHAR(11),
		NAME_2 BINARY(8388608),
		POSTDELIVERY_ADDRESS BINARY(8388608),
		TELEPHONE_1 BINARY(8388608),
		TELEPHONE_2 BINARY(8388608),
		TELEFAX BINARY(8388608),
		ROWIDMASTER VARCHAR(30),
		MARKET_CODE BINARY(8388608),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
		MASTER_DATE TIMESTAMP_NTZ(9),
		SYSTEM_CUSTOMER_TYPE_ID NUMBER(5,0),
		SYSTEM_PROFITCENTER_ID NUMBER(5,0),
		CENTRAL_COMPANY VARCHAR(60),
		CENTRAL_USER BINARY(8388608),
		CONFIRM_QUESTION_LIMIT NUMBER(10,0),
		GRSRWENABLE NUMBER(5,0),
		REQUIRESKAMPERMISSION BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CUSTOMER primary key (CUSTOMER_ID)
	);
	create or replace TABLE CUSTOMER_OBJECT (
		CUST_OBJ_NO BINARY(8388608),
		CUST_OBJ_ID NUMBER(38,0) NOT NULL,
		PROFITCENTER_ID VARCHAR(4000),
		NAME BINARY(8388608),
		ADDRESS BINARY(8388608),
		POSTDELIVERY_ADDRESS BINARY(8388608),
		POSTCODE BINARY(8388608),
		ADDRESS_2 BINARY(8388608),
		POSTADDRESS BINARY(8388608),
		ASSIGNMENTGEOLOCATION BINARY(8388608),
		TERMINATE_DATE DATE,
		GEO_LAT BINARY(8388608),
		GEO_LONG BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		BLOCK BINARY(8388608),
		CUST_OBJ_NO_ALT VARCHAR(15),
		DISTRICT BINARY(8388608),
		REF_PERSON BINARY(8388608),
		TELEPHONE BINARY(8388608),
		TELEFAX BINARY(8388608),
		TELEMODEM BINARY(8388608),
		MARKET_ID NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
		MASTER_DATE TIMESTAMP_NTZ(9),
		CITY_ID NUMBER(10,0),
		CITY_PART_ID NUMBER(10,0),
		BLOCK_ID NUMBER(10,0),
		INVOICECUSTOMER_NO VARCHAR(25),
		CUSTOMER_OBJECT_TYPE VARCHAR(2),
		ADDRESSCODE VARCHAR(1),
		PROFITCENTER_NO VARCHAR(4),
		XPOS BINARY(8388608),
		YPOS BINARY(8388608),
		CENTRAL_USER VARCHAR(60),
		CENTRAL_COMPANY VARCHAR(60),
		MARKET_ITEM_ID NUMBER(10,0),
		NOTES BINARY(8388608),
		PROTECTED NUMBER(10,0),
		ENABLE_PROD_OBJ_POSITION NUMBER(10,0),
		VISION_ID VARCHAR(15),
		ASSIGNMENTPOSTCODE BINARY(8388608),
		ALLOWCAMERA BOOLEAN,
		CALENDAR_TEMPLATE_ID NUMBER(10,0),
		USECUSTOMERADDRESS BOOLEAN,
		XDE_SUBCONTRACTOR_CCT_NO VARCHAR(20),
		XDE_EXTRA_INFORMATION VARCHAR(300),
		XDE_PRODUCTS VARCHAR(100),
		XDE_CUSTOMER_NAME BINARY(8388608),
		XDE_IS_EXTERNAL BOOLEAN,
		ISBLACKLISTED BOOLEAN,
		BLACKLISTCOMMENT VARCHAR(1000),
		GLOBAL_MASTER_NO VARCHAR(50),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CUSTOMER_OBJECT primary key (CUST_OBJ_ID)
	);
	create or replace TABLE CUSTOMER_RESTRICTED_DATA (
		"RowId" NUMBER(10,0),
		CUSTOMER_ID FLOAT,
		SOURCE_SYSTEM_NAME VARCHAR(2000)
	);
	create or replace TABLE CUST_CUST_OBJECT (
		CUST_OBJ_ID NUMBER(38,0) NOT NULL,
		CUSTOMER_ID NUMBER(38,0) NOT NULL,
		DATEFROM DATE NOT NULL,
		DATETO DATE,
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		MASTER_DATE TIMESTAMP_NTZ(9),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CUST_CUST_OBJECT primary key (CUST_OBJ_ID, CUSTOMER_ID, DATEFROM)
	);
	create or replace TABLE DECRYPT_TEST (
		LOGG_ID NUMBER(38,0),
		TRANS_ID NUMBER(38,0),
		SUB_ID NUMBER(38,0),
		REPORT_NOTES VARCHAR(16777216),
		POSITION VARCHAR(16777216),
		NOTES VARCHAR(16777216),
		EMPLOYEE_NO VARCHAR(16777216),
		FIRSTNAME VARCHAR(16777216),
		LASTNAME VARCHAR(16777216)
	);
	create or replace TABLE GCS_EXPORT_ERP_CALL_OUTS (
		CASE_NUMBER VARCHAR(14),
		ALARM_NUMBER VARCHAR(50),
		ALARM_CENTER_NAME VARCHAR(50),
		ALARM_CENTER_CONTRACT_NUMBER VARCHAR(30),
		ALARM_TIME VARCHAR(10),
		ALARM_REACH_TIME VARCHAR(10),
		ALARM_TYPE VARCHAR(55),
		ALARM_TYPE_TEXT VARCHAR(50),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		GUARD_SECTION VARCHAR(40000),
		MEASURES_CODE NUMBER(38,0),
		MEASURES_TEXT VARCHAR(60),
		BUILDING_NUMBER BINARY(8388608),
		BUILDING_NAME BINARY(8388608),
		BUILDING_ADDRESS BINARY(8388608),
		BUILDING_LOCATION BINARY(8388608),
		BUILDING_SECTION BINARY(8388608),
		BUILDING_ZIP_CODE BINARY(8388608),
		FREE_TEXT_FROM_GUARD BINARY(8388608),
		FREE_TEXT_FROM_OPERATOR BINARY(8388608),
		ALARM_ISSUE_CODE NUMBER(10,0),
		ALARM_ISSUE_DESCRIPTION VARCHAR(60),
		TRANSFERRING_TIME VARCHAR(10),
		HANDLE_MANUALLY BOOLEAN,
		ALARM_CENTER_NUMBER VARCHAR(3),
		ALARM_CENTER_REFERENCE VARCHAR(36),
		ALARM_CENTER_ADDRESS VARCHAR(255),
		ALARM_CENTER_ZIP_CODE VARCHAR(50),
		ALARM_CENTER_LOCATION VARCHAR(30),
		ALARM_CENTER_TELEPHONE_NUMBER VARCHAR(40),
		CUSTOMER_OBJECT VARCHAR(30),
		CUSTOMER_NUMBER BINARY(8388608),
		CUSTOMER_ORGANIZATION_ID VARCHAR(15),
		CUSTOMER_VAT_NUMBER BINARY(8388608),
		CUSTOMER_SOCIAL_SECURITY_NUMBER BINARY(8388608),
		CUSTOMER_NAME_1 BINARY(8388608),
		CUSTOMER_NAME_2 BINARY(8388608),
		CUSTOMER_ADDRESS BINARY(8388608),
		CUSTOMER_ZIP_CODE BINARY(8388608),
		CUSTOMER_LOCATION BINARY(8388608),
		INVOICE_CUSTOMER_NAME_1 BINARY(8388608),
		INVOICE_CUSTOMER_NAME_2 BINARY(8388608),
		INVOICE_CUSTOMER_ADDRESS BINARY(8388608),
		INVOICE_CUSTOMER_ZIPCODE BINARY(8388608),
		INVOICE_CUSTOMER_LOCATION BINARY(8388608),
		EXPORTED_TIME_STAMP TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		CALL_OUT_BARCODE BINARY(8388608),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_ primary key (CASE_NUMBER)
	);
	create or replace TABLE GCS_EXPORT_ERP_CALL_OUT_GUARDS (
		BASE_LOCATION_NUMBER VARCHAR(20),
		COST_CENTRE VARCHAR(20),
		ARRIVAL_TIME VARCHAR(10),
		DEPARTURE_TIME VARCHAR(10),
		ELAPSED_TIME NUMBER(30,0),
		GUARD_TYPE VARCHAR(1),
		CASE_NUMBER VARCHAR(14),
		VISIT_DETAIL VARCHAR(16777216),
		INSERT_USER VARCHAR(254),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		EMPLOYMENT_NUMBER BINARY(8388608),
		ROWID VARCHAR(16),
		ON_WAY_TIME VARCHAR(10),
		RETURN_TIME_BACK_TO_OFFICE VARCHAR(10),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
	);
	create or replace TABLE GD (
		GD_ID NUMBER(38,0) NOT NULL,
		GD_NO VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		PROFITCENTER_ID NUMBER(10,0),
		GD_TYPE_ID NUMBER(10,0),
		GD_KNOWREQ NUMBER(10,0),
		DATEFROM TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		NAME BINARY(8388608),
		ADDRESS BINARY(8388608),
		POSTCODE BINARY(8388608),
		POSTADDRESS BINARY(8388608),
		REF_PERSON BINARY(8388608),
		TELEPHONE BINARY(8388608),
		TELEFAX BINARY(8388608),
		TELEMODEM BINARY(8388608),
		INSERT_USER BINARY(8388608),
		CHANGE_USER BINARY(8388608),
		ROWID VARCHAR(16),
		POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
		PE_PROFITC VARCHAR(4),
		PE_NO VARCHAR(4),
		REPORT_MARK_FOLDER_ID NUMBER(10,0),
		EXPORT_TO_GMP NUMBER(10,0),
		VISIBLE_IN_153 NUMBER(10,0),
		EXCLUDE_EMPTY_GD_SHIFT NUMBER(10,0),
		STARTLOCATION BINARY(8388608),
		GEOLOCATION BINARY(8388608),
		GEO_LAT BINARY(8388608),
		GEO_LONG BINARY(8388608),
		CALENDAR_TEMPLATE_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_GD primary key (GD_ID)
	);
	create or replace TABLE GRS_ADDONINFO (
		CASE_NUMBER VARCHAR(14),
		CUST_OBJ_NO VARCHAR(15),
		CUSTOMER_NO BINARY(8388608),
		GRSR_EVENT_ID NUMBER(38,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ALARM_NO VARCHAR(50),
		TRANSFERRING_TIME TIMESTAMP_NTZ(9),
		ALARM_GROUP_NO VARCHAR(50),
		ALARM_GROUP_NAME VARCHAR(60),
		ALARM_PORTABLE_NO VARCHAR(50),
		ALARAM_PORTABLE_NAME VARCHAR(60),
		CUST_OBJ_NO_ALT VARCHAR(15),
		ALARM_ID NUMBER(10,0),
		ALARM_TIME TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ID NUMBER(10,0),
		SFU_EVENT_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_GRS_ADDONINFO primary key (CASE_NUMBER)
	);
	create or replace TABLE LOCATION_MARK (
		LOCATION_MARK_ID NUMBER(38,0) NOT NULL,
		BARCODE VARCHAR(4000),
		POSITION BINARY(8388608),
		POSITION_GUARD_INFO VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		PROD_OBJ_ID NUMBER(10,0),
		LOC_OBJ_ID NUMBER(10,0),
		LOC_MARK_TYPE_ID NUMBER(10,0),
		ACTION VARCHAR(100),
		ORDER_NO NUMBER(10,0),
		ORDER_NO_EXTRA NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		VALIDTO TIMESTAMP_NTZ(9),
		VALIDFROM TIMESTAMP_NTZ(9),
		LOC_MARK_SERVICE_NO VARCHAR(60),
		LOC_MARK_SERVICE_LOCATION VARCHAR(60),
		LOC_MARK_SERVICE_INTERVAL_ID NUMBER(10,0),
		LOC_MARK_SERVICE_EXT_INTERVAL_ID NUMBER(10,0),
		LOC_MARK_SERVICE_TYPE_ID NUMBER(10,0),
		LOC_MARK_SERVICE_TYPE_ITEM_ID NUMBER(10,0),
		LOC_MARK_SERVICE_TYPE_ITEM_2_ID NUMBER(10,0),
		LOC_MARK_SERVICE_YEAR NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_LOCATION_MARK primary key (LOCATION_MARK_ID)
	);
	create or replace TABLE LOCATION_OBJECT (
		PROD_OBJ_ID NUMBER(38,0) NOT NULL,
		LOC_OBJ_ID NUMBER(38,0) NOT NULL,
		DESCRIPTION VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		VALIDFROM TIMESTAMP_NTZ(9),
		VALIDTO TIMESTAMP_NTZ(9),
		LOCATION_OBJ_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_LOCATION_OBJECT primary key (PROD_OBJ_ID, LOC_OBJ_ID)
	);
	create or replace TABLE LOC_MARK_REPORT (
		LOCATION_MARK_ID NUMBER(10,0),
		REPORT_MARK_ID NUMBER(10,0),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		SORT_ORDER NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (LOCATION_MARK_ID, REPORT_MARK_ID)
	);
	create or replace TABLE LOC_MARK_TYPE (
		LOC_MARK_TYPE_ID NUMBER(10,0),
		FORCING NUMBER(10,0),
		COLOUR VARCHAR(20),
		NAME VARCHAR(20),
		DESCRIPTION VARCHAR(100),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		RGB_COLOUR NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_LOC_MARK_TYPE primary key (LOC_MARK_TYPE_ID)
	);
	create or replace TABLE PROCESSED_TRANSACTIONS cluster by (BARCODE_TYPE,BARCODE_NO)(
		LOGG_ID NUMBER(38,0) NOT NULL,
		TRANS_ID NUMBER(38,0) NOT NULL,
		SUB_ID NUMBER(38,0) NOT NULL,
		GD_ID NUMBER(38,0),
		PROD_OBJ_ID NUMBER(38,0),
		LOC_OBJ_ID NUMBER(38,0),
		MULTIPLICATION_FACTOR NUMBER(38,0),
		REPORT_NOTES BINARY(8388608),
		COMMITMENT_ID NUMBER(38,0),
		POSITION BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		BARCODE_DATE TIMESTAMP_NTZ(9),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(16),
		BARCODE_GROUP NUMBER(10,0),
		BARCODE_TYPE NUMBER(10,0),
		LOC_MARK_TYPE NUMBER(10,0),
		REQUIRED BOOLEAN,
		EMPLOYEE_ID NUMBER(10,0),
		VALID_ASSOCIATION BOOLEAN,
		DAY_T_ID NUMBER(10,0),
		VERSION_FROM TIMESTAMP_NTZ(9),
		ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
		CE_VALID_ASSOCIATION BOOLEAN,
		CE_COMMITMENT_ID NUMBER(10,0),
		CE_EXCEPTION NUMBER(10,0),
		CE_DAY_T_ID NUMBER(10,0),
		CE_DATEFROM TIMESTAMP_NTZ(9),
		CE_TIMEFROM TIMESTAMP_NTZ(9),
		REQ_CORRECTION_TYPE NUMBER(10,0),
		ERROR_FLAG BOOLEAN,
		NOTES BINARY(8388608),
		ASSOCIATION_NORMAL NUMBER(5,0),
		ASSOCIATION_CE NUMBER(5,0),
		LOCATION_MARK_ID NUMBER(10,0),
		ACTION VARCHAR(100),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		EMPLOYEE_NO BINARY(8388608),
		FIRSTNAME BINARY(8388608),
		LASTNAME BINARY(8388608),
		TIME_CONSUMPTION NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_PROCESSED_TRANSACTIONS primary key (LOGG_ID, TRANS_ID, SUB_ID)
	);
	create or replace TABLE PROCESSED_TRANSACTIONS_2020 cluster by (BARCODE_NO)(
		LOGG_ID NUMBER(38,0),
		TRANS_ID NUMBER(38,0),
		SUB_ID NUMBER(38,0),
		GD_ID NUMBER(38,0),
		PROD_OBJ_ID NUMBER(38,0),
		LOC_OBJ_ID NUMBER(38,0),
		MULTIPLICATION_FACTOR NUMBER(38,0),
		REPORT_NOTES BINARY(8388608),
		COMMITMENT_ID NUMBER(38,0),
		POSITION BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		BARCODE_DATE TIMESTAMP_NTZ(9),
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(16),
		BARCODE_GROUP NUMBER(10,0),
		BARCODE_TYPE NUMBER(10,0),
		LOC_MARK_TYPE NUMBER(10,0),
		REQUIRED BOOLEAN,
		EMPLOYEE_ID NUMBER(10,0),
		VALID_ASSOCIATION BOOLEAN,
		DAY_T_ID NUMBER(10,0),
		VERSION_FROM TIMESTAMP_NTZ(9),
		ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
		CE_VALID_ASSOCIATION BOOLEAN,
		CE_COMMITMENT_ID NUMBER(10,0),
		CE_EXCEPTION NUMBER(10,0),
		CE_DAY_T_ID NUMBER(10,0),
		CE_DATEFROM TIMESTAMP_NTZ(9),
		CE_TIMEFROM TIMESTAMP_NTZ(9),
		REQ_CORRECTION_TYPE NUMBER(10,0),
		ERROR_FLAG BOOLEAN,
		NOTES BINARY(8388608),
		ASSOCIATION_NORMAL NUMBER(5,0),
		ASSOCIATION_CE NUMBER(5,0),
		LOCATION_MARK_ID NUMBER(10,0),
		ACTION VARCHAR(100),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		EMPLOYEE_NO BINARY(8388608),
		FIRSTNAME BINARY(8388608),
		LASTNAME BINARY(8388608),
		TIME_CONSUMPTION NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255),
		ODS_MODIFIEDBY VARCHAR(255),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9)
	);
	create or replace TABLE PRODUCTION_OBJECT (
		PROD_OBJ_ID NUMBER(38,0) NOT NULL,
		PROD_OBJ_NO BINARY(8388608),
		DESCRIPTION VARCHAR(4000),
		ADDRESS BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		POSTDELIVERY_ADDRESS BINARY(8388608),
		POSTCODE BINARY(8388608),
		POSTADDRESS BINARY(8388608),
		REF_PERSON BINARY(8388608),
		TELEPHONE BINARY(8388608),
		TELEFAX BINARY(8388608),
		TELEMODEM BINARY(8388608),
		XPOS BINARY(8388608),
		YPOS BINARY(8388608),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ADDRESS_2 BINARY(8388608),
		POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_PRODUCTION_OBJECT primary key (PROD_OBJ_ID)
	);
	create or replace TABLE PROD_CUST_OBJECT (
		PROD_OBJ_ID NUMBER(10,0),
		CUST_OBJ_ID NUMBER(10,0),
		DATEFROM TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (PROD_OBJ_ID, CUST_OBJ_ID)
	);
	create or replace TABLE PROFITCENTER (
		PROFITCENTER_ID NUMBER(38,0) NOT NULL,
		PROFITCENTER_NO VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		RESPONSIBLE BINARY(8388608),
		DESCRIPTION VARCHAR(60),
		DATEFROM TIMESTAMP_NTZ(9),
		DATETO TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		POSITION_TYPE_REF NUMBER(10,0),
		VISIBLE BOOLEAN,
		CO_OWNERSHIP_ALLOWED NUMBER(10,0),
		KPISTARTDATE TIMESTAMP_NTZ(9),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_PROFITCENTER primary key (PROFITCENTER_ID)
	);
	create or replace TABLE REPORT_MARK cluster by (REP_MARK_TYPE_ID, BARCODE)(
		REPORT_MARK_ID NUMBER(38,0) NOT NULL,
		REPORT_LABEL VARCHAR(4000),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		REP_MARK_TYPE_ID NUMBER(10,0),
		BARCODE VARCHAR(20),
		ACTIVITY_CODE VARCHAR(1),
		TIMELIMIT_CODE VARCHAR(3),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		REPORT_MARK_VERSION NUMBER(5,0),
		RISK_LEVEL NUMBER(10,0),
		SYSTEM BOOLEAN,
		REPORT_FOLDER_LABEL VARCHAR(30),
		STATISTICS_MEMBER NUMBER(10,0),
		CODE VARCHAR(10),
		REPORT_LABEL_2 VARCHAR(60),
		REPORT_MARK_SET_ONLY NUMBER(10,0),
		SBA NUMBER(10,0),
		REPORT_LABEL_GCS_SYNC VARCHAR(60),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_REPORT_MARK primary key (REPORT_MARK_ID)
	);
	create or replace TABLE REPORT_MARK_CULTURE (
		REPORT_MARK_ID NUMBER(10,0),
		CULTURE_ID NUMBER(10,0),
		REPORT_LABEL VARCHAR(60),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (REPORT_MARK_ID, CULTURE_ID)
	);
	create or replace TABLE SFU_COMMITMENTPERFORMED (
		COMMITMENT_ID NUMBER(10,0),
		DATEPERFORMED TIMESTAMP_NTZ(9),
		GD_ID NUMBER(10,0),
		GD_STARTDATE TIMESTAMP_NTZ(9),
		EMPLOYEE_ID NUMBER(10,0),
		CUST_OBJ_ID NUMBER(10,0),
		STARTDATETIME TIMESTAMP_NTZ(9),
		STOPDATATIME TIMESTAMP_NTZ(9),
		LOGG_ID NUMBER(10,0),
		NOREPORTS NUMBER(10,0),
		NOATTACHMENTS NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ROWID VARCHAR(16),
		MANUALREGISTRATIONDATETIME TIMESTAMP_NTZ(9),
		START_TRANS_ID NUMBER(10,0),
		STOP_TRANS_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (COMMITMENT_ID, DATEPERFORMED)
	);
	create or replace TABLE SFU_COMMITMENTPERFORMEDEXTRAVISITS (
		SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID NUMBER(10,0),
		COMMITMENT_ID NUMBER(10,0),
		DATEPERFORMED TIMESTAMP_NTZ(9),
		GD_ID NUMBER(10,0),
		GD_STARTDATE TIMESTAMP_NTZ(9),
		EMPLOYEE_ID NUMBER(10,0),
		CUST_OBJ_ID NUMBER(10,0),
		STARTDATETIME TIMESTAMP_NTZ(9),
		STOPDATATIME TIMESTAMP_NTZ(9),
		LOGG_ID NUMBER(10,0),
		NOREPORTS NUMBER(10,0),
		NOATTACHMENTS NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ROWID VARCHAR(16),
		MANUALREGISTRATIONDATETIME TIMESTAMP_NTZ(9),
		START_TRANS_ID NUMBER(10,0),
		STOP_TRANS_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID)
	);
	create or replace TABLE TEMP_TRANSACTIONS (
		LOGG_ID NUMBER(38,0) NOT NULL,
		TRANS_ID NUMBER(38,0) NOT NULL,
		BARCODE_TIME TIMESTAMP_NTZ(9),
		BARCODE_NO VARCHAR(4000),
		BARCODE_GROUP NUMBER(10,0),
		LATITUDE BINARY(8388608),
		LONGITUDE BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		NOTES BINARY(8388608),
		ADJUSTED_GD_ID NUMBER(10,0),
		ADJUSTED_EMPLOYEE_ID NUMBER(10,0),
		MUASSIGNMENT_ID NUMBER(10,0),
		REPORT_NOTES BINARY(8388608),
		MULTIPLICATION_FACTOR NUMBER(10,0),
		ASSIGNMENTPLANNEDID VARCHAR(20),
		IS_FINGERSCANNED BOOLEAN,
		GPSTIMESTAMP TIMESTAMP_NTZ(9),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_TEMP_TRANSACTIONS primary key (LOGG_ID, TRANS_ID)
	);
	create or replace TABLE TEMP_TRANSACTIONS_ATTACHMENT (
		TEMP_TRANSACTIONS_ATTACHMENT_ID NUMBER(10,0),
		STATISTICSATTACHMENT_ID VARCHAR(36),
		LOGG_ID NUMBER(10,0),
		TRANS_ID NUMBER(10,0),
		ATTACHMENT VARCHAR(16777216),
		CHECKSUM VARCHAR(10),
		MIMETYPE VARCHAR(40),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		ROWID VARCHAR(16),
		GCS_IMPORTTRANSACTIONSFORMRESPONSE_ID NUMBER(10,0),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ATTACHMENT_BASESTR VARCHAR(16777216),
		constraint PK_CONTR_PART_VER primary key (TEMP_TRANSACTIONS_ATTACHMENT_ID)
	);
	create or replace TABLE TEMP_TRANSACTIONS_ATTACHMENT_CULTURE (
		TEMP_TRANSACTIONS_ATTACHMENT_CULTURE_ID NUMBER(10,0),
		TEMP_TRANSACTIONS_ATTACHMENT_ID NUMBER(10,0),
		ATTACHMENT VARCHAR(16777216),
		MIMETYPE VARCHAR(40),
		CULTURE_ID NUMBER(10,0),
		INSERT_USER VARCHAR(254),
		INSERT_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER VARCHAR(254),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		ROWID VARCHAR(16),
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ATTACHMENT_BASESTR VARCHAR(16777216),
		constraint PK_CONTR_PART_VER primary key (TEMP_TRANSACTIONS_ATTACHMENT_CULTURE_ID)
	);
	create or replace TABLE USERS (
		USER_ID NUMBER(10,0),
		USER_NO BINARY(8388608),
		USER_NAME BINARY(8388608),
		INSERT_DATE TIMESTAMP_NTZ(9),
		INSERT_USER BINARY(8388608),
		CHANGE_DATE TIMESTAMP_NTZ(9),
		CHANGE_USER BINARY(8388608),
		ROWID VARCHAR(16),
		VALIDFROM TIMESTAMP_NTZ(9),
		VALIDTO TIMESTAMP_NTZ(9),
		ONLINEUSER BOOLEAN,
		CULTURE_ID NUMBER(10,0),
		SUPERUSER BOOLEAN,
		ODS_SRC_SYSTEM_ID NUMBER(38,0),
		ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_CONTR_PART_VER primary key (USER_ID)
	);

	create or replace view CUSTOMER_KEY as (select src.CUSTOMER_ID, key_1.CLIENT_ID as DW_CLIENT_ID FROM ODS_GRS_NO.DBO.CUSTOMER src  LEFT OUTER JOIN DW.KEY.CLIENT key_1 ON key_1.keymap_id = 1 AND key_1.COLUMN_VALUE_LIST = ARRAY_CONSTRUCT(TO_VARCHAR(src.CUSTOMER_ID)) );

	
	-- create or replace masking policy MASK_DECRYPT_CHAR as (VAL BINARY(8388608)) 
	-- returns BINARY(8388608) -->
	-- case
	  -- ----when arrays_overlap(array_construct(CURRENT_ROLE()),(select valid_roles from key_store where table_catalog='TM_EXP')) then decrypt(val,(select key_value from key_store where table_catalog='TM_EXP'))
	  -- ----else null  ---- due to type mismatch issues, cannot return actual val
	  -- WHEN IS_ROLE_IN_SESSION('DECRYPT_ODS_GRS_NO') = TRUE
		-- THEN DECRYPT(val,(select PASSPHRASE from DW.CONTROL.keystore where TABLE_CATALOG=CURRENT_DATABASE()),(select KEY_VALUE from DW.CONTROL.keystore where TABLE_CATALOG=CURRENT_DATABASE()),(select ADVANCED_ENCRYPTION_STD from DW.CONTROL.keystore where TABLE_CATALOG=CURRENT_DATABASE()))
	  -- ELSE NULL
	-- end
--	;

	----ODS_GRS_NO_MP END----




	----create or replace database AUDIT;

	----create or replace schema AUDIT.BASE;

	use schema AUDIT.BASE;

	-- create or replace TABLE DBGRANTS (
		-- CREATED_ON TIMESTAMP_LTZ(9),
		-- PRIVILEGE VARCHAR(16777216),
		-- GRANTED_ON VARCHAR(16777216),
		-- NAME VARCHAR(16777216),
		-- GRANTED_TO VARCHAR(16777216),
		-- GRANTEE_NAME VARCHAR(16777216),
		-- GRANT_OPTION VARCHAR(16777216),
		-- GRANTED_BY VARCHAR(16777216),
		-- REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
	-- )COMMENT='stores snapshot of current grants'
	-- ;
	-- create or replace TABLE DBROLES (
		-- CREATED_ON TIMESTAMP_LTZ(9),
		-- NAME VARCHAR(16777216),
		-- IS_DEFAULT VARCHAR(16777216),
		-- IS_CURRENT VARCHAR(16777216),
		-- IS_INHERITED VARCHAR(16777216),
		-- ASSIGNED_TO_USERS NUMBER(38,0),
		-- GRANTED_TO_ROLES NUMBER(38,0),
		-- GRANTED_ROLES NUMBER(38,0),
		-- OWNER VARCHAR(16777216),
		-- RCOMMENT VARCHAR(16777216),
		-- REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
	-- )COMMENT='stores snapshot of current snowflake roles'
	-- ;
	-- create or replace TABLE DBUSERS (
		-- NAME VARCHAR(16777216),
		-- CREATED_ON TIMESTAMP_LTZ(9),
		-- LOGIN_NAME VARCHAR(16777216),
		-- DISPLAY_NAME VARCHAR(16777216),
		-- FIRST_NAME VARCHAR(16777216),
		-- LAST_NAME VARCHAR(16777216),
		-- EMAIL VARCHAR(16777216),
		-- MINS_TO_UNLOCK VARCHAR(16777216),
		-- DAYS_TO_EXPIRY VARCHAR(16777216),
		-- TCOMMENT VARCHAR(16777216),
		-- DISABLED VARCHAR(16777216),
		-- MUST_CHANGE_PASSWORD VARCHAR(16777216),
		-- SNOWFLAKE_LOCK VARCHAR(16777216),
		-- DEFAULT_WAREHOUSE VARCHAR(16777216),
		-- DEFAULT_NAMESPACE VARCHAR(16777216),
		-- DEFAULT_ROLE VARCHAR(16777216),
		-- EXT_AUTHN_DUO VARCHAR(16777216),
		-- EXT_AUTHN_UID VARCHAR(16777216),
		-- MINS_TO_BYPASS_MFA VARCHAR(16777216),
		-- OWNER VARCHAR(16777216),
		-- LAST_SUCCESS_LOGIN TIMESTAMP_LTZ(9),
		-- EXPIRES_AT_TIME TIMESTAMP_LTZ(9),
		-- LOCKED_UNTIL_TIME TIMESTAMP_LTZ(9),
		-- HAS_PASSWORD VARCHAR(16777216),
		-- HAS_RSA_PUBLIC_KEY VARCHAR(16777216),
		-- REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
	-- )COMMENT='stores snapshot of current snowflake users'
	-- ;

	create or replace TABLE MATILLION_DETAIL (
		ID VARCHAR(2000) NOT NULL,
		TYPE VARCHAR(2000),
		JOBTIMESTAMP VARCHAR(2000),
		COMPONENTNAME VARCHAR(2000),
		STATE VARCHAR(2000),
		ROWCOUNT VARCHAR(2000),
		STARTTIME VARCHAR(2000),
		ENDTIME VARCHAR(2000),
		MESSAGE VARCHAR(2000),
		AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
		AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_MATILLION_DETAIL primary key (ID)
	);
	create or replace TABLE MATILLION_LOG (
		ID NUMBER(38,0) NOT NULL,
		JOB_TYPE VARCHAR(1024),
		GROUPNAME VARCHAR(1024),
		PROJECTNAME VARCHAR(1024),
		VERSIONID NUMBER(38,0),
		VERSIONNAME VARCHAR(1024),
		ENVIRONMENTNAME VARCHAR(1024),
		JOBNAME VARCHAR(1024),
		JOB_STATE VARCHAR(250),
		JOB_ENQUEUEDTIME TIMESTAMP_LTZ(9),
		JOB_STARTTIME TIMESTAMP_LTZ(9),
		JOB_ENDTIME TIMESTAMP_LTZ(9),
		JOB_MESSAGE VARCHAR(1024),
		COMPONENT_TYPE VARCHAR(1024),
		JOB_TIMESTAMP TIMESTAMP_LTZ(9),
		COMPONENT_NAME VARCHAR(1024),
		COMPONENT_STATE VARCHAR(256),
		ROWCOUNT NUMBER(38,0),
		COMPONENT_STARTTIME TIMESTAMP_LTZ(9),
		COMPONENT_ENDTIME TIMESTAMP_LTZ(9),
		COMPONENT_MESSAGE VARCHAR(16777216),
		AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
		AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_MATILLION_LOG primary key (ID)
	);
	create or replace TABLE MATILLION_SUMMARY (
		ID VARCHAR(2000) NOT NULL,
		TYPE VARCHAR(2000),
		GROUPNAME VARCHAR(2000),
		PROJECTNAME VARCHAR(2000),
		VERSIONID VARCHAR(2000),
		VERSIONNAME VARCHAR(2000),
		ENVIRONMENTNAME VARCHAR(2000),
		JOBNAME VARCHAR(2000),
		STATE VARCHAR(2000),
		ENQUEUEDTIME VARCHAR(2000),
		STARTTIME VARCHAR(2000),
		ENDTIME VARCHAR(2000),
		MESSAGE VARCHAR(2000),
		AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
		AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
		AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
		constraint PK_MATILLION_SUMMARY primary key (ID)
	);
	create or replace TABLE STG_MATILLION_DETAIL (
		"id" VARCHAR(2000),
		"type" VARCHAR(2000),
		"jobTimestamp" VARCHAR(2000),
		"componentName" VARCHAR(2000),
		"state" VARCHAR(2000),
		"rowCount" VARCHAR(2000),
		"startTime" VARCHAR(2000),
		"endTime" VARCHAR(2000),
		"message" VARCHAR(2000),
		"since" VARCHAR(2000)
	);
	create or replace TABLE STG_MATILLION_SUMMARY (
		"id" VARCHAR(2000),
		"type" VARCHAR(2000),
		"groupName" VARCHAR(2000),
		"projectName" VARCHAR(2000),
		"versionID" VARCHAR(2000),
		"versionName" VARCHAR(2000),
		"environmentName" VARCHAR(2000),
		"jobName" VARCHAR(2000),
		"state" VARCHAR(2000),
		"enqueuedTime" VARCHAR(2000),
		"startTime" VARCHAR(2000),
		"endTime" VARCHAR(2000),
		"message" VARCHAR(2000)
	);

	-- CREATE OR REPLACE PROCEDURE "SNAPSHOT_GRANTS"()
	-- RETURNS VARCHAR(16777216)
	-- LANGUAGE JAVASCRIPT
	-- EXECUTE AS CALLER
	-- AS '
		-- function role_grants() {
			-- var obj_rs = snowflake.execute({sqlText: ''SELECT NAME FROM DBROLES;''});
			-- while(obj_rs.next()) {
				-- snowflake.execute({sqlText: `show grants to role ` + obj_rs.getColumnValue(1) + ` ;` });
				-- snowflake.execute( {sqlText: `insert into dbgrants select *, CURRENT_TIMESTAMP() from table(result_scan(last_query_id()));`});
				-- snowflake.execute({sqlText: `show grants on role ` + obj_rs.getColumnValue(1) + ` ;` });
				-- snowflake.execute( {sqlText: `insert into dbgrants select *, CURRENT_TIMESTAMP() from table(result_scan(last_query_id()));`});
			-- }
		-- }// — — — — — — — — — — — — — — — — — — — — — — — —
		-- function user_grants() {
			-- var obj_rs = snowflake.execute({sqlText: `SELECT NAME FROM DBUSERS;`});
			-- while(obj_rs.next()) {
				-- snowflake.execute({sqlText: `show grants to user "` + obj_rs.getColumnValue(1) + `" ;` });
				-- snowflake.execute( {sqlText:`insert into dbgrants select *,null,null,null,CURRENT_TIMESTAMP() from table(result_scan(last_query_id()));`});
				-- snowflake.execute({sqlText: `show grants on user "` + obj_rs.getColumnValue(1) + `" ;` });
				-- snowflake.execute( {sqlText:`insert into dbgrants select *,CURRENT_TIMESTAMP() from table(result_scan(last_query_id()));`});
			-- }
		-- }// — — — — — — — — — — — — — — — — — — — — — — — —
		-- var result = ''SUCCESS'';
		-- try {
			-- snowflake.execute( {sqlText: ''truncate table DBGRANTS;''} );
			-- role_grants();
			-- user_grants();
		-- } 
		-- catch (err) {
			-- result = ''FAILED: Code: '' + err.code + ''\\n State: '' + err.state;
			-- result += ''\\n Message: '' + err.message;
			-- result += ''\\nStack Trace:\\n'' + err.stackTraceTxt;
		-- }
		-- return result;
	-- ';
	-- CREATE OR REPLACE PROCEDURE "SNAPSHOT_ROLES"()
	-- RETURNS VARCHAR(16777216)
	-- LANGUAGE JAVASCRIPT
	-- EXECUTE AS CALLER
	-- AS '
		-- var result = ''SUCCESS'';
		-- try {
			-- snowflake.execute( {sqlText: ''truncate table DBROLES;''} );
			-- snowflake.execute( {sqlText: ''show roles;''} );
			-- var dbroles_tbl_sql = `insert into dbroles select *,CURRENT_TIMESTAMP() from table(result_scan(last_query_id()));`;
			-- snowflake.execute( {sqlText: dbroles_tbl_sql} );
		-- } 
		-- catch (err) {
			-- result = ''FAILED: Code: '' + err.code + ''\\n State: '' + err.state;result += ''\\n Message: '' + err.message;result += ''\\nStack Trace:\\n'' + err.stackTraceTxt;
		-- }
		-- return result;
	-- ';
	-- CREATE OR REPLACE PROCEDURE "SNAPSHOT_USERS"()
	-- RETURNS VARCHAR(16777216)
	-- LANGUAGE JAVASCRIPT
	-- EXECUTE AS CALLER
	-- AS ' 
		-- var result = ''SUCCESS'';
		-- try {
			-- snowflake.execute( {sqlText: ''TRUNCATE TABLE DBUSERS;''} );
			-- snowflake.execute( {sqlText: ''show users;''} );
			-- var dbusers_tbl_sql = `insert into dbusers select * ,CURRENT_TIMESTAMP() from table(result_scan(last_query_id()));`;
			-- snowflake.execute( {sqlText: dbusers_tbl_sql} );
		-- } 
		-- catch (err) {
			-- result = ''FAILED: Code: '' + err.code + ''\\n State: '' + err.state;result += ''\\n Message: '' + err.message;result += ''\\nStack Trace:\\n'' + err.stackTraceTxt;
		-- }
		-- return result;
	-- ';
	-- create or replace task TASK_SNAPSHOT_GRANTS
		-- warehouse=WH_DATA_LOAD
		-- after AUDIT.BASE.TASK_SNAPSHOT_ROLES
		-- as call SNAPSHOT_GRANTS();
	-- create or replace task TASK_SNAPSHOT_ROLES
		-- warehouse=WH_DATA_LOAD
		-- after AUDIT.BASE.TASK_SNAPSHOT_USERS
		-- as call SNAPSHOT_ROLES();
	-- create or replace task TASK_SNAPSHOT_USERS
		-- warehouse=WH_DATA_LOAD
		-- schedule='USING CRON 00 12 * * * Europe/Amsterdam'
		-- as call SNAPSHOT_USERS();


		
	--AUDIT END----------------------------------------------------------------------------------------------

	drop database DATASCIENCE;
	create or replace database DATASCIENCE;
	create or replace schema DATASCIENCE.DBO;

	------DATASCIENCE  END --------------------------------------
