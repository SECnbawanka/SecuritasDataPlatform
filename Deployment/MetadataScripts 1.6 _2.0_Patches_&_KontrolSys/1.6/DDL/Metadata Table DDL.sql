USE ROLE SYSADMIN;

CREATE OR REPLACE DATABASE AUDIT;

CREATE OR REPLACE SCHEMA AUDIT.BASE;

CREATE OR REPLACE TABLE AUDIT.BASE.DBGRANTS (
	CREATED_ON TIMESTAMP_LTZ(9),
	PRIVILEGE VARCHAR(16777216),
	GRANTED_ON VARCHAR(16777216),
	NAME VARCHAR(16777216),
	GRANTED_TO VARCHAR(16777216),
	GRANTEE_NAME VARCHAR(16777216),
	GRANT_OPTION VARCHAR(16777216),
	GRANTED_BY VARCHAR(16777216),
	REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
);
CREATE OR REPLACE TABLE AUDIT.BASE.DBROLES (
	CREATED_ON TIMESTAMP_LTZ(9),
	NAME VARCHAR(16777216),
	IS_DEFAULT VARCHAR(16777216),
	IS_CURRENT VARCHAR(16777216),
	IS_INHERITED VARCHAR(16777216),
	ASSIGNED_TO_USERS NUMBER(38,0),
	GRANTED_TO_ROLES NUMBER(38,0),
	GRANTED_ROLES NUMBER(38,0),
	OWNER VARCHAR(16777216),
	RCOMMENT VARCHAR(16777216),
	REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
);
CREATE OR REPLACE TABLE AUDIT.BASE.DBUSERS (
	NAME VARCHAR(16777216),
	CREATED_ON TIMESTAMP_LTZ(9),
	LOGIN_NAME VARCHAR(16777216),
	DISPLAY_NAME VARCHAR(16777216),
	FIRST_NAME VARCHAR(16777216),
	LAST_NAME VARCHAR(16777216),
	EMAIL VARCHAR(16777216),
	MINS_TO_UNLOCK VARCHAR(16777216),
	DAYS_TO_EXPIRY VARCHAR(16777216),
	TCOMMENT VARCHAR(16777216),
	DISABLED VARCHAR(16777216),
	MUST_CHANGE_PASSWORD VARCHAR(16777216),
	SNOWFLAKE_LOCK VARCHAR(16777216),
	DEFAULT_WAREHOUSE VARCHAR(16777216),
	DEFAULT_NAMESPACE VARCHAR(16777216),
	DEFAULT_ROLE VARCHAR(16777216),
	EXT_AUTHN_DUO VARCHAR(16777216),
	EXT_AUTHN_UID VARCHAR(16777216),
	MINS_TO_BYPASS_MFA VARCHAR(16777216),
	OWNER VARCHAR(16777216),
	LAST_SUCCESS_LOGIN TIMESTAMP_LTZ(9),
	EXPIRES_AT_TIME TIMESTAMP_LTZ(9),
	LOCKED_UNTIL_TIME TIMESTAMP_LTZ(9),
	HAS_PASSWORD VARCHAR(16777216),
	HAS_RSA_PUBLIC_KEY VARCHAR(16777216),
	REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
);
CREATE OR REPLACE TABLE AUDIT.BASE.MATILLION_DETAIL (
	ID VARCHAR(2000) NOT NULL,
	TYPE VARCHAR(2000),
	JOBTIMESTAMP VARCHAR(2000),
	COMPONENTNAME VARCHAR(2000),
	STATE VARCHAR(2000),
	ROWCOUNT VARCHAR(2000),
	STARTTIME VARCHAR(2000),
	ENDTIME VARCHAR(2000),
	MESSAGE VARCHAR(2000),
	AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
	AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_MATILLION_DETAIL PRIMARY KEY (ID)
);
CREATE OR REPLACE TABLE AUDIT.BASE.MATILLION_LOG (
	ID NUMBER(38,0) NOT NULL,
	JOB_TYPE VARCHAR(1024),
	GROUPNAME VARCHAR(1024),
	PROJECTNAME VARCHAR(1024),
	VERSIONID NUMBER(38,0),
	VERSIONNAME VARCHAR(1024),
	ENVIRONMENTNAME VARCHAR(1024),
	JOBNAME VARCHAR(1024),
	JOB_STATE VARCHAR(250),
	JOB_ENQUEUEDTIME TIMESTAMP_LTZ(9),
	JOB_STARTTIME TIMESTAMP_LTZ(9),
	JOB_ENDTIME TIMESTAMP_LTZ(9),
	JOB_MESSAGE VARCHAR(1024),
	COMPONENT_TYPE VARCHAR(1024),
	JOB_TIMESTAMP TIMESTAMP_LTZ(9),
	COMPONENT_NAME VARCHAR(1024),
	COMPONENT_STATE VARCHAR(256),
	ROWCOUNT NUMBER(38,0),
	COMPONENT_STARTTIME TIMESTAMP_LTZ(9),
	COMPONENT_ENDTIME TIMESTAMP_LTZ(9),
	COMPONENT_MESSAGE VARCHAR(16777216),
	AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
	AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_MATILLION_LOG PRIMARY KEY (ID)
);
CREATE OR REPLACE TABLE AUDIT.BASE.MATILLION_SUMMARY (
	ID VARCHAR(2000) NOT NULL,
	TYPE VARCHAR(2000),
	GROUPNAME VARCHAR(2000),
	PROJECTNAME VARCHAR(2000),
	VERSIONID VARCHAR(2000),
	VERSIONNAME VARCHAR(2000),
	ENVIRONMENTNAME VARCHAR(2000),
	JOBNAME VARCHAR(2000),
	STATE VARCHAR(2000),
	ENQUEUEDTIME VARCHAR(2000),
	STARTTIME VARCHAR(2000),
	ENDTIME VARCHAR(2000),
	MESSAGE VARCHAR(2000),
	AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
	AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_MATILLION_SUMMARY PRIMARY KEY (ID)
);
CREATE OR REPLACE TABLE AUDIT.BASE.STG_MATILLION_DETAIL (
	"ID" VARCHAR(2000),
	"TYPE" VARCHAR(2000),
	"JOBTIMESTAMP" VARCHAR(2000),
	"COMPONENTNAME" VARCHAR(2000),
	"STATE" VARCHAR(2000),
	"ROWCOUNT" VARCHAR(2000),
	"STARTTIME" VARCHAR(2000),
	"ENDTIME" VARCHAR(2000),
	"MESSAGE" VARCHAR(2000),
	"SINCE" VARCHAR(2000)
);
CREATE OR REPLACE TABLE AUDIT.BASE.STG_MATILLION_SUMMARY (
	"ID" VARCHAR(2000),
	"TYPE" VARCHAR(2000),
	"GROUPNAME" VARCHAR(2000),
	"PROJECTNAME" VARCHAR(2000),
	"VERSIONID" VARCHAR(2000),
	"VERSIONNAME" VARCHAR(2000),
	"ENVIRONMENTNAME" VARCHAR(2000),
	"JOBNAME" VARCHAR(2000),
	"STATE" VARCHAR(2000),
	"ENQUEUEDTIME" VARCHAR(2000),
	"STARTTIME" VARCHAR(2000),
	"ENDTIME" VARCHAR(2000),
	"MESSAGE" VARCHAR(2000)
);
CREATE OR REPLACE PROCEDURE "SNAPSHOT_GRANTS"()
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS '
	FUNCTION ROLE_GRANTS() {
		VAR OBJ_RS = SNOWFLAKE.EXECUTE({SQLTEXT: ''SELECT NAME FROM DBROLES;''});
		WHILE(OBJ_RS.NEXT()) {
            SNOWFLAKE.EXECUTE({SQLTEXT: `SHOW GRANTS TO ROLE ` + OBJ_RS.GETCOLUMNVALUE(1) + ` ;` });
			SNOWFLAKE.EXECUTE( {SQLTEXT: `INSERT INTO DBGRANTS SELECT *, CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`});
			SNOWFLAKE.EXECUTE({SQLTEXT: `SHOW GRANTS ON ROLE ` + OBJ_RS.GETCOLUMNVALUE(1) + ` ;` });
			SNOWFLAKE.EXECUTE( {SQLTEXT: `INSERT INTO DBGRANTS SELECT *, CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`});
		}
	}// — — — — — — — — — — — — — — — — — — — — — — — —
	FUNCTION USER_GRANTS() {
		VAR OBJ_RS = SNOWFLAKE.EXECUTE({SQLTEXT: `SELECT NAME FROM DBUSERS;`});
		WHILE(OBJ_RS.NEXT()) {
			SNOWFLAKE.EXECUTE({SQLTEXT: `SHOW GRANTS TO USER "` + OBJ_RS.GETCOLUMNVALUE(1) + `" ;` });
			SNOWFLAKE.EXECUTE( {SQLTEXT:`INSERT INTO DBGRANTS SELECT *,NULL,NULL,NULL,CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`});
			SNOWFLAKE.EXECUTE({SQLTEXT: `SHOW GRANTS ON USER "` + OBJ_RS.GETCOLUMNVALUE(1) + `" ;` });
			SNOWFLAKE.EXECUTE( {SQLTEXT:`INSERT INTO DBGRANTS SELECT *,CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`});
		}
	}// — — — — — — — — — — — — — — — — — — — — — — — —
	VAR RESULT = ''SUCCESS'';
	TRY {
		SNOWFLAKE.EXECUTE( {SQLTEXT: ''TRUNCATE TABLE DBGRANTS;''} );
		ROLE_GRANTS();
		USER_GRANTS();
	} 
	CATCH (ERR) {
		RESULT = ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;
		RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;
		RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;
	}
	RETURN RESULT;
';
CREATE OR REPLACE PROCEDURE "SNAPSHOT_ROLES"()
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS '
	VAR RESULT = ''SUCCESS'';
	TRY {
		SNOWFLAKE.EXECUTE( {SQLTEXT: ''TRUNCATE TABLE DBROLES;''} );
		SNOWFLAKE.EXECUTE( {SQLTEXT: ''SHOW ROLES;''} );
		VAR DBROLES_TBL_SQL = `INSERT INTO DBROLES SELECT *,CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`;
		SNOWFLAKE.EXECUTE( {SQLTEXT: DBROLES_TBL_SQL} );
	} 
	CATCH (ERR) {
		RESULT = ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;
	}
	RETURN RESULT;
';
CREATE OR REPLACE PROCEDURE "SNAPSHOT_USERS"()
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS ' 
    VAR RESULT = ''SUCCESS'';
    TRY {
        SNOWFLAKE.EXECUTE( {SQLTEXT: ''TRUNCATE TABLE DBUSERS;''} );
        SNOWFLAKE.EXECUTE( {SQLTEXT: ''SHOW USERS;''} );
        VAR DBUSERS_TBL_SQL = `INSERT INTO DBUSERS SELECT * ,CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`;
        SNOWFLAKE.EXECUTE( {SQLTEXT: DBUSERS_TBL_SQL} );
	} 
	CATCH (ERR) {
		RESULT = ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;
	}
	RETURN RESULT;
';
CREATE OR REPLACE TASK TASK_SNAPSHOT_GRANTS
	WAREHOUSE=WH_DATA_LOAD
	AFTER AUDIT.BASE.TASK_SNAPSHOT_ROLES
	AS CALL SNAPSHOT_GRANTS();
CREATE OR REPLACE TASK TASK_SNAPSHOT_ROLES
	WAREHOUSE=WH_DATA_LOAD
	AFTER AUDIT.BASE.TASK_SNAPSHOT_USERS
	AS CALL SNAPSHOT_ROLES();
CREATE OR REPLACE TASK TASK_SNAPSHOT_USERS
	WAREHOUSE=WH_DATA_LOAD
	SCHEDULE='USING CRON 00 12 * * * AMERICA/NEW_YORK'
	AS CALL SNAPSHOT_USERS();

CREATE OR REPLACE DATABASE DW;

CREATE OR REPLACE SCHEMA DW.BASE;

CREATE OR REPLACE SCHEMA DW.CONTROL;

CREATE OR REPLACE TABLE DW.CONTROL.COLUMNDETAILS (
	SOURCESYSTEMID NUMBER(38,0) NOT NULL,
	STAGEDATABASENAME VARCHAR(100),
	STAGESCHEMANAME VARCHAR(100),
	STAGETABLENAME VARCHAR(100),
	STAGETABLECOLUMN VARCHAR(100),
	ODSDATABASENAME VARCHAR(100),
	ODSSCHEMANAME VARCHAR(100),
	ODSTABLENAME VARCHAR(100),
	ODSTABLECOLUMN VARCHAR(100),
	ACTIVEFLAG BOOLEAN DEFAULT FALSE,
	ISPSEUDONYMISED BOOLEAN DEFAULT FALSE,
	EXPRESSIONS VARCHAR(100),
	CREATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
	CREATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	LASTUPDATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
	LASTUPDATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ISPKEY BOOLEAN,
	DATATYP VARCHAR(100),
	CONSTRAINT PK_COLUMNDETAILS PRIMARY KEY (SOURCESYSTEMID, STAGESCHEMANAME, STAGETABLENAME, STAGETABLECOLUMN)
);
CREATE OR REPLACE TABLE DW.CONTROL.KEYSTORE (
	TABLE_CATALOG VARCHAR(100),
	SOURCESYSTEM VARCHAR(100),
	SOURCESYSTEMID ARRAY,
	KEY_VALUE VARCHAR(100),
	PASSPHRASE VARCHAR(100),
	ADVANCED_ENCRYPTION_STD VARCHAR(100),
	DW_SRC_SYSTEM_ID NUMBER(38,0),
	DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_KEYSTORE PRIMARY KEY (TABLE_CATALOG)
);
CREATE OR REPLACE TABLE DW.CONTROL.KEY_STORE (
	SOURCESYSTEM VARCHAR(100),
	SOURCESYSTEMID ARRAY,
	KEY_VALUE VARCHAR(100),
	PASSPHARSE VARCHAR(100),
	ADVANCED_ENCRYPTION_STD VARCHAR(100),
	VALID_ROLES ARRAY,
	TABLE_CATALOG VARCHAR(100),
	PASSPHRASE VARCHAR(100),
	DW_SRC_SYSTEM_ID NUMBER(38,0)
);
CREATE OR REPLACE TABLE DW.CONTROL.LOADPROCESS (
	SOURCESYSTEMID NUMBER(38,0) NOT NULL,
	SOURCESCHEMANAME VARCHAR(100) NOT NULL,
	SOURCETABLENAME VARCHAR(100) NOT NULL,
	STAGESCHEMANAME VARCHAR(100),
	STAGETABLENAME VARCHAR(100),
	ODSSCHEMANAME VARCHAR(100),
	ODSTABLENAME VARCHAR(100),
	STAGETYPE VARCHAR(20),
	LOADTYPE VARCHAR(20),
	ACTIVEFLAG BOOLEAN DEFAULT FALSE,
	WATERMARKCOLUMNNAME VARCHAR(100) DEFAULT '2',
	WATERMARKDATATYPE VARCHAR(100),
	WATERMARKLASTVALUE VARCHAR(100) DEFAULT '1',
	LASTSTAGEDATETIME TIMESTAMP_LTZ(9),
	LASTLOADDATETIME TIMESTAMP_LTZ(9),
	CREATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
	CREATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	LASTUPDATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
	LASTUPDATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_PK VARCHAR(200),
	NRTFLAG BOOLEAN DEFAULT FALSE,
	ISRESTRICTED BOOLEAN,
	RESTRICTEDCOLUMNNAME VARCHAR(100),
	RESTRICTEDTABLENAME VARCHAR(100),
	SOURCE_SQL VARCHAR(4000),
	EXPRESSIONS VARCHAR(4000),
	RESTRICTEDTABLE_RANK NUMBER(38,0),
	ORPHANDELETE_EXPRESSIONS VARCHAR(16777216),
	ISORPHANDELETE BOOLEAN,
	CONSTRAINT PK_LOADPROCESS PRIMARY KEY (SOURCESYSTEMID, SOURCESCHEMANAME, SOURCETABLENAME)
);
CREATE OR REPLACE TABLE DW.CONTROL.LOGGING (
	LOGGING_ID NUMBER(38,0) NOT NULL,
	PROCESS_TYPE VARCHAR(100) NOT NULL,
	PROCESS_ID NUMBER(38,0),
	OBJECT_NAME VARCHAR(255),
	COMMAND VARCHAR(16777216) NOT NULL,
	RUN_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL,
	RUN_RESULT VARCHAR(100) NOT NULL,
	RECORDS_INSERTED NUMBER(38,0),
	RECORDS_UPDATED NUMBER(38,0),
	RECORDS_DELETED NUMBER(38,0),
	SRC_SYSTEM_ID NUMBER(38,0) NOT NULL,
	DW_SRC_SYSTEM_ID NUMBER(38,0),
	DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
);
CREATE OR REPLACE TABLE DW.CONTROL.PROCESS (
	PROCESS_ID NUMBER(38,0) NOT NULL,
	TABLE_CATALOG VARCHAR(200) NOT NULL,
	PROCESS_TYPE VARCHAR(100) NOT NULL,
	PROCESS_ORDER NUMBER(38,0) NOT NULL,
	LAST_RUN_TIMESTAMP TIMESTAMP_LTZ(9),
	NOTES VARCHAR(16777216),
	COMMAND VARCHAR(16777216),
	DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP()
);
CREATE OR REPLACE TABLE DW.CONTROL.SOURCESYSTEM (
	SOURCESYSTEMID NUMBER(38,0) NOT NULL,
	SOURCESYSTEMNAME VARCHAR(100) NOT NULL,
	SOURCEHOSTNAME VARCHAR(100),
	SOURCEDATABASENAME VARCHAR(100),
	SOURCEPORTNUMBER VARCHAR(10),
	SOURCECONNECTIONSTRING VARCHAR(100),
	SOURCEUSERID VARCHAR(50),
	SOURCEPASSWORD VARCHAR(50),
	SOURCECATALOGQUERY VARCHAR(1000),
	SOURCETIMEZONE VARCHAR(30),
	STAGEDATABASENAME VARCHAR(100),
	ODSDATABASENAME VARCHAR(100),
	ACTIVEFLAG BOOLEAN,
	CREATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
	CREATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	LASTUPDATEDUSERID VARCHAR(50) NOT NULL DEFAULT CURRENT_USER(),
	LASTUPDATEDDATETIME TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	DBMS VARCHAR(100),
	BACKUPSCHEMANAME VARCHAR(100),
	CONSTRAINT PK_SOURCESYSTEM PRIMARY KEY (SOURCESYSTEMID)
);

CREATE OR REPLACE SECURE VIEW SOURCESYSTEM_LOADPROCESS3 AS 
WITH PSEUDONYMISEDCOLUMNLISTEXP AS 
  (
	SELECT A.SOURCESYSTEMID,A.SOURCESYSTEMNAME,NVL(A.COLUMN_LIST||','||B.COLUMN_LIST_EXP,A.COLUMN_LIST) COLUMNLISTEXP,A.STAGEDATABASENAME,A.STAGETABLENAME FROM   
     (
     SELECT C.SOURCESYSTEMID,S.SOURCESYSTEMNAME,C.STAGEDATABASENAME,C.STAGETABLENAME,
    LISTAGG( NVL(EXPRESSIONS,'') || '  "' ||(STAGETABLECOLUMN) ||'" AS ' ||UPPER(STAGETABLECOLUMN), ',') 
        WITHIN GROUP (ORDER BY (C.STAGETABLENAME)) AS COLUMN_LIST
    FROM "DW"."CONTROL"."COLUMNDETAILS" C, "DW"."CONTROL"."SOURCESYSTEM" S WHERE 
    C.ACTIVEFLAG = 'TRUE' 
    AND NVL(ISPSEUDONYMISED,'FALSE')  = 'FALSE'
    AND C.SOURCESYSTEMID=S.SOURCESYSTEMID
   -- AND SOURCESYSTEMID=3 
    GROUP BY C.SOURCESYSTEMID,S.SOURCESYSTEMNAME,C.STAGEDATABASENAME,C.STAGETABLENAME) A 
    LEFT OUTER JOIN 
     (SELECT C.SOURCESYSTEMID,S.SOURCESYSTEMNAME,C.STAGEDATABASENAME,C.STAGETABLENAME,
    LISTAGG( NVL('ENCRYPT("'||C.STAGETABLECOLUMN||'",'||KS.PASSPHRASE||','''||KS.KEY_VALUE||''','''||KS.ADVANCED_ENCRYPTION_STD||''')','') || ' ' ||UPPER(C.STAGETABLECOLUMN), '  ,') 
        WITHIN GROUP (ORDER BY (C.STAGETABLENAME)) AS COLUMN_LIST_EXP
    FROM "DW"."CONTROL"."COLUMNDETAILS" C, "DW"."CONTROL"."KEYSTORE" KS, "DW"."CONTROL"."SOURCESYSTEM" S WHERE 
    C.ACTIVEFLAG = 'TRUE'
    AND C.ISPSEUDONYMISED  = 'TRUE' AND C.SOURCESYSTEMID=S.SOURCESYSTEMID AND S.SOURCESYSTEMNAME=KS.SOURCESYSTEM
    --AND C.SOURCESYSTEMID=3
    AND ARRAYS_OVERLAP(ARRAY_CONSTRUCT(C.SOURCESYSTEMID),KS.SOURCESYSTEMID) =TRUE
    AND TABLE_CATALOG=S.ODSDATABASENAME
    GROUP BY C.SOURCESYSTEMID,S.SOURCESYSTEMNAME,C.STAGEDATABASENAME,C.STAGETABLENAME) B
    ON A.STAGETABLENAME =B.STAGETABLENAME
    AND A.SOURCESYSTEMID = B.SOURCESYSTEMID
    AND A.SOURCESYSTEMNAME= B.SOURCESYSTEMNAME
	)
SELECT SOURCESYSTEMID,SOURCESYSTEMNAME,DBMS,SOURCEHOSTNAME,SOURCEPORTNUMBER,SOURCEUSERID,SOURCEPASSWORD,SOURCEDATABASENAME,
SOURCETIMEZONE,SOURCEJDBCDRIVER,SOURCECONNECTIONSTRING,SOURCECURRENTTIMESTAMP,STAGEDATABASENAME,ODSDATABASENAME,SOURCESYSTEM_ACTIVEFLAG,
SOURCESCHEMANAME,SOURCETABLENAME,SOURCECATALOGQUERY,STAGESCHEMANAME,STAGETABLENAME,ODSSCHEMANAME,ODSTABLENAME,STAGETYPE,LOADTYPE,LOADPROCESS_ACTIVEFLAG,
LOADPROCESS_NRTFLAG,WATERMARKCOLUMNNAME,WATERMARKDATATYPE,WATERMARKVALUE,ODS_PK,BACKUPSCHEMANAME,COLUMNLISTEXP,
ISRESTRICTED,RESTRICTEDTABLENAME,RESTRICTEDCOLUMNNAME,SOURCE_SQL,EXPRESSIONS,RESTRICTEDTABLE_RANK,ORPHANDELETE_EXPRESSIONS,ISORPHANDELETE
 FROM (SELECT 
SS.SOURCESYSTEMID,
SS.SOURCESYSTEMNAME,
SS.DBMS,
SS.SOURCEHOSTNAME,
SS.SOURCEPORTNUMBER,
SS.SOURCEUSERID,
SS.SOURCEPASSWORD,
SS.SOURCEDATABASENAME,
SS.SOURCETIMEZONE,
--SS.SOURCECATALOGQUERY,
CASE 
	--WHEN DBMS='SQL SERVER' THEN 'MICROSOFT SQL SERVER'
	WHEN SS.DBMS='SQL SERVER'	THEN 'SQL SERVER (MICROSOFT DRIVER)'
	WHEN SS.DBMS='MYSQL' 		THEN 'MYSQL'
	WHEN SS.DBMS='ORACLE' 		THEN 'ORACLE'
END AS SOURCEJDBCDRIVER,
CASE 
	WHEN SS.DBMS='SQL SERVER' 	THEN 'JDBC:SQLSERVER://'||SS.SOURCEHOSTNAME||'\\'||SS.SOURCEDATABASENAME||':'||SS.SOURCEPORTNUMBER
	WHEN SS.DBMS='MYSQL' 		THEN 'JDBC:MYSQL://'||SS.SOURCEHOSTNAME||':'||SS.SOURCEPORTNUMBER||'/'||SS.SOURCEDATABASENAME
	WHEN SS.DBMS='ORACLE' 		THEN 'JDBC:ORACLE:THIN:@'||SS.SOURCEHOSTNAME||':'||SS.SOURCEPORTNUMBER||':'||SS.SOURCEDATABASENAME
END AS SOURCECONNECTIONSTRING,
CASE 
	WHEN SS.DBMS='SQL SERVER' THEN 'SELECT CONVERT(VARCHAR, CURRENT_TIMESTAMP,120) TS;'
	WHEN SS.DBMS='MYSQL' THEN 'SELECT DATE_FORMAT(CURRENT_TIMESTAMP, ''%Y-%M-%D %H:%I:%S'') TS;'
	WHEN SS.DBMS='ORACLE' THEN 'SELECT TO_CHAR(CURRENT_TIMESTAMP,''YYYY-MM-DD HH24:MI:SS'') TS FROM DUAL;'
END AS SOURCECURRENTTIMESTAMP,
SS.STAGEDATABASENAME,
SS.ODSDATABASENAME,
SS.ACTIVEFLAG AS SOURCESYSTEM_ACTIVEFLAG,
LP.SOURCESCHEMANAME,
LP.SOURCETABLENAME,
CASE 
	WHEN DBMS='SQL SERVER' THEN 'SELECT S.NAME AS TABLE_SCHEMA, O.NAME AS TABLE_NAME FROM SYS.ALL_OBJECTS O INNER JOIN SYS.SCHEMAS S ON O.SCHEMA_ID=S.SCHEMA_ID WHERE S.NAME = '''||LP.SOURCESCHEMANAME||''' AND O.TYPE IN (''U'');'
	WHEN DBMS='MYSQL' THEN 'SELECT O.TABLE_SCHEMA, O.TABLE_NAME FROM INFORMATION_SCHEMA.TABLES O WHERE O.TABLE_SCHEMA='''||LP.SOURCESCHEMANAME||''';'
	WHEN DBMS='ORACLE' THEN 'SELECT O.OWNER AS TABLE_SCHEMA, O.OBJECT_NAME AS TABLE_NAME FROM SYS.ALL_OBJECTS O WHERE O.OBJECT_TYPE = ''TABLE'' AND O.OWNER='''||LP.SOURCESCHEMANAME||''';'
END AS SOURCECATALOGQUERY,
LP.STAGESCHEMANAME,
LP.STAGETABLENAME,
LP.ODSSCHEMANAME,
LP.ODSTABLENAME,
LP.STAGETYPE,
LP.LOADTYPE,
LP.ACTIVEFLAG AS LOADPROCESS_ACTIVEFLAG,
LP.NRTFLAG AS LOADPROCESS_NRTFLAG,
LP.WATERMARKCOLUMNNAME,
LP.WATERMARKDATATYPE,
--LP.WATERMARKLASTVALUE,
CASE 
	WHEN UPPER(SS.DBMS)='ORACLE' AND UPPER(LP.STAGETYPE) = 'INCREMENTAL' AND UPPER(LP.WATERMARKDATATYPE) ='TIMESTAMP' THEN 'TO_TIMESTAMP('||LP.WATERMARKLASTVALUE||', \'YYYY-MM-DD HH24:MI:SS\')' 
	ELSE LP.WATERMARKLASTVALUE 
END AS WATERMARKVALUE,
LP.ODS_PK,
SS.BACKUPSCHEMANAME,
PCL.COLUMNLISTEXP,
LP.ISRESTRICTED,
LP.RESTRICTEDTABLENAME,
LP.RESTRICTEDCOLUMNNAME,
LP.SOURCE_SQL,
LP.EXPRESSIONS,
LP.RESTRICTEDTABLE_RANK,
LP.ORPHANDELETE_EXPRESSIONS,
LP.ISORPHANDELETE
FROM DW.CONTROL.SOURCESYSTEM SS
LEFT OUTER JOIN CONTROL.LOADPROCESS LP ON SS.SOURCESYSTEMID=LP.SOURCESYSTEMID
LEFT OUTER JOIN  PSEUDONYMISEDCOLUMNLISTEXP PCL
ON SS.SOURCESYSTEMID=PCL.SOURCESYSTEMID
AND SS.STAGEDATABASENAME=PCL.STAGEDATABASENAME
AND LP.STAGETABLENAME=PCL.STAGETABLENAME
      ) T	
GROUP BY SOURCESYSTEMID,SOURCESYSTEMNAME,DBMS,SOURCEHOSTNAME,SOURCEPORTNUMBER,SOURCEUSERID,SOURCEPASSWORD,SOURCEDATABASENAME,
SOURCETIMEZONE,SOURCEJDBCDRIVER,SOURCECONNECTIONSTRING,SOURCECURRENTTIMESTAMP,STAGEDATABASENAME,ODSDATABASENAME,SOURCESYSTEM_ACTIVEFLAG,
SOURCESCHEMANAME,SOURCETABLENAME,SOURCECATALOGQUERY,STAGESCHEMANAME,STAGETABLENAME,ODSSCHEMANAME,ODSTABLENAME,STAGETYPE,LOADTYPE,LOADPROCESS_ACTIVEFLAG,
LOADPROCESS_NRTFLAG,WATERMARKCOLUMNNAME,WATERMARKDATATYPE,WATERMARKVALUE,ODS_PK,BACKUPSCHEMANAME,COLUMNLISTEXP,
ISRESTRICTED,RESTRICTEDTABLENAME,RESTRICTEDCOLUMNNAME,SOURCE_SQL,EXPRESSIONS,RESTRICTEDTABLE_RANK,ORPHANDELETE_EXPRESSIONS,ISORPHANDELETE
;
ALTER VIEW SOURCESYSTEM_LOADPROCESS3 SET SECURE;
CREATE OR REPLACE PROCEDURE "APPLY_MASKING"(MPNAME VARCHAR(16777216), TCATALOG VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
COMMENT='APPLIES A MASKING POLICY (PARAMETER 1) TO COLUMNS DEFINED IN DW.CONTROL.COLUMNDETAILS FOR A SPECIFIED TABLE_CATALOG (PARAMETER 2).'
EXECUTE AS OWNER
AS '
	FUNCTION LIST_APPLY() {
		VAR STMT = "SELECT ODSCOL.TABLE_CATALOG, ODSCOL.TABLE_SCHEMA, ODSCOL.TABLE_NAME, ODSCOL.COLUMN_NAME FROM DW.CONTROL.COLUMNDETAILS PSEUDO ";
        STMT += "INNER JOIN "+TCATALOG+".INFORMATION_SCHEMA.COLUMNS ODSCOL ";
        STMT += "ON UPPER(PSEUDO.ODSSCHEMANAME) = ODSCOL.TABLE_SCHEMA ";
        STMT += "AND UPPER(PSEUDO.ODSTABLENAME) = ODSCOL.TABLE_NAME ";
        STMT += "AND UPPER(PSEUDO.ODSTABLECOLUMN) = ODSCOL.COLUMN_NAME ";
        STMT += "WHERE PSEUDO.ACTIVEFLAG = TRUE AND ISPSEUDONYMISED=TRUE ";
        STMT += "ORDER BY ODSCOL.TABLE_NAME, ODSCOL.ORDINAL_POSITION";
        STMT += ";";
        VAR OBJ_RS = SNOWFLAKE.EXECUTE({SQLTEXT: STMT});
		WHILE(OBJ_RS.NEXT()) {
			TRY {
                SNOWFLAKE.EXECUTE({SQLTEXT: `ALTER TABLE IF EXISTS "`+ OBJ_RS.GETCOLUMNVALUE(1) + `"."` + OBJ_RS.GETCOLUMNVALUE(2) + `"."` + OBJ_RS.GETCOLUMNVALUE(3) +`" MODIFY COLUMN "` + OBJ_RS.GETCOLUMNVALUE(4) +`" SET MASKING POLICY "` + OBJ_RS.GETCOLUMNVALUE(1) + `"."` + OBJ_RS.GETCOLUMNVALUE(2) + `"."` + MPNAME + `";` });
//--            SNOWFLAKE.EXECUTE({SQLTEXT: `ALTER USER IF EXISTS "` + OBJ_RS.GETCOLUMNVALUE(1) + `" SET DISABLED=TRUE;` });
            }
            CATCH (ERR) {
                RESULT = ''FAILED ON : '' + + OBJ_RS.GETCOLUMNVALUE(1) + `"."` + OBJ_RS.GETCOLUMNVALUE(2) + `"."` + OBJ_RS.GETCOLUMNVALUE(3) +'' COLUMN:  ''+ OBJ_RS.GETCOLUMNVALUE(4) + '' '';
                RESULT += ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;
		        RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;
		        RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;            
            }
        }
	}// — — — — — — — — — — — — — — — — — — — — — — — —
	VAR RESULT = ''SUCCESS'';
	TRY {
		LIST_APPLY(MPNAME, TCATALOG);
	} 
	CATCH (ERR) {
		RESULT = ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;
		RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;
		RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;
	}
	RETURN RESULT;
';
CREATE OR REPLACE PROCEDURE "DROP_MASKING"(TCATALOG VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
COMMENT='REMOVES ANY MASKING POLICY FROM COLUMNS DEFINED IN DW.CONTROL.COLUMNDETAILS FOR A SPECIFIED TABLE_CATALOG (PARAMETER 1).'
EXECUTE AS OWNER
AS '
	FUNCTION LIST_APPLY() {
		VAR STMT = "SELECT ODSCOL.TABLE_CATALOG, ODSCOL.TABLE_SCHEMA, ODSCOL.TABLE_NAME, ODSCOL.COLUMN_NAME FROM DW.CONTROL.COLUMNDETAILS PSEUDO ";
        STMT += "INNER JOIN "+TCATALOG+".INFORMATION_SCHEMA.COLUMNS ODSCOL ";
        STMT += "ON UPPER(PSEUDO.ODSSCHEMANAME) = ODSCOL.TABLE_SCHEMA ";
        STMT += "AND UPPER(PSEUDO.ODSTABLENAME) = ODSCOL.TABLE_NAME ";
        STMT += "AND UPPER(PSEUDO.ODSTABLECOLUMN) = ODSCOL.COLUMN_NAME ";
        STMT += "WHERE PSEUDO.ACTIVEFLAG = TRUE AND ISPSEUDONYMISED=TRUE ";
        STMT += "ORDER BY ODSCOL.TABLE_NAME, ODSCOL.ORDINAL_POSITION";
        STMT += ";";
        VAR OBJ_RS = SNOWFLAKE.EXECUTE({SQLTEXT: STMT});
		WHILE(OBJ_RS.NEXT()) {
			TRY {
                SNOWFLAKE.EXECUTE({SQLTEXT: `ALTER TABLE IF EXISTS "`+ OBJ_RS.GETCOLUMNVALUE(1) + `"."` + OBJ_RS.GETCOLUMNVALUE(2) + `"."` + OBJ_RS.GETCOLUMNVALUE(3) +`" MODIFY COLUMN "` + OBJ_RS.GETCOLUMNVALUE(4) +`" UNSET MASKING POLICY ;` });
//--            SNOWFLAKE.EXECUTE({SQLTEXT: `ALTER USER IF EXISTS "` + OBJ_RS.GETCOLUMNVALUE(1) + `" SET DISABLED=TRUE;` });
            }
            CATCH (ERR) {
                RESULT = ''FAILED ON : '' + + OBJ_RS.GETCOLUMNVALUE(1) + `"."` + OBJ_RS.GETCOLUMNVALUE(2) + `"."` + OBJ_RS.GETCOLUMNVALUE(3) +'' COLUMN:  ''+ OBJ_RS.GETCOLUMNVALUE(4) + '' '';
                RESULT += ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;
		        RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;
		        RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;            
            }
        }
	}// — — — — — — — — — — — — — — — — — — — — — — — —
	VAR RESULT = ''SUCCESS'';
	TRY {
		LIST_APPLY(TCATALOG);
	} 
	CATCH (ERR) {
		RESULT = ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;
		RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;
		RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;
	}
	RETURN RESULT;
';
CREATE OR REPLACE SCHEMA DW.KEY;
USE SCHEMA DW.KEY;

CREATE OR REPLACE SEQUENCE SEQ_CLIENT_ID START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE SEQUENCE SEQ_KEYMAP_ID START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TABLE DW.KEY.CLIENT (
	KEYMAP_ID NUMBER(38,0) NOT NULL,
	COLUMN_VALUE_LIST ARRAY NOT NULL,
	CLIENT_ID NUMBER(38,0) NOT NULL,
	DW_SRC_SYSTEM_ID NUMBER(38,0) NOT NULL,
	DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CLIENT PRIMARY KEY (KEYMAP_ID, COLUMN_VALUE_LIST)
);
CREATE OR REPLACE TABLE DW.KEY.KEYMAP (
	KEYMAP_ID NUMBER(38,0) NOT NULL DEFAULT DW.KEY.SEQ_KEYMAP_ID.NEXTVAL,
	COLUMN_NAME_LIST ARRAY NOT NULL,
	PARENT_KEYMAP_ID NUMBER(38,0),
	SRC_SYSTEM_ID NUMBER(38,0),
	TABLE_CATALOG VARCHAR(255),
	TABLE_SCHEMA VARCHAR(255),
	TABLE_NAME VARCHAR(255),
	KEY_PRECEDENCE NUMBER(38,0),
	DW_SEQUENCE_NAME VARCHAR(255) NOT NULL,
	DW_KEY_NAME VARCHAR(255) NOT NULL,
	DW_TABLE_NAME VARCHAR(255) NOT NULL,
	DW_COLUMN_NAME VARCHAR(255) NOT NULL,
	NOTES VARCHAR(1000),
	FILTER_CRITERIA VARCHAR(16777216),
	DW_SRC_SYSTEM_ID NUMBER(38,0),
	DW_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	DW_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	DW_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_KEYMAP PRIMARY KEY (KEYMAP_ID, COLUMN_NAME_LIST)
);


CREATE OR REPLACE DATABASE STG_GRS_NO;

CREATE OR REPLACE SCHEMA STG_GRS_NO.DBO;

CREATE OR REPLACE TABLE STG_GRS_NO.DBO.ALARM (
	ALARM_ID NUMBER(10,0),
	ALARM_NO VARCHAR(50),
	ALARM_GROUP_ID NUMBER(10,0),
	ALARM_TYPE_ID NUMBER(10,0),
	ALARM_KEY_STORAGE_INCL NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	UNIT_PROD_OBJ_ID NUMBER(10,0),
	UNIT_LOC_OBJ_ID NUMBER(10,0),
	CENTRAL_UNIT_TYPE VARCHAR(50),
	ALARM_ADM_CENTRAL_ID NUMBER(10,0),
	ALARM_DISTRIB_CENTRAL_ID NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	NOTES VARCHAR(250),
	ALARM_PORTABLE_ID NUMBER(10,0),
	TURN_OUT_COUNT NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	ALARM_PORTABLE_ITEM_ID NUMBER(10,0),
	APPERANCE_TIME NUMBER(10,0),
	APPERANCE_TIME_EXCEPTION NUMBER(10,0),
	APPERANCE_TIME_EXCEPTION_START TIMESTAMP_NTZ(9),
	APPERANCE_TIME_EXCEPTION_STOP TIMESTAMP_NTZ(9)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.ALARM_CODES (
	ALARM_CODE_ID NUMBER(10,0),
	ALARM_CODE_NO VARCHAR(20),
	SHORT_DESCRIPTION VARCHAR(60),
	DESCRIPTION VARCHAR(16777216),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	EXCLUDE_FROM_REPORT BOOLEAN,
	"SHOWFORASSIGNMENT" BOOLEAN
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.ALARM_GROUP (
	ALARM_GROUP_ID NUMBER(10,0),
	ALARM_GROUP_NO VARCHAR(10),
	DESCRIPTION VARCHAR(60),
	SORT_ORDER NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	PORTABLE_ALARM NUMBER(10,0),
	"TRANSFERTOGCS" BOOLEAN
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.ASSIGNMENT_TYPE (
	ASSIGNMENT_TYPE_ID NUMBER(10,0),
	ASSIGNMENT_TYPE_NO VARCHAR(2),
	DESCRIPTION VARCHAR(60),
	ALLOW_TO_SPLIT NUMBER(10,0),
	ALLOW_OUTSIDE_GD NUMBER(10,0),
	MINUTES_REDUCE_ST NUMBER(10,0),
	MINUTES_REDUCE_END NUMBER(10,0),
	ALLOW_TO_DISPLACE NUMBER(10,0),
	MINUTES_ADVANCE NUMBER(10,0),
	MINUTES_AFTERWARDS NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ALLOW_MULTIPLE_ASSIGNM_PER_DAYT BOOLEAN,
	GROUPED_COMMITMENT NUMBER(10,0),
	GROUPED_COMMITMENT_MEMBER NUMBER(10,0),
	RAZZIA NUMBER(10,0),
	SHOW_PO NUMBER(10,0),
	Y_TYPE NUMBER(10,0),
	ICON_ID VARCHAR(20),
	TIME_BANK_NOT_USED NUMBER(10,0),
	EXCLUDE_FROM_TIME_BANK NUMBER(10,0),
	INTERNAL NUMBER(10,0),
	"UICOLOR" VARCHAR(20)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.COMMITMENT (
	COMMITMENT_ID NUMBER(10,0),
	ASSIGNMENT_TYPE_NO NUMBER(10,0),
	ASSIGNMENT_TYPE_ID NUMBER(10,0),
	CONTRACT_ID NUMBER(10,0),
	CONTRACT_PART_ID NUMBER(10,0),
	ROAD_TIME_FROM_GD NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	VERSION_FROM TIMESTAMP_NTZ(9),
	VERSION_TO TIMESTAMP_NTZ(9),
	DESCRIPTION VARCHAR(60),
	DISTRIBUTION_TYPE NUMBER(10,0),
	RANDOM_COUNT NUMBER(10,0),
	RANDOM_PERIOD NUMBER(10,0),
	RANDOM_PERIOD_TYPE NUMBER(10,0),
	RANDOM_MIN_DIST NUMBER(10,0),
	PERIOD_LENGTH NUMBER(10,0),
	PERIOD_TOTALLENGTH NUMBER(10,0),
	PERIOD_START TIMESTAMP_NTZ(9),
	ABS_COUNT NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	PRIORITY_TYPE NUMBER(5,0),
	INCOME_TYPE NUMBER(5,0),
	EXECUTE_TYPE NUMBER(5,0),
	MULTIPLE_EXECUTION NUMBER(5,0),
	SEASON_TYPE NUMBER(5,0),
	PROCESS_TYPE NUMBER(5,0),
	INCOME NUMBER(19,4),
	ON_REPORT_REPLACE_CO_WITH_PO NUMBER(10,0),
	RED NUMBER(10,0),
	ENABLE_MONITORING NUMBER(10,0),
	ENABLE_PRE_START_MONITORING NUMBER(10,0),
	ENABLE_POST_START_MONITORING NUMBER(10,0),
	PRE_START NUMBER(10,0),
	POST_START NUMBER(10,0),
	ENABLE_PRE_STOP_MONITORING NUMBER(10,0),
	ENABLE_POST_STOP_MONITORING NUMBER(10,0),
	PRE_STOP NUMBER(10,0),
	POST_STOP NUMBER(10,0),
	ENABLE_PERIOD_MONITORING NUMBER(10,0),
	MONITORING_PERIOD NUMBER(10,0),
	ENABLE_NOTIFY NUMBER(10,0),
	PRE_TRANSPORT_NOTIFY_TIME NUMBER(10,0),
	NOTIFY_PERIOD NUMBER(10,0),
	INSTRUCTION VARCHAR(2000),
	ENABLE_NOTIFY_TRANSPORT NUMBER(10,0),
	HIDDEN NUMBER(10,0),
	"ALLOWFINGERSCANNING" BOOLEAN,
	EXTRAORDER_ID NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.COMMIT_LOC_OBJECT (
	COMMITMENT_ID NUMBER(10,0),
	PROD_OBJ_ID NUMBER(10,0),
	LOC_OBJ_ID NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.CONTRACT (
	CONTRACT_ID NUMBER(10,0),
	CONTRACT_NO VARCHAR(20),
	CUSTOMER_ID NUMBER(10,0),
	VALIDFROM TIMESTAMP_NTZ(9),
	VALIDTO TIMESTAMP_NTZ(9),
	RENEWED TIMESTAMP_NTZ(9),
	TERMINATE TIMESTAMP_NTZ(9),
	CANCELLED TIMESTAMP_NTZ(9),
	CONTRACT_TYPE_ID NUMBER(10,0),
	TERM_OF_NOTICE NUMBER(10,0),
	CANCEL_TYPE_ID NUMBER(10,0),
	CANCEL_GROUND_ID NUMBER(10,0),
	INVOICE_TYPE_ID NUMBER(10,0),
	PAYMENT_MONTH VARCHAR(12),
	JOINT_INVOICE VARCHAR(2),
	JOINT_INVOICE_SORT VARCHAR(10),
	INVOICE_FEE_ID NUMBER(10,0),
	INVOICE_ACCEPT NUMBER(10,0),
	TERMS_OF_PAYMNT_ID NUMBER(10,0),
	MANUAL_ENVELOPE NUMBER(10,0),
	MONTHLY_INC_CONT NUMBER(19,4),
	MONTHLY_INC_ALL NUMBER(19,4),
	CUSTOMER_REF VARCHAR(25),
	CONTACT VARCHAR(15),
	INVOICE_TEXT_CODE VARCHAR(2),
	SALESMAN_ID VARCHAR(5),
	ENGINEER_ID VARCHAR(4),
	SIGNED_CONTRACT NUMBER(10,0),
	PRICE_CHANGE_PERC NUMBER(18,0),
	PRICE_CHANGE_ID VARCHAR(4),
	INVOICE_LATEST TIMESTAMP_NTZ(9),
	INVOICED_TO TIMESTAMP_NTZ(9),
	TOTAL_INV NUMBER(19,4),
	TOTAL_INV_PREV_Y NUMBER(19,4),
	TOTAL_INV_THIS_Y NUMBER(19,4),
	LATEST_INVOICE_ID NUMBER(10,0),
	LATEST_EXTRA_ID NUMBER(10,0),
	NEW_CONTRACT NUMBER(10,0),
	UPDATE_CODE VARCHAR(1),
	CANCELLED_BY VARCHAR(30),
	PRICE_CHANGE_EARL TIMESTAMP_NTZ(9),
	REPLACE_OTHER_CONT VARCHAR(1),
	REGISTRATION_DATE TIMESTAMP_NTZ(9),
	REGISTERED_BY VARCHAR(10),
	LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
	LATEST_CHANGED_BY VARCHAR(10),
	ROWIDMASTER VARCHAR(30),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	CONTRACT_CONDITION_ID NUMBER(10,0),
	PROFITCENTER_ID NUMBER(10,0),
	MASTER_DATE TIMESTAMP_NTZ(9),
	CENTRAL_VALIDTO TIMESTAMP_NTZ(9),
	SYSTEM_CONTRACT_TYPE_ID NUMBER(5,0),
	CENTRAL_USER VARCHAR(60),
	CENTRAL_COMPANY VARCHAR(60)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.CONTRACT_PART (
	CONTRACT_ID NUMBER(10,0),
	CONTRACT_PART_ID NUMBER(10,0),
	CONTRACT_PART_NO VARCHAR(20),
	CONTRACT_PART_CENTRAL_NO VARCHAR(20),
	CUST_OBJ_ID NUMBER(10,0),
	PRODUCT_ID NUMBER(10,0),
	INVOICE_ADDR_CODE VARCHAR(1),
	INVOICE_TEXT_CODE VARCHAR(2),
	TRANSMITTER_NO VARCHAR(12),
	PLANNED_PROD_START TIMESTAMP_NTZ(9),
	TERMINATION_CODE VARCHAR(1),
	LATEST_CONTR_CHAN NUMBER(10,0),
	CONTR_REG_DATE TIMESTAMP_NTZ(9),
	VALIDFROM TIMESTAMP_NTZ(9),
	VALIDTO TIMESTAMP_NTZ(9),
	PORTF_PROFITC_ID NUMBER(10,0),
	PORTF_MONTH_INCOME NUMBER(19,4),
	REGISTRATION_DATE TIMESTAMP_NTZ(9),
	REGISTERED_BY VARCHAR(10),
	LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
	LATEST_CHANGED_BY VARCHAR(10),
	ROWIDMASTER VARCHAR(30),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	MASTER_DATE TIMESTAMP_NTZ(9),
	CENTRAL_USER VARCHAR(60),
	CENTRAL_COMPANY VARCHAR(60),
	COMMITMENT_INCOME_TYPE NUMBER(10,0),
	DESCRIPTION VARCHAR(60),
	MULTIPLE_ASSIGNMENTS NUMBER(10,0),
	COMMITMENT_INCOME_MONEY NUMBER(19,4),
	TIME_BANK NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.CONTRACT_TYPE (
	CONTRACT_TYPE_ID NUMBER(10,0),
	CONTRACT_TYPE_NO VARCHAR(10),
	DESCRIPTION VARCHAR(60),
	ROWIDMASTER VARCHAR(30),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.CONTR_PART_VER (
	CONTRACT_ID NUMBER(10,0),
	CONTRACT_PART_ID NUMBER(10,0),
	VERSION_FROM TIMESTAMP_NTZ(9),
	VERSION_TO TIMESTAMP_NTZ(9),
	MONTHLY_INCOME NUMBER(19,4),
	CONTR_REG_DATE TIMESTAMP_NTZ(9),
	INVOICE_STATUS NUMBER(10,0),
	ALTERATION_TYPE VARCHAR(1),
	PRICE_CHANGE_CONST NUMBER(18,0),
	REGISTRATION_DATE TIMESTAMP_NTZ(9),
	REGISTERED_BY VARCHAR(10),
	LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
	LATEST_CHANGED_BY VARCHAR(10),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	PROFITCENTER_ID NUMBER(10,0),
	DAYTYPE_MINUTES NUMBER(10,0),
	DATE_MINUTES NUMBER(10,0),
	DAYTYPE_CALCULATION_READY NUMBER(5,0),
	DATE_CALCULATION_READY NUMBER(5,0),
	MASTER_DATE TIMESTAMP_NTZ(9),
	"CHANGE_TYPE_1" NUMBER(5,0),
	"CHANGE_TYPE_2" NUMBER(5,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.CUSTOMER (
	CUSTOMER_ID NUMBER(10,0),
	CUSTOMER_NO VARCHAR(25),
	ORGANIZATION_NO VARCHAR(11),
	NAME_SEARCH VARCHAR(30),
	NAME_1 VARCHAR(100),
	NAME_2 VARCHAR(30),
	ADDRESS VARCHAR(40),
	POSTDELIVERY_ADDRESS VARCHAR(40),
	POSTCODE VARCHAR(10),
	POSTADDRESS VARCHAR(40),
	TELEPHONE_1 VARCHAR(20),
	TELEPHONE_2 VARCHAR(20),
	TELEFAX VARCHAR(20),
	ROWIDMASTER VARCHAR(30),
	MARKET_CODE VARCHAR(5),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	"POSTDELIVERY_ADDRESS_EXTRA" VARCHAR(40),
	CUSTOMER_TYPE_ID NUMBER(10,0),
	VALIDTO TIMESTAMP_NTZ(9),
	MASTER_DATE TIMESTAMP_NTZ(9),
	SYSTEM_CUSTOMER_TYPE_ID NUMBER(5,0),
	SYSTEM_PROFITCENTER_ID NUMBER(5,0),
	CENTRAL_COMPANY VARCHAR(60),
	CENTRAL_USER VARCHAR(60),
	CONFIRM_QUESTION_LIMIT NUMBER(10,0),
	"GRSRWENABLE" BOOLEAN,
	"REQUIRESKAMPERMISSION" BOOLEAN,
	GLOBAL_MASTER_NO VARCHAR(50)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.CUSTOMER_OBJECT (
	CUST_OBJ_ID NUMBER(10,0),
	CUST_OBJ_NO VARCHAR(15),
	CUST_OBJ_NO_ALT VARCHAR(15),
	NAME VARCHAR(40),
	ADDRESS VARCHAR(40),
	POSTDELIVERY_ADDRESS VARCHAR(40),
	POSTCODE VARCHAR(12),
	POSTADDRESS VARCHAR(40),
	BLOCK VARCHAR(40),
	DISTRICT VARCHAR(40),
	REF_PERSON VARCHAR(40),
	TELEPHONE VARCHAR(20),
	TELEFAX VARCHAR(20),
	TELEMODEM VARCHAR(20),
	MARKET_ID NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ADDRESS_2 VARCHAR(40),
	"POSTDELIVERY_ADDRESS_EXTRA" VARCHAR(40),
	MASTER_DATE TIMESTAMP_NTZ(9),
	CITY_ID NUMBER(10,0),
	CITY_PART_ID NUMBER(10,0),
	BLOCK_ID NUMBER(10,0),
	"INVOICECUSTOMER_NO" VARCHAR(100),
	"CUSTOMER_OBJECT_TYPE" VARCHAR(2),
	"ADDRESSCODE" VARCHAR(1),
	"PROFITCENTER_NO" VARCHAR(4),
	"XPOS" VARCHAR(20),
	"YPOS" VARCHAR(20),
	CENTRAL_USER VARCHAR(60),
	CENTRAL_COMPANY VARCHAR(60),
	MARKET_ITEM_ID NUMBER(10,0),
	PROFITCENTER_ID NUMBER(10,0),
	NOTES VARCHAR(16777216),
	PROTECTED NUMBER(10,0),
	ENABLE_PROD_OBJ_POSITION NUMBER(10,0),
	VISION_ID VARCHAR(15),
	TERMINATE_DATE TIMESTAMP_NTZ(9),
	"ASSIGNMENTGEOLOCATION" VARCHAR(16777216),
	"ASSIGNMENTPOSTCODE" VARCHAR(12),
	"ALLOWCAMERA" BOOLEAN,
	CALENDAR_TEMPLATE_ID NUMBER(10,0),
	"USECUSTOMERADDRESS" BOOLEAN,
	XDE_SUBCONTRACTOR_CCT_NO VARCHAR(20),
	XDE_EXTRA_INFORMATION VARCHAR(300),
	XDE_PRODUCTS VARCHAR(100),
	XDE_CUSTOMER_NAME VARCHAR(40),
	XDE_IS_EXTERNAL BOOLEAN,
	"ISBLACKLISTED" BOOLEAN,
	"BLACKLISTCOMMENT" VARCHAR(1000),
	GLOBAL_MASTER_NO VARCHAR(50),
	GEO_LAT FLOAT,
	GEO_LONG FLOAT
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.CUST_CUST_OBJECT (
	CUSTOMER_ID NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	MASTER_DATE TIMESTAMP_NTZ(9)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.GCS_EXPORT_ERP_CALL_OUTS (
	"CASE_NUMBER" VARCHAR(14),
	"TRANSFERRING_TIME" VARCHAR(10),
	"FREE_TEXT_FROM_GUARD" VARCHAR(16777216),
	"FREE_TEXT_FROM_OPERATOR" VARCHAR(16777216),
	"HANDLE_MANUALLY" BOOLEAN,
	"ALARM_CENTER_NUMBER" VARCHAR(3),
	"ALARM_CENTER_REFERENCE" VARCHAR(36),
	"ALARM_CENTER_ADDRESS" VARCHAR(255),
	"ALARM_CENTER_ZIP_CODE" VARCHAR(50),
	"ALARM_CENTER_LOCATION" VARCHAR(30),
	"ALARM_CENTER_TELEPHONE_NUMBER" VARCHAR(40),
	"ALARM_CENTER_NAME" VARCHAR(50),
	"ALARM_CENTER_CONTRACT_NUMBER" VARCHAR(30),
	"ALARM_NUMBER" VARCHAR(50),
	"ALARM_TIME" VARCHAR(10),
	"ALARM_REACH_TIME" VARCHAR(10),
	"ALARM_TYPE" VARCHAR(55),
	"ALARM_TYPE_TEXT" VARCHAR(50),
	"ALARM_ISSUE_CODE" NUMBER(10,0),
	"ALARM_ISSUE_DESCRIPTION" VARCHAR(60),
	"GUARD_SECTION" VARCHAR(16777216),
	"MEASURES_CODE" NUMBER(10,0),
	"MEASURES_TEXT" VARCHAR(60),
	"BUILDING_NUMBER" VARCHAR(60),
	"BUILDING_NAME" VARCHAR(100),
	"BUILDING_ADDRESS" VARCHAR(300),
	"BUILDING_LOCATION" VARCHAR(255),
	"BUILDING_SECTION" VARCHAR(16777216),
	"BUILDING_ZIP_CODE" VARCHAR(30),
	"CUSTOMER_OBJECT" VARCHAR(30),
	"CUSTOMER_NUMBER" VARCHAR(120),
	"CUSTOMER_ORGANIZATION_ID" VARCHAR(15),
	"CUSTOMER_VAT_NUMBER" VARCHAR(14),
	"CUSTOMER_SOCIAL_SECURITY_NUMBER" VARCHAR(14),
	"CUSTOMER_NAME_1" VARCHAR(255),
	"CUSTOMER_NAME_2" VARCHAR(255),
	"CUSTOMER_ADDRESS" VARCHAR(255),
	"CUSTOMER_ZIP_CODE" VARCHAR(30),
	"CUSTOMER_LOCATION" VARCHAR(255),
	"INVOICE_CUSTOMER_NAME_1" VARCHAR(255),
	"INVOICE_CUSTOMER_NAME_2" VARCHAR(255),
	"INVOICE_CUSTOMER_ADDRESS" VARCHAR(255),
	"INVOICE_CUSTOMER_ZIPCODE" VARCHAR(30),
	"INVOICE_CUSTOMER_LOCATION" VARCHAR(30),
	"EXPORTED_TIME_STAMP" TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	"CALL_OUT_BARCODE" VARCHAR(200)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.GCS_EXPORT_ERP_CALL_OUT_GUARDS (
	"CASE_NUMBER" VARCHAR(14),
	"ARRIVAL_TIME" VARCHAR(10),
	"DEPARTURE_TIME" VARCHAR(10),
	"ELAPSED_TIME" NUMBER(10,0),
	"EMPLOYMENT_NUMBER" VARCHAR(10),
	"COST_CENTRE" VARCHAR(20),
	"BASE_LOCATION_NUMBER" VARCHAR(20),
	"GUARD_TYPE" VARCHAR(1),
	"VISIT_DETAIL" VARCHAR(16777216),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	"ON_WAY_TIME" VARCHAR(10),
	"RETURN_TIME_BACK_TO_OFFICE" VARCHAR(10)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.GD (
	GD_ID NUMBER(10,0),
	PROFITCENTER_ID NUMBER(10,0),
	GD_NO VARCHAR(4),
	GD_TYPE_ID NUMBER(10,0),
	GD_KNOWREQ NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	NAME VARCHAR(40),
	ADDRESS VARCHAR(40),
	POSTCODE VARCHAR(12),
	POSTADDRESS VARCHAR(40),
	REF_PERSON VARCHAR(40),
	TELEPHONE VARCHAR(20),
	TELEFAX VARCHAR(20),
	TELEMODEM VARCHAR(20),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	"POSTDELIVERY_ADDRESS_EXTRA" VARCHAR(40),
	PE_PROFITC VARCHAR(4),
	PE_NO VARCHAR(4),
	REPORT_MARK_FOLDER_ID NUMBER(10,0),
	EXPORT_TO_GMP NUMBER(10,0),
	VISIBLE_IN_153 NUMBER(10,0),
	EXCLUDE_EMPTY_GD_SHIFT NUMBER(10,0),
	"STARTLOCATION" VARCHAR(50),
	"GEOLOCATION" VARCHAR(16777216),
	CALENDAR_TEMPLATE_ID NUMBER(10,0),
	ORIGINATING_SYSTEM_ID NUMBER(10,0),
	GEO_LAT FLOAT,
	GEO_LONG FLOAT
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.GRS_ADDONINFO (
	"CASE_NUMBER" VARCHAR(14),
	"TRANSFERRING_TIME" TIMESTAMP_NTZ(9),
	"ALARM_NO" VARCHAR(50),
	"ALARM_GROUP_NO" VARCHAR(50),
	"ALARM_GROUP_NAME" VARCHAR(60),
	"ALARM_PORTABLE_NO" VARCHAR(50),
	"ALARAM_PORTABLE_NAME" VARCHAR(60),
	"CUSTOMER_NO" VARCHAR(25),
	"CUST_OBJ_NO" VARCHAR(15),
	"CUST_OBJ_NO_ALT" VARCHAR(15),
	"ALARM_ID" NUMBER(10,0),
	"ALARM_TIME" TIMESTAMP_NTZ(9),
	GRSR_EVENT_ID NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	ID NUMBER(10,0),
	SFU_EVENT_ID NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.LOCATION_MARK (
	LOCATION_MARK_ID NUMBER(10,0),
	PROD_OBJ_ID NUMBER(10,0),
	LOC_OBJ_ID NUMBER(10,0),
	LOC_MARK_TYPE_ID NUMBER(10,0),
	BARCODE VARCHAR(20),
	POSITION VARCHAR(100),
	ACTION VARCHAR(100),
	ORDER_NO NUMBER(10,0),
	ORDER_NO_EXTRA NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	VALIDTO TIMESTAMP_NTZ(9),
	VALIDFROM TIMESTAMP_NTZ(9),
	POSITION_GUARD_INFO VARCHAR(100),
	LOC_MARK_SERVICE_NO VARCHAR(60),
	LOC_MARK_SERVICE_LOCATION VARCHAR(60),
	LOC_MARK_SERVICE_INTERVAL_ID NUMBER(10,0),
	LOC_MARK_SERVICE_EXT_INTERVAL_ID NUMBER(10,0),
	LOC_MARK_SERVICE_TYPE_ID NUMBER(10,0),
	LOC_MARK_SERVICE_TYPE_ITEM_ID NUMBER(10,0),
	LOC_MARK_SERVICE_TYPE_ITEM_2_ID NUMBER(10,0),
	LOC_MARK_SERVICE_YEAR NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.LOCATION_OBJECT (
	PROD_OBJ_ID NUMBER(10,0),
	LOC_OBJ_ID NUMBER(10,0),
	DESCRIPTION VARCHAR(60),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	VALIDFROM TIMESTAMP_NTZ(9),
	VALIDTO TIMESTAMP_NTZ(9),
	LOCATION_OBJ_ID NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.LOC_MARK_REPORT (
	LOCATION_MARK_ID NUMBER(10,0),
	REPORT_MARK_ID NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	SORT_ORDER NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.LOC_MARK_TYPE (
	LOC_MARK_TYPE_ID NUMBER(10,0),
	FORCING NUMBER(10,0),
	COLOUR VARCHAR(20),
	NAME VARCHAR(20),
	DESCRIPTION VARCHAR(100),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	"RGB_COLOUR" NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.PROCESSED_TRANSACTIONS (
	LOGG_ID NUMBER(10,0),
	TRANS_ID NUMBER(10,0),
	SUB_ID NUMBER(10,0),
	BARCODE_DATE TIMESTAMP_NTZ(9),
	BARCODE_TIME TIMESTAMP_NTZ(9),
	BARCODE_NO VARCHAR(16),
	BARCODE_GROUP NUMBER(10,0),
	BARCODE_TYPE NUMBER(10,0),
	LOC_MARK_TYPE NUMBER(10,0),
	REQUIRED BOOLEAN,
	EMPLOYEE_ID NUMBER(10,0),
	GD_ID NUMBER(10,0),
	VALID_ASSOCIATION BOOLEAN,
	COMMITMENT_ID NUMBER(10,0),
	DAY_T_ID NUMBER(10,0),
	VERSION_FROM TIMESTAMP_NTZ(9),
	ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
	CE_VALID_ASSOCIATION BOOLEAN,
	CE_COMMITMENT_ID NUMBER(10,0),
	CE_EXCEPTION NUMBER(10,0),
	CE_DAY_T_ID NUMBER(10,0),
	CE_DATEFROM TIMESTAMP_NTZ(9),
	CE_TIMEFROM TIMESTAMP_NTZ(9),
	REQ_CORRECTION_TYPE NUMBER(10,0),
	ERROR_FLAG BOOLEAN,
	NOTES VARCHAR(100),
	ASSOCIATION_NORMAL NUMBER(5,0),
	ASSOCIATION_CE NUMBER(5,0),
	LOCATION_MARK_ID NUMBER(10,0),
	PROD_OBJ_ID NUMBER(10,0),
	LOC_OBJ_ID NUMBER(10,0),
	POSITION VARCHAR(100),
	ACTION VARCHAR(100),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	REPORT_NOTES VARCHAR(2000),
	EMPLOYEE_NO VARCHAR(6),
	FIRSTNAME VARCHAR(20),
	LASTNAME VARCHAR(28),
	MULTIPLICATION_FACTOR NUMBER(10,0),
	TIME_CONSUMPTION NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.PRODUCTION_OBJECT (
	PROD_OBJ_ID NUMBER(10,0),
	DESCRIPTION VARCHAR(40),
	PROD_OBJ_NO VARCHAR(15),
	ADDRESS VARCHAR(40),
	POSTDELIVERY_ADDRESS VARCHAR(40),
	POSTCODE VARCHAR(12),
	POSTADDRESS VARCHAR(40),
	REF_PERSON VARCHAR(40),
	TELEPHONE VARCHAR(20),
	TELEFAX VARCHAR(20),
	TELEMODEM VARCHAR(20),
	XPOS VARCHAR(20),
	YPOS VARCHAR(20),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ADDRESS_2 VARCHAR(40),
	"POSTDELIVERY_ADDRESS_EXTRA" VARCHAR(40)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.PROD_CUST_OBJECT (
	PROD_OBJ_ID NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.PROFITCENTER (
	PROFITCENTER_ID NUMBER(10,0),
	PROFITCENTER_NO VARCHAR(4),
	RESPONSIBLE VARCHAR(40),
	DESCRIPTION VARCHAR(60),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	POSITION_TYPE_REF NUMBER(10,0),
	"VISIBLE" BOOLEAN,
	CO_OWNERSHIP_ALLOWED NUMBER(10,0),
	"KPISTARTDATE" TIMESTAMP_NTZ(9)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.REPORT_MARK (
	REPORT_MARK_ID NUMBER(10,0),
	REP_MARK_TYPE_ID NUMBER(10,0),
	BARCODE VARCHAR(20),
	REPORT_LABEL VARCHAR(60),
	ACTIVITY_CODE VARCHAR(1),
	TIMELIMIT_CODE VARCHAR(3),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	"REPORT_MARK_VERSION" NUMBER(5,0),
	RISK_LEVEL NUMBER(10,0),
	SYSTEM BOOLEAN,
	REPORT_FOLDER_LABEL VARCHAR(30),
	STATISTICS_MEMBER NUMBER(10,0),
	CODE VARCHAR(10),
	"REPORT_LABEL_2" VARCHAR(60),
	REPORT_MARK_SET_ONLY NUMBER(10,0),
	SBA NUMBER(10,0),
	"REPORT_LABEL_GCS_SYNC" VARCHAR(60)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.REPORT_MARK_CULTURE (
	REPORT_MARK_ID NUMBER(10,0),
	"CULTURE_ID" NUMBER(10,0),
	"REPORT_LABEL" VARCHAR(60),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.SFU_COMMITMENTPERFORMED (
	COMMITMENT_ID NUMBER(10,0),
	"DATEPERFORMED" TIMESTAMP_NTZ(9),
	GD_ID NUMBER(10,0),
	"GD_STARTDATE" TIMESTAMP_NTZ(9),
	EMPLOYEE_ID NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	"STARTDATETIME" TIMESTAMP_NTZ(9),
	"STOPDATATIME" TIMESTAMP_NTZ(9),
	LOGG_ID NUMBER(10,0),
	"NOREPORTS" NUMBER(10,0),
	"NOATTACHMENTS" NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	"MANUALREGISTRATIONDATETIME" TIMESTAMP_NTZ(9),
	"START_TRANS_ID" NUMBER(10,0),
	"STOP_TRANS_ID" NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.SFU_COMMITMENTPERFORMEDEXTRAVISITS (
	"SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID" NUMBER(10,0),
	COMMITMENT_ID NUMBER(10,0),
	"DATEPERFORMED" TIMESTAMP_NTZ(9),
	GD_ID NUMBER(10,0),
	"GD_STARTDATE" TIMESTAMP_NTZ(9),
	EMPLOYEE_ID NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	"STARTDATETIME" TIMESTAMP_NTZ(9),
	"STOPDATATIME" TIMESTAMP_NTZ(9),
	LOGG_ID NUMBER(10,0),
	"NOREPORTS" NUMBER(10,0),
	"NOATTACHMENTS" NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	"MANUALREGISTRATIONDATETIME" TIMESTAMP_NTZ(9),
	"START_TRANS_ID" NUMBER(10,0),
	"STOP_TRANS_ID" NUMBER(10,0)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.TEMP_TRANSACTIONS (
	LOGG_ID NUMBER(10,0),
	TRANS_ID NUMBER(10,0),
	BARCODE_TIME TIMESTAMP_NTZ(9),
	BARCODE_NO VARCHAR(20),
	BARCODE_GROUP NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	NOTES VARCHAR(2000),
	ADJUSTED_GD_ID NUMBER(10,0),
	ADJUSTED_EMPLOYEE_ID NUMBER(10,0),
	"MUASSIGNMENT_ID" NUMBER(10,0),
	"REPORT_NOTES" VARCHAR(2000),
	"MULTIPLICATION_FACTOR" NUMBER(10,0),
	"LATITUDE" NUMBER(9,6),
	"LONGITUDE" NUMBER(9,6),
	"ASSIGNMENTPLANNEDID" VARCHAR(20),
	"GPSTIMESTAMP" TIMESTAMP_NTZ(9),
	"IS_FINGERSCANNED" BOOLEAN
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.TEMP_TRANSACTIONS_ATTACHMENT (
	TEMP_TRANSACTIONS_ATTACHMENT_ID NUMBER(10,0),
	"STATISTICSATTACHMENT_ID" VARCHAR(36),
	LOGG_ID NUMBER(10,0),
	TRANS_ID NUMBER(10,0),
	"ATTACHMENT" VARCHAR(16777216),
	"CHECKSUM" VARCHAR(10),
	"MIMETYPE" VARCHAR(40),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	"GCS_IMPORTTRANSACTIONSFORMRESPONSE_ID" NUMBER(10,0),
	ATTACHMENT_BASESTR VARCHAR(16777216)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.TEMP_TRANSACTIONS_ATTACHMENT_CULTURE (
	"TEMP_TRANSACTIONS_ATTACHMENT_CULTURE_ID" NUMBER(10,0),
	TEMP_TRANSACTIONS_ATTACHMENT_ID NUMBER(10,0),
	"ATTACHMENT" VARCHAR(16777216),
	"MIMETYPE" VARCHAR(40),
	"CULTURE_ID" NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	ATTACHMENT_BASESTR VARCHAR(16777216)
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.USERS (
	USER_ID NUMBER(10,0),
	USER_NO VARCHAR(254),
	USER_NAME VARCHAR(60),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	VALIDFROM TIMESTAMP_NTZ(9),
	VALIDTO TIMESTAMP_NTZ(9),
	"ONLINEUSER" BOOLEAN,
	"CULTURE_ID" NUMBER(10,0),
	"SUPERUSER" BOOLEAN
);
CREATE OR REPLACE TABLE STG_GRS_NO.DBO.XPROCESSED_BARCODES (
	LOGG_ID NUMBER(10,0),
	TRANS_ID NUMBER(10,0),
	SUB_ID NUMBER(10,0),
	BARCODE_DATE TIMESTAMP_NTZ(9),
	BARCODE_TIME TIMESTAMP_NTZ(9),
	BARCODE_NO VARCHAR(16),
	BARCODE_GROUP NUMBER(10,0),
	BARCODE_TYPE NUMBER(10,0),
	LOC_MARK_TYPE NUMBER(10,0),
	REQUIRED BOOLEAN,
	EMPLOYEE_ID NUMBER(10,0),
	GD_ID NUMBER(10,0),
	VALID_ASSOCIATION BOOLEAN,
	COMMITMENT_ID NUMBER(10,0),
	DAY_T_ID NUMBER(10,0),
	VERSION_FROM TIMESTAMP_NTZ(9),
	ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
	CE_VALID_ASSOCIATION BOOLEAN,
	CE_COMMITMENT_ID NUMBER(10,0),
	CE_EXCEPTION NUMBER(10,0),
	CE_DAY_T_ID NUMBER(10,0),
	CE_DATEFROM TIMESTAMP_NTZ(9),
	CE_TIMEFROM TIMESTAMP_NTZ(9),
	REQ_CORRECTION_TYPE NUMBER(10,0),
	ERROR_FLAG BOOLEAN,
	NOTES VARCHAR(100),
	ASSOCIATION_NORMAL NUMBER(5,0),
	ASSOCIATION_CE NUMBER(5,0),
	LOCATION_MARK_ID NUMBER(10,0),
	PROD_OBJ_ID NUMBER(10,0),
	LOC_OBJ_ID NUMBER(10,0),
	POSITION VARCHAR(100),
	ACTION VARCHAR(100),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	REPORT_NOTES VARCHAR(2000),
	EMPLOYEE_NO VARCHAR(6),
	FIRSTNAME VARCHAR(20),
	LASTNAME VARCHAR(28),
	MULTIPLICATION_FACTOR NUMBER(10,0),
	TIME_CONSUMPTION NUMBER(10,0)
);

CREATE OR REPLACE DATABASE ODS_GRS_NO;

CREATE OR REPLACE SCHEMA ODS_GRS_NO.DBO;

CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.ALARM (
	ALARM_ID NUMBER(10,0),
	ALARM_NO VARCHAR(50),
	ALARM_GROUP_ID NUMBER(10,0),
	ALARM_TYPE_ID NUMBER(10,0),
	ALARM_KEY_STORAGE_INCL NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	UNIT_PROD_OBJ_ID NUMBER(10,0),
	UNIT_LOC_OBJ_ID NUMBER(10,0),
	CENTRAL_UNIT_TYPE VARCHAR(50),
	ALARM_ADM_CENTRAL_ID NUMBER(10,0),
	ALARM_DISTRIB_CENTRAL_ID NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	NOTES BINARY(8388608),
	ALARM_PORTABLE_ID NUMBER(10,0),
	TURN_OUT_COUNT NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	ALARM_PORTABLE_ITEM_ID NUMBER(10,0),
	APPERANCE_TIME NUMBER(10,0),
	APPERANCE_TIME_EXCEPTION NUMBER(10,0),
	APPERANCE_TIME_EXCEPTION_START TIMESTAMP_NTZ(9),
	APPERANCE_TIME_EXCEPTION_STOP TIMESTAMP_NTZ(9),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (ALARM_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.ALARM_CODES (
	ALARM_CODE_ID NUMBER(38,0) NOT NULL,
	SHORT_DESCRIPTION VARCHAR(4000),
	DESCRIPTION VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ALARM_CODE_NO VARCHAR(20),
	INSERT_USER VARCHAR(254),
	ROWID VARCHAR(16),
	EXCLUDE_FROM_REPORT BOOLEAN,
	SHOWFORASSIGNMENT BOOLEAN,
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_ALARM_CODES PRIMARY KEY (ALARM_CODE_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.ALARM_GROUP (
	ALARM_GROUP_ID NUMBER(38,0) NOT NULL,
	DESCRIPTION VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	SORT_ORDER NUMBER(10,0),
	ALARM_GROUP_NO VARCHAR(10),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	PORTABLE_ALARM NUMBER(10,0),
	TRANSFERTOGCS BOOLEAN,
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_ALARM_GROUP PRIMARY KEY (ALARM_GROUP_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.ASSIGNMENT_TYPE (
	ASSIGNMENT_TYPE_ID NUMBER(38,0) NOT NULL,
	DESCRIPTION VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ALLOW_TO_SPLIT NUMBER(10,0),
	ASSIGNMENT_TYPE_NO VARCHAR(2),
	ALLOW_OUTSIDE_GD NUMBER(10,0),
	MINUTES_REDUCE_ST NUMBER(10,0),
	MINUTES_REDUCE_END NUMBER(10,0),
	ALLOW_TO_DISPLACE NUMBER(10,0),
	MINUTES_ADVANCE NUMBER(10,0),
	MINUTES_AFTERWARDS NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ALLOW_MULTIPLE_ASSIGNM_PER_DAYT BOOLEAN,
	GROUPED_COMMITMENT NUMBER(10,0),
	GROUPED_COMMITMENT_MEMBER NUMBER(10,0),
	RAZZIA NUMBER(10,0),
	SHOW_PO NUMBER(10,0),
	Y_TYPE NUMBER(10,0),
	ICON_ID VARCHAR(20),
	TIME_BANK_NOT_USED NUMBER(10,0),
	EXCLUDE_FROM_TIME_BANK NUMBER(10,0),
	INTERNAL NUMBER(10,0),
	UICOLOR VARCHAR(20),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_ASSIGNMENT_TYPE PRIMARY KEY (ASSIGNMENT_TYPE_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.COMMITMENT (
	COMMITMENT_ID NUMBER(38,0) NOT NULL,
	DESCRIPTION VARCHAR(4000),
	INSTRUCTION VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	ASSIGNMENT_TYPE_NO NUMBER(10,0),
	ASSIGNMENT_TYPE_ID NUMBER(10,0),
	CONTRACT_ID NUMBER(10,0),
	CONTRACT_PART_ID NUMBER(10,0),
	ROAD_TIME_FROM_GD NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	VERSION_FROM TIMESTAMP_NTZ(9),
	VERSION_TO TIMESTAMP_NTZ(9),
	DISTRIBUTION_TYPE NUMBER(10,0),
	RANDOM_COUNT NUMBER(10,0),
	RANDOM_PERIOD NUMBER(10,0),
	RANDOM_PERIOD_TYPE NUMBER(10,0),
	RANDOM_MIN_DIST NUMBER(10,0),
	PERIOD_LENGTH NUMBER(10,0),
	PERIOD_TOTALLENGTH NUMBER(10,0),
	PERIOD_START TIMESTAMP_NTZ(9),
	ABS_COUNT NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	PRIORITY_TYPE NUMBER(5,0),
	INCOME_TYPE NUMBER(5,0),
	EXECUTE_TYPE NUMBER(5,0),
	MULTIPLE_EXECUTION NUMBER(5,0),
	SEASON_TYPE NUMBER(5,0),
	PROCESS_TYPE NUMBER(5,0),
	INCOME NUMBER(19,4),
	ON_REPORT_REPLACE_CO_WITH_PO NUMBER(10,0),
	RED NUMBER(10,0),
	ENABLE_MONITORING NUMBER(10,0),
	ENABLE_PRE_START_MONITORING NUMBER(10,0),
	ENABLE_POST_START_MONITORING NUMBER(10,0),
	PRE_START NUMBER(10,0),
	POST_START NUMBER(10,0),
	ENABLE_PRE_STOP_MONITORING NUMBER(10,0),
	ENABLE_POST_STOP_MONITORING NUMBER(10,0),
	PRE_STOP NUMBER(10,0),
	POST_STOP NUMBER(10,0),
	ENABLE_PERIOD_MONITORING NUMBER(10,0),
	MONITORING_PERIOD NUMBER(10,0),
	ENABLE_NOTIFY NUMBER(10,0),
	PRE_TRANSPORT_NOTIFY_TIME NUMBER(10,0),
	NOTIFY_PERIOD NUMBER(10,0),
	ENABLE_NOTIFY_TRANSPORT NUMBER(10,0),
	HIDDEN NUMBER(10,0),
	ALLOWFINGERSCANNING BOOLEAN,
	EXTRAORDER_ID NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_COMMITMENT PRIMARY KEY (COMMITMENT_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.COMMIT_LOC_OBJECT (
	COMMITMENT_ID NUMBER(10,0),
	PROD_OBJ_ID NUMBER(10,0),
	LOC_OBJ_ID NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (COMMITMENT_ID, PROD_OBJ_ID, LOC_OBJ_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.CONTRACT (
	CONTRACT_ID NUMBER(38,0) NOT NULL,
	CONTRACT_NO VARCHAR(4000),
	CUSTOMER_ID NUMBER(38,0),
	CONTACT BINARY(8388608),
	INVOICE_LATEST DATE,
	INVOICED_TO DATE,
	VALIDTO DATE,
	MONTHLY_INC_ALL NUMBER(19,4),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	VALIDFROM TIMESTAMP_NTZ(9),
	RENEWED TIMESTAMP_NTZ(9),
	TERMINATE TIMESTAMP_NTZ(9),
	CANCELLED TIMESTAMP_NTZ(9),
	CONTRACT_TYPE_ID NUMBER(10,0),
	TERM_OF_NOTICE NUMBER(10,0),
	CANCEL_TYPE_ID NUMBER(10,0),
	CANCEL_GROUND_ID NUMBER(10,0),
	INVOICE_TYPE_ID NUMBER(10,0),
	PAYMENT_MONTH VARCHAR(12),
	JOINT_INVOICE VARCHAR(2),
	JOINT_INVOICE_SORT VARCHAR(10),
	INVOICE_FEE_ID NUMBER(10,0),
	INVOICE_ACCEPT NUMBER(10,0),
	TERMS_OF_PAYMNT_ID NUMBER(10,0),
	MANUAL_ENVELOPE NUMBER(10,0),
	MONTHLY_INC_CONT NUMBER(19,4),
	CUSTOMER_REF BINARY(8388608),
	INVOICE_TEXT_CODE VARCHAR(2),
	SALESMAN_ID VARCHAR(5),
	ENGINEER_ID VARCHAR(4),
	SIGNED_CONTRACT NUMBER(10,0),
	PRICE_CHANGE_PERC NUMBER(18,0),
	PRICE_CHANGE_ID VARCHAR(4),
	TOTAL_INV NUMBER(19,4),
	TOTAL_INV_PREV_Y NUMBER(19,4),
	TOTAL_INV_THIS_Y NUMBER(19,4),
	LATEST_INVOICE_ID NUMBER(10,0),
	LATEST_EXTRA_ID NUMBER(10,0),
	NEW_CONTRACT NUMBER(10,0),
	UPDATE_CODE VARCHAR(1),
	CANCELLED_BY VARCHAR(30),
	PRICE_CHANGE_EARL TIMESTAMP_NTZ(9),
	REPLACE_OTHER_CONT VARCHAR(1),
	REGISTRATION_DATE TIMESTAMP_NTZ(9),
	REGISTERED_BY VARCHAR(10),
	LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
	LATEST_CHANGED_BY VARCHAR(10),
	ROWIDMASTER VARCHAR(30),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	CONTRACT_CONDITION_ID NUMBER(10,0),
	PROFITCENTER_ID NUMBER(10,0),
	MASTER_DATE TIMESTAMP_NTZ(9),
	CENTRAL_VALIDTO TIMESTAMP_NTZ(9),
	SYSTEM_CONTRACT_TYPE_ID NUMBER(5,0),
	CENTRAL_USER VARCHAR(60),
	CENTRAL_COMPANY VARCHAR(60),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTRACT PRIMARY KEY (CONTRACT_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.CONTRACT_PART (
	CONTRACT_ID NUMBER(38,0) NOT NULL,
	CONTRACT_PART_ID NUMBER(38,0) NOT NULL,
	CONTRACT_PART_NO VARCHAR(4000),
	CUST_OBJ_ID NUMBER(38,0),
	CONTRACT_PART_CENTRAL_NO VARCHAR(20),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	PRODUCT_ID NUMBER(10,0),
	INVOICE_ADDR_CODE VARCHAR(1),
	INVOICE_TEXT_CODE VARCHAR(2),
	TRANSMITTER_NO VARCHAR(12),
	PLANNED_PROD_START TIMESTAMP_NTZ(9),
	TERMINATION_CODE VARCHAR(1),
	LATEST_CONTR_CHAN NUMBER(10,0),
	CONTR_REG_DATE TIMESTAMP_NTZ(9),
	VALIDFROM TIMESTAMP_NTZ(9),
	VALIDTO TIMESTAMP_NTZ(9),
	PORTF_PROFITC_ID NUMBER(10,0),
	PORTF_MONTH_INCOME NUMBER(19,4),
	REGISTRATION_DATE TIMESTAMP_NTZ(9),
	REGISTERED_BY VARCHAR(10),
	LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
	LATEST_CHANGED_BY VARCHAR(10),
	ROWIDMASTER VARCHAR(30),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	MASTER_DATE TIMESTAMP_NTZ(9),
	CENTRAL_USER VARCHAR(60),
	CENTRAL_COMPANY VARCHAR(60),
	COMMITMENT_INCOME_TYPE NUMBER(10,0),
	DESCRIPTION VARCHAR(60),
	MULTIPLE_ASSIGNMENTS NUMBER(10,0),
	COMMITMENT_INCOME_MONEY NUMBER(19,4),
	TIME_BANK NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTRACT_PART PRIMARY KEY (CONTRACT_ID, CONTRACT_PART_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.CONTRACT_TYPE (
	CONTRACT_TYPE_ID NUMBER(38,0) NOT NULL,
	DESCRIPTION VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CONTRACT_TYPE_NO VARCHAR(10),
	ROWIDMASTER VARCHAR(30),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTRACT_TYPE PRIMARY KEY (CONTRACT_TYPE_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.CONTR_PART_VER (
	CONTRACT_ID NUMBER(38,0) NOT NULL,
	CONTRACT_PART_ID NUMBER(38,0) NOT NULL,
	VERSION_FROM DATE NOT NULL,
	PROFITCENTER_ID NUMBER(38,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	VERSION_TO TIMESTAMP_NTZ(9),
	MONTHLY_INCOME NUMBER(19,4),
	CONTR_REG_DATE TIMESTAMP_NTZ(9),
	INVOICE_STATUS NUMBER(10,0),
	ALTERATION_TYPE VARCHAR(1),
	PRICE_CHANGE_CONST NUMBER(18,0),
	REGISTRATION_DATE TIMESTAMP_NTZ(9),
	REGISTERED_BY VARCHAR(10),
	LATEST_CHANGE_DATE TIMESTAMP_NTZ(9),
	LATEST_CHANGED_BY VARCHAR(10),
	INSERT_USER BINARY(8388608),
	CHANGE_USER BINARY(8388608),
	ROWID VARCHAR(16),
	DAYTYPE_MINUTES NUMBER(10,0),
	DATE_MINUTES NUMBER(10,0),
	DAYTYPE_CALCULATION_READY NUMBER(5,0),
	DATE_CALCULATION_READY NUMBER(5,0),
	MASTER_DATE TIMESTAMP_NTZ(9),
	CHANGE_TYPE_1 NUMBER(5,0),
	CHANGE_TYPE_2 NUMBER(5,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (CONTRACT_ID, CONTRACT_PART_ID, VERSION_FROM)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.CUSTOMER (
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	NAME_SEARCH BINARY(8388608),
	CUSTOMER_TYPE_ID NUMBER(38,0),
	CUSTOMER_NO BINARY(8388608),
	NAME_1 BINARY(8388608),
	ADDRESS BINARY(8388608),
	POSTCODE BINARY(8388608),
	POSTADDRESS BINARY(8388608),
	VALIDTO DATE,
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ORGANIZATION_NO VARCHAR(11),
	NAME_2 BINARY(8388608),
	POSTDELIVERY_ADDRESS BINARY(8388608),
	TELEPHONE_1 BINARY(8388608),
	TELEPHONE_2 BINARY(8388608),
	TELEFAX BINARY(8388608),
	ROWIDMASTER VARCHAR(30),
	MARKET_CODE BINARY(8388608),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
	MASTER_DATE TIMESTAMP_NTZ(9),
	SYSTEM_CUSTOMER_TYPE_ID NUMBER(5,0),
	SYSTEM_PROFITCENTER_ID NUMBER(5,0),
	CENTRAL_COMPANY VARCHAR(60),
	CENTRAL_USER BINARY(8388608),
	CONFIRM_QUESTION_LIMIT NUMBER(10,0),
	REQUIRESKAMPERMISSION BOOLEAN,
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	GRSRWENABLE BOOLEAN,
	CONSTRAINT PK_CUSTOMER PRIMARY KEY (CUSTOMER_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.CUSTOMER_OBJECT (
	CUST_OBJ_NO BINARY(8388608),
	CUST_OBJ_ID NUMBER(38,0) NOT NULL,
	PROFITCENTER_ID VARCHAR(4000),
	NAME BINARY(8388608),
	ADDRESS BINARY(8388608),
	POSTDELIVERY_ADDRESS BINARY(8388608),
	POSTCODE BINARY(8388608),
	ADDRESS_2 BINARY(8388608),
	POSTADDRESS BINARY(8388608),
	ASSIGNMENTGEOLOCATION BINARY(8388608),
	TERMINATE_DATE DATE,
	GEO_LAT BINARY(8388608),
	GEO_LONG BINARY(8388608),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	BLOCK BINARY(8388608),
	CUST_OBJ_NO_ALT VARCHAR(15),
	DISTRICT BINARY(8388608),
	REF_PERSON BINARY(8388608),
	TELEPHONE BINARY(8388608),
	TELEFAX BINARY(8388608),
	TELEMODEM BINARY(8388608),
	MARKET_ID NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
	MASTER_DATE TIMESTAMP_NTZ(9),
	CITY_ID NUMBER(10,0),
	CITY_PART_ID NUMBER(10,0),
	BLOCK_ID NUMBER(10,0),
	INVOICECUSTOMER_NO VARCHAR(25),
	CUSTOMER_OBJECT_TYPE VARCHAR(2),
	ADDRESSCODE VARCHAR(1),
	PROFITCENTER_NO VARCHAR(4),
	XPOS BINARY(8388608),
	YPOS BINARY(8388608),
	CENTRAL_USER VARCHAR(60),
	CENTRAL_COMPANY VARCHAR(60),
	MARKET_ITEM_ID NUMBER(10,0),
	NOTES BINARY(8388608),
	PROTECTED NUMBER(10,0),
	ENABLE_PROD_OBJ_POSITION NUMBER(10,0),
	VISION_ID VARCHAR(15),
	ASSIGNMENTPOSTCODE BINARY(8388608),
	ALLOWCAMERA BOOLEAN,
	CALENDAR_TEMPLATE_ID NUMBER(10,0),
	USECUSTOMERADDRESS BOOLEAN,
	XDE_SUBCONTRACTOR_CCT_NO VARCHAR(20),
	XDE_EXTRA_INFORMATION VARCHAR(300),
	XDE_PRODUCTS VARCHAR(100),
	XDE_CUSTOMER_NAME BINARY(8388608),
	XDE_IS_EXTERNAL BOOLEAN,
	ISBLACKLISTED BOOLEAN,
	BLACKLISTCOMMENT VARCHAR(1000),
	GLOBAL_MASTER_NO VARCHAR(50),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CUSTOMER_OBJECT PRIMARY KEY (CUST_OBJ_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.CUSTOMER_RESTRICTED_DATA (
	"ROWID" NUMBER(10,0),
	CUSTOMER_ID FLOAT,
	SOURCE_SYSTEM_NAME VARCHAR(2000)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.CUST_CUST_OBJECT (
	CUST_OBJ_ID NUMBER(38,0) NOT NULL,
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	DATEFROM DATE NOT NULL,
	DATETO DATE,
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	MASTER_DATE TIMESTAMP_NTZ(9),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CUST_CUST_OBJECT PRIMARY KEY (CUST_OBJ_ID, CUSTOMER_ID, DATEFROM)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.GCS_EXPORT_ERP_CALL_OUTS (
	CASE_NUMBER VARCHAR(14),
	ALARM_NUMBER VARCHAR(50),
	ALARM_CENTER_NAME VARCHAR(50),
	ALARM_CENTER_CONTRACT_NUMBER VARCHAR(30),
	ALARM_TIME VARCHAR(10),
	ALARM_REACH_TIME VARCHAR(10),
	ALARM_TYPE VARCHAR(55),
	ALARM_TYPE_TEXT VARCHAR(50),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	GUARD_SECTION VARCHAR(40000),
	MEASURES_CODE NUMBER(38,0),
	MEASURES_TEXT VARCHAR(60),
	BUILDING_NUMBER BINARY(8388608),
	BUILDING_NAME BINARY(8388608),
	BUILDING_ADDRESS BINARY(8388608),
	BUILDING_LOCATION BINARY(8388608),
	BUILDING_SECTION BINARY(8388608),
	BUILDING_ZIP_CODE BINARY(8388608),
	FREE_TEXT_FROM_GUARD BINARY(8388608),
	FREE_TEXT_FROM_OPERATOR BINARY(8388608),
	ALARM_ISSUE_CODE NUMBER(10,0),
	ALARM_ISSUE_DESCRIPTION VARCHAR(60),
	TRANSFERRING_TIME VARCHAR(10),
	HANDLE_MANUALLY BOOLEAN,
	ALARM_CENTER_NUMBER VARCHAR(3),
	ALARM_CENTER_REFERENCE VARCHAR(36),
	ALARM_CENTER_ADDRESS VARCHAR(255),
	ALARM_CENTER_ZIP_CODE VARCHAR(50),
	ALARM_CENTER_LOCATION VARCHAR(30),
	ALARM_CENTER_TELEPHONE_NUMBER VARCHAR(40),
	CUSTOMER_OBJECT VARCHAR(30),
	CUSTOMER_NUMBER BINARY(8388608),
	CUSTOMER_ORGANIZATION_ID VARCHAR(15),
	CUSTOMER_VAT_NUMBER BINARY(8388608),
	CUSTOMER_SOCIAL_SECURITY_NUMBER BINARY(8388608),
	CUSTOMER_NAME_1 BINARY(8388608),
	CUSTOMER_NAME_2 BINARY(8388608),
	CUSTOMER_ADDRESS BINARY(8388608),
	CUSTOMER_ZIP_CODE BINARY(8388608),
	CUSTOMER_LOCATION BINARY(8388608),
	INVOICE_CUSTOMER_NAME_1 BINARY(8388608),
	INVOICE_CUSTOMER_NAME_2 BINARY(8388608),
	INVOICE_CUSTOMER_ADDRESS BINARY(8388608),
	INVOICE_CUSTOMER_ZIPCODE BINARY(8388608),
	INVOICE_CUSTOMER_LOCATION BINARY(8388608),
	EXPORTED_TIME_STAMP TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	CALL_OUT_BARCODE BINARY(8388608),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_ PRIMARY KEY (CASE_NUMBER)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.GCS_EXPORT_ERP_CALL_OUT_GUARDS (
	BASE_LOCATION_NUMBER VARCHAR(20),
	COST_CENTRE VARCHAR(20),
	ARRIVAL_TIME VARCHAR(10),
	DEPARTURE_TIME VARCHAR(10),
	ELAPSED_TIME NUMBER(30,0),
	GUARD_TYPE VARCHAR(1),
	CASE_NUMBER VARCHAR(14),
	VISIT_DETAIL VARCHAR(16777216),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	EMPLOYMENT_NUMBER BINARY(8388608),
	ROWID VARCHAR(16),
	ON_WAY_TIME VARCHAR(10),
	RETURN_TIME_BACK_TO_OFFICE VARCHAR(10),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_GCS_EXPORT_ERP_CALL_OUT_GUARDS PRIMARY KEY (CASE_NUMBER, ROWID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.GD (
	GD_ID NUMBER(38,0) NOT NULL,
	GD_NO VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	PROFITCENTER_ID NUMBER(10,0),
	GD_TYPE_ID NUMBER(10,0),
	GD_KNOWREQ NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	NAME BINARY(8388608),
	ADDRESS BINARY(8388608),
	POSTCODE BINARY(8388608),
	POSTADDRESS BINARY(8388608),
	REF_PERSON BINARY(8388608),
	TELEPHONE BINARY(8388608),
	TELEFAX BINARY(8388608),
	TELEMODEM BINARY(8388608),
	INSERT_USER BINARY(8388608),
	CHANGE_USER BINARY(8388608),
	ROWID VARCHAR(16),
	POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
	PE_PROFITC VARCHAR(4),
	PE_NO VARCHAR(4),
	REPORT_MARK_FOLDER_ID NUMBER(10,0),
	EXPORT_TO_GMP NUMBER(10,0),
	VISIBLE_IN_153 NUMBER(10,0),
	EXCLUDE_EMPTY_GD_SHIFT NUMBER(10,0),
	STARTLOCATION BINARY(8388608),
	GEOLOCATION BINARY(8388608),
	GEO_LAT BINARY(8388608),
	GEO_LONG BINARY(8388608),
	CALENDAR_TEMPLATE_ID NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_GD PRIMARY KEY (GD_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.GRS_ADDONINFO (
	CASE_NUMBER VARCHAR(14),
	CUST_OBJ_NO VARCHAR(15),
	CUSTOMER_NO BINARY(8388608),
	GRSR_EVENT_ID NUMBER(38,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ALARM_NO VARCHAR(50),
	TRANSFERRING_TIME TIMESTAMP_NTZ(9),
	ALARM_GROUP_NO VARCHAR(50),
	ALARM_GROUP_NAME VARCHAR(60),
	ALARM_PORTABLE_NO VARCHAR(50),
	ALARAM_PORTABLE_NAME VARCHAR(60),
	CUST_OBJ_NO_ALT VARCHAR(15),
	ALARM_ID NUMBER(10,0),
	ALARM_TIME TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ID NUMBER(10,0),
	SFU_EVENT_ID NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_GRS_ADDONINFO PRIMARY KEY (CASE_NUMBER)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.LOCATION_MARK (
	LOCATION_MARK_ID NUMBER(38,0) NOT NULL,
	BARCODE VARCHAR(4000),
	POSITION BINARY(8388608),
	POSITION_GUARD_INFO VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	PROD_OBJ_ID NUMBER(10,0),
	LOC_OBJ_ID NUMBER(10,0),
	LOC_MARK_TYPE_ID NUMBER(10,0),
	ACTION VARCHAR(100),
	ORDER_NO NUMBER(10,0),
	ORDER_NO_EXTRA NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	VALIDTO TIMESTAMP_NTZ(9),
	VALIDFROM TIMESTAMP_NTZ(9),
	LOC_MARK_SERVICE_NO VARCHAR(60),
	LOC_MARK_SERVICE_LOCATION VARCHAR(60),
	LOC_MARK_SERVICE_INTERVAL_ID NUMBER(10,0),
	LOC_MARK_SERVICE_EXT_INTERVAL_ID NUMBER(10,0),
	LOC_MARK_SERVICE_TYPE_ID NUMBER(10,0),
	LOC_MARK_SERVICE_TYPE_ITEM_ID NUMBER(10,0),
	LOC_MARK_SERVICE_TYPE_ITEM_2_ID NUMBER(10,0),
	LOC_MARK_SERVICE_YEAR NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_LOCATION_MARK PRIMARY KEY (LOCATION_MARK_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.LOCATION_OBJECT (
	PROD_OBJ_ID NUMBER(38,0) NOT NULL,
	LOC_OBJ_ID NUMBER(38,0) NOT NULL,
	DESCRIPTION VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	VALIDFROM TIMESTAMP_NTZ(9),
	VALIDTO TIMESTAMP_NTZ(9),
	LOCATION_OBJ_ID NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_LOCATION_OBJECT PRIMARY KEY (PROD_OBJ_ID, LOC_OBJ_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.LOC_MARK_REPORT (
	LOCATION_MARK_ID NUMBER(10,0),
	REPORT_MARK_ID NUMBER(10,0),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	SORT_ORDER NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (LOCATION_MARK_ID, REPORT_MARK_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.LOC_MARK_TYPE (
	LOC_MARK_TYPE_ID NUMBER(10,0),
	FORCING NUMBER(10,0),
	COLOUR VARCHAR(20),
	NAME VARCHAR(20),
	DESCRIPTION VARCHAR(100),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	RGB_COLOUR NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_LOC_MARK_TYPE PRIMARY KEY (LOC_MARK_TYPE_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.PROCESSED_TRANSACTIONS (
	LOGG_ID NUMBER(38,0) NOT NULL,
	TRANS_ID NUMBER(38,0) NOT NULL,
	SUB_ID NUMBER(38,0) NOT NULL,
	GD_ID NUMBER(38,0),
	PROD_OBJ_ID NUMBER(38,0),
	LOC_OBJ_ID NUMBER(38,0),
	MULTIPLICATION_FACTOR NUMBER(38,0),
	REPORT_NOTES BINARY(8388608),
	COMMITMENT_ID NUMBER(38,0),
	POSITION BINARY(8388608),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	BARCODE_DATE TIMESTAMP_NTZ(9),
	BARCODE_TIME TIMESTAMP_NTZ(9),
	BARCODE_NO VARCHAR(16),
	BARCODE_GROUP NUMBER(10,0),
	BARCODE_TYPE NUMBER(10,0),
	LOC_MARK_TYPE NUMBER(10,0),
	REQUIRED BOOLEAN,
	EMPLOYEE_ID NUMBER(10,0),
	VALID_ASSOCIATION BOOLEAN,
	DAY_T_ID NUMBER(10,0),
	VERSION_FROM TIMESTAMP_NTZ(9),
	ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
	CE_VALID_ASSOCIATION BOOLEAN,
	CE_COMMITMENT_ID NUMBER(10,0),
	CE_EXCEPTION NUMBER(10,0),
	CE_DAY_T_ID NUMBER(10,0),
	CE_DATEFROM TIMESTAMP_NTZ(9),
	CE_TIMEFROM TIMESTAMP_NTZ(9),
	REQ_CORRECTION_TYPE NUMBER(10,0),
	ERROR_FLAG BOOLEAN,
	NOTES BINARY(8388608),
	ASSOCIATION_NORMAL NUMBER(5,0),
	ASSOCIATION_CE NUMBER(5,0),
	LOCATION_MARK_ID NUMBER(10,0),
	ACTION VARCHAR(100),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	EMPLOYEE_NO BINARY(8388608),
	FIRSTNAME BINARY(8388608),
	LASTNAME BINARY(8388608),
	TIME_CONSUMPTION NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_PROCESSED_TRANSACTIONS PRIMARY KEY (LOGG_ID, TRANS_ID, SUB_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.PRODUCTION_OBJECT (
	PROD_OBJ_ID NUMBER(38,0) NOT NULL,
	PROD_OBJ_NO BINARY(8388608),
	DESCRIPTION VARCHAR(4000),
	ADDRESS BINARY(8388608),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	POSTDELIVERY_ADDRESS BINARY(8388608),
	POSTCODE BINARY(8388608),
	POSTADDRESS BINARY(8388608),
	REF_PERSON BINARY(8388608),
	TELEPHONE BINARY(8388608),
	TELEFAX BINARY(8388608),
	TELEMODEM BINARY(8388608),
	XPOS BINARY(8388608),
	YPOS BINARY(8388608),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ADDRESS_2 BINARY(8388608),
	POSTDELIVERY_ADDRESS_EXTRA BINARY(8388608),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_PRODUCTION_OBJECT PRIMARY KEY (PROD_OBJ_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.PROD_CUST_OBJECT (
	PROD_OBJ_ID NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (PROD_OBJ_ID, CUST_OBJ_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.PROFITCENTER (
	PROFITCENTER_ID NUMBER(38,0) NOT NULL,
	PROFITCENTER_NO VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	RESPONSIBLE BINARY(8388608),
	DESCRIPTION VARCHAR(60),
	DATEFROM TIMESTAMP_NTZ(9),
	DATETO TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	POSITION_TYPE_REF NUMBER(10,0),
	VISIBLE BOOLEAN,
	CO_OWNERSHIP_ALLOWED NUMBER(10,0),
	KPISTARTDATE TIMESTAMP_NTZ(9),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_PROFITCENTER PRIMARY KEY (PROFITCENTER_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.REPORT_MARK (
	REPORT_MARK_ID NUMBER(38,0) NOT NULL,
	REPORT_LABEL VARCHAR(4000),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	REP_MARK_TYPE_ID NUMBER(10,0),
	BARCODE VARCHAR(20),
	ACTIVITY_CODE VARCHAR(1),
	TIMELIMIT_CODE VARCHAR(3),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	REPORT_MARK_VERSION NUMBER(5,0),
	RISK_LEVEL NUMBER(10,0),
	SYSTEM BOOLEAN,
	REPORT_FOLDER_LABEL VARCHAR(30),
	STATISTICS_MEMBER NUMBER(10,0),
	CODE VARCHAR(10),
	REPORT_LABEL_2 VARCHAR(60),
	REPORT_MARK_SET_ONLY NUMBER(10,0),
	SBA NUMBER(10,0),
	REPORT_LABEL_GCS_SYNC VARCHAR(60),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_REPORT_MARK PRIMARY KEY (REPORT_MARK_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.REPORT_MARK_CULTURE (
	REPORT_MARK_ID NUMBER(10,0),
	CULTURE_ID NUMBER(10,0),
	REPORT_LABEL VARCHAR(60),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (REPORT_MARK_ID, CULTURE_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.SFU_COMMITMENTPERFORMED (
	COMMITMENT_ID NUMBER(10,0),
	DATEPERFORMED TIMESTAMP_NTZ(9),
	GD_ID NUMBER(10,0),
	GD_STARTDATE TIMESTAMP_NTZ(9),
	EMPLOYEE_ID NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	STARTDATETIME TIMESTAMP_NTZ(9),
	STOPDATATIME TIMESTAMP_NTZ(9),
	LOGG_ID NUMBER(10,0),
	NOREPORTS NUMBER(10,0),
	NOATTACHMENTS NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	MANUALREGISTRATIONDATETIME TIMESTAMP_NTZ(9),
	START_TRANS_ID NUMBER(10,0),
	STOP_TRANS_ID NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (COMMITMENT_ID, DATEPERFORMED)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.SFU_COMMITMENTPERFORMEDEXTRAVISITS (
	SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID NUMBER(10,0),
	COMMITMENT_ID NUMBER(10,0),
	DATEPERFORMED TIMESTAMP_NTZ(9),
	GD_ID NUMBER(10,0),
	GD_STARTDATE TIMESTAMP_NTZ(9),
	EMPLOYEE_ID NUMBER(10,0),
	CUST_OBJ_ID NUMBER(10,0),
	STARTDATETIME TIMESTAMP_NTZ(9),
	STOPDATATIME TIMESTAMP_NTZ(9),
	LOGG_ID NUMBER(10,0),
	NOREPORTS NUMBER(10,0),
	NOATTACHMENTS NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	MANUALREGISTRATIONDATETIME TIMESTAMP_NTZ(9),
	START_TRANS_ID NUMBER(10,0),
	STOP_TRANS_ID NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.TEMP_TRANSACTIONS (
	LOGG_ID NUMBER(38,0) NOT NULL,
	TRANS_ID NUMBER(38,0) NOT NULL,
	BARCODE_TIME TIMESTAMP_NTZ(9),
	BARCODE_NO VARCHAR(4000),
	BARCODE_GROUP NUMBER(10,0),
	LATITUDE BINARY(8388608),
	LONGITUDE BINARY(8388608),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	NOTES BINARY(8388608),
	ADJUSTED_GD_ID NUMBER(10,0),
	ADJUSTED_EMPLOYEE_ID NUMBER(10,0),
	MUASSIGNMENT_ID NUMBER(10,0),
	REPORT_NOTES BINARY(8388608),
	MULTIPLICATION_FACTOR NUMBER(10,0),
	ASSIGNMENTPLANNEDID VARCHAR(20),
	IS_FINGERSCANNED BOOLEAN,
	GPSTIMESTAMP TIMESTAMP_NTZ(9),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_TEMP_TRANSACTIONS PRIMARY KEY (LOGG_ID, TRANS_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.TEMP_TRANSACTIONS_ATTACHMENT (
	TEMP_TRANSACTIONS_ATTACHMENT_ID NUMBER(10,0),
	STATISTICSATTACHMENT_ID VARCHAR(36),
	LOGG_ID NUMBER(10,0),
	TRANS_ID NUMBER(10,0),
	ATTACHMENT VARCHAR(16777216),
	CHECKSUM VARCHAR(10),
	MIMETYPE VARCHAR(40),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	GCS_IMPORTTRANSACTIONSFORMRESPONSE_ID NUMBER(10,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ATTACHMENT_BASESTR VARCHAR(16777216),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (TEMP_TRANSACTIONS_ATTACHMENT_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.TEMP_TRANSACTIONS_ATTACHMENT_CULTURE (
	TEMP_TRANSACTIONS_ATTACHMENT_CULTURE_ID NUMBER(10,0),
	TEMP_TRANSACTIONS_ATTACHMENT_ID NUMBER(10,0),
	ATTACHMENT VARCHAR(16777216),
	MIMETYPE VARCHAR(40),
	CULTURE_ID NUMBER(10,0),
	INSERT_USER VARCHAR(254),
	INSERT_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	ROWID VARCHAR(16),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ATTACHMENT_BASESTR VARCHAR(16777216),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (TEMP_TRANSACTIONS_ATTACHMENT_CULTURE_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.USERS (
	USER_ID NUMBER(10,0),
	USER_NO BINARY(8388608),
	USER_NAME BINARY(8388608),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER BINARY(8388608),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER BINARY(8388608),
	ROWID VARCHAR(16),
	VALIDFROM TIMESTAMP_NTZ(9),
	VALIDTO TIMESTAMP_NTZ(9),
	ONLINEUSER BOOLEAN,
	CULTURE_ID NUMBER(10,0),
	SUPERUSER BOOLEAN,
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_CONTR_PART_VER PRIMARY KEY (USER_ID)
);
CREATE OR REPLACE TABLE ODS_GRS_NO.DBO.XPROCESSED_BARCODES CLUSTER BY (BARCODE_NO)(
	LOGG_ID NUMBER(38,0),
	TRANS_ID NUMBER(38,0),
	SUB_ID NUMBER(38,0),
	BARCODE_DATE TIMESTAMP_NTZ(9),
	BARCODE_TIME TIMESTAMP_NTZ(9),
	BARCODE_NO VARCHAR(16),
	BARCODE_GROUP NUMBER(38,0),
	BARCODE_TYPE NUMBER(38,0),
	LOC_MARK_TYPE NUMBER(38,0),
	REQUIRED BOOLEAN,
	EMPLOYEE_ID NUMBER(38,0),
	GD_ID NUMBER(38,0),
	VALID_ASSOCIATION BOOLEAN,
	COMMITMENT_ID NUMBER(38,0),
	DAY_T_ID NUMBER(38,0),
	VERSION_FROM TIMESTAMP_NTZ(9),
	ASSIGNM_TIMEFROM TIMESTAMP_NTZ(9),
	CE_VALID_ASSOCIATION BOOLEAN,
	CE_COMMITMENT_ID NUMBER(38,0),
	CE_EXCEPTION NUMBER(38,0),
	CE_DAY_T_ID NUMBER(38,0),
	CE_DATEFROM TIMESTAMP_NTZ(9),
	CE_TIMEFROM TIMESTAMP_NTZ(9),
	REQ_CORRECTION_TYPE NUMBER(38,0),
	ERROR_FLAG BOOLEAN,
	NOTES BINARY(8388608),
	ASSOCIATION_NORMAL NUMBER(38,0),
	ASSOCIATION_CE NUMBER(38,0),
	LOCATION_MARK_ID NUMBER(38,0),
	PROD_OBJ_ID NUMBER(38,0),
	LOC_OBJ_ID NUMBER(38,0),
	POSITION BINARY(8388608),
	ACTION VARCHAR(100),
	INSERT_DATE TIMESTAMP_NTZ(9),
	INSERT_USER VARCHAR(254),
	CHANGE_DATE TIMESTAMP_NTZ(9),
	CHANGE_USER VARCHAR(254),
	ROWID VARCHAR(16),
	REPORT_NOTES BINARY(8388608),
	EMPLOYEE_NO BINARY(8388608),
	FIRSTNAME BINARY(8388608),
	LASTNAME BINARY(8388608),
	MULTIPLICATION_FACTOR NUMBER(38,0),
	TIME_CONSUMPTION NUMBER(38,0),
	ODS_SRC_SYSTEM_ID NUMBER(38,0),
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_XPROCESSED_BARCODES PRIMARY KEY (LOGG_ID, TRANS_ID, SUB_ID)
);

USE SCHEMA ODS_GRS_NO.DBO;

CREATE OR REPLACE VIEW CUSTOMER_KEY AS (SELECT SRC.CUSTOMER_ID, KEY_1.CLIENT_ID AS DW_CLIENT_ID FROM ODS_GRS_NO.DBO.CUSTOMER SRC  LEFT OUTER JOIN DW.KEY.CLIENT KEY_1 ON KEY_1.KEYMAP_ID = 1 AND KEY_1.COLUMN_VALUE_LIST = ARRAY_CONSTRUCT(TO_VARCHAR(SRC.CUSTOMER_ID)) );

CREATE OR REPLACE MASKING POLICY MP_DECRYPT_BINARY AS (VAL BINARY(8388608)) 
RETURNS BINARY(8388608) ->
CASE
  WHEN IS_ROLE_IN_SESSION('DECRYPT_ODS_GRS_NO') = TRUE
    THEN DECRYPT(VAL,(SELECT PASSPHRASE FROM DW.CONTROL.KEYSTORE WHERE TABLE_CATALOG=CURRENT_DATABASE()),(SELECT KEY_VALUE FROM DW.CONTROL.KEYSTORE WHERE TABLE_CATALOG=CURRENT_DATABASE()),(SELECT ADVANCED_ENCRYPTION_STD FROM DW.CONTROL.KEYSTORE WHERE TABLE_CATALOG=CURRENT_DATABASE()))
    WHEN CURRENT_ACCOUNT() IN ('SECURITASTEST')
    THEN DECRYPT(VAL,(SELECT PASSPHRASE FROM DW.CONTROL.KEYSTORE WHERE TABLE_CATALOG=CURRENT_DATABASE()),(SELECT KEY_VALUE FROM DW.CONTROL.KEYSTORE WHERE TABLE_CATALOG=CURRENT_DATABASE()),(SELECT ADVANCED_ENCRYPTION_STD FROM DW.CONTROL.KEYSTORE WHERE TABLE_CATALOG=CURRENT_DATABASE()))ELSE NULL
END
;	

CREATE OR REPLACE DATABASE STG_REFERENCE;

CREATE OR REPLACE SCHEMA STG_REFERENCE.BASE;

USE SCHEMA STG_REFERENCE.BASE;

CREATE OR REPLACE TABLE AZURE_IP (
	APPLICATION VARIANT NOT NULL
);
CREATE OR REPLACE TABLE NETWORK_POLICY (
	IP_RANGE VARCHAR(2000),
	CATEGORY VARCHAR(2000),
	NOTES VARCHAR(2000),
	DEV_ACTIVEFLAG BOOLEAN,
	TEST_ACTIVEFLAG BOOLEAN,
	PROD_ACTIVEFLAG BOOLEAN
);

CREATE OR REPLACE DATABASE ODS_REFERENCE;

CREATE OR REPLACE SCHEMA ODS_REFERENCE.BASE;

CREATE OR REPLACE TABLE ODS_REFERENCE.BASE.NETWORK_POLICY (
	IP_RANGE VARCHAR(19) NOT NULL,
	CATEGORY VARCHAR(200),
	NOTES VARCHAR(1000),
	DEV_ACTIVEFLAG BOOLEAN,
	TEST_ACTIVEFLAG BOOLEAN,
	PROD_ACTIVEFLAG BOOLEAN,
	ODS_SRC_SYSTEM_ID NUMBER(38,0) NOT NULL,
	ODS_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	ODS_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	ODS_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_NETWORK_POLICY PRIMARY KEY (IP_RANGE)
);

CREATE OR REPLACE DATABASE SIS;

CREATE OR REPLACE DATABASE DATAMART;

CREATE OR REPLACE SCHEMA DATAMART.MYSECURITAS;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_ALARM AS
	SELECT ALARM_ID,
	ALARM_NO,
	ALARM_GROUP_ID,
	ALARM_TYPE_ID,
	ALARM_KEY_STORAGE_INCL,
	CUST_OBJ_ID,
	UNIT_PROD_OBJ_ID,
	UNIT_LOC_OBJ_ID,
	CENTRAL_UNIT_TYPE,
	ALARM_ADM_CENTRAL_ID,
	ALARM_DISTRIB_CENTRAL_ID,
	INSERT_DATE,
	INSERT_USER,
	CHANGE_DATE,
	CHANGE_USER,
	ROWID,
	ALARM_PORTABLE_ID,
	TURN_OUT_COUNT,
	DATEFROM,
	DATETO,
	ALARM_PORTABLE_ITEM_ID,
	APPERANCE_TIME,
	APPERANCE_TIME_EXCEPTION,
	APPERANCE_TIME_EXCEPTION_START,
	APPERANCE_TIME_EXCEPTION_STOP,
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.ALARM;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_ALARM_CODES AS 
	SELECT ALARM_CODE_ID, ALARM_CODE_NO, SHORT_DESCRIPTION, DESCRIPTION, INSERT_USER, INSERT_DATE, CHANGE_DATE, CHANGE_USER, ROWID, EXCLUDE_FROM_REPORT, SHOWFORASSIGNMENT, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.ALARM_CODES;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_ALARM_GROUP AS 
	SELECT ALARM_GROUP_ID, ALARM_GROUP_NO, DESCRIPTION, INSERT_DATE, CHANGE_DATE, SORT_ORDER, INSERT_USER, CHANGE_USER, ROWID, PORTABLE_ALARM, TRANSFERTOGCS,  
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.ALARM_GROUP;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_ASSIGNMENT_TYPE AS 
	SELECT ASSIGNMENT_TYPE_ID, ASSIGNMENT_TYPE_NO, DESCRIPTION, INSERT_DATE, CHANGE_DATE, ALLOW_TO_SPLIT, ALLOW_OUTSIDE_GD, MINUTES_REDUCE_ST, 
	MINUTES_REDUCE_END, ALLOW_TO_DISPLACE, MINUTES_ADVANCE, MINUTES_AFTERWARDS, INSERT_USER, CHANGE_USER, ROWID, 
	ALLOW_MULTIPLE_ASSIGNM_PER_DAYT, GROUPED_COMMITMENT, GROUPED_COMMITMENT_MEMBER, RAZZIA, SHOW_PO, Y_TYPE, ICON_ID, 
	TIME_BANK_NOT_USED, EXCLUDE_FROM_TIME_BANK, INTERNAL, UICOLOR, ODS_SRC_SYSTEM_ID, 
	ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.ASSIGNMENT_TYPE;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_COMMITMENT AS
	SELECT COMMITMENT_ID, DESCRIPTION, INSTRUCTION, DATETO, INSERT_DATE, CHANGE_DATE, ASSIGNMENT_TYPE_NO, ASSIGNMENT_TYPE_ID, CONTRACT_ID, CONTRACT_PART_ID, ROAD_TIME_FROM_GD, DATEFROM, VERSION_FROM, VERSION_TO, DISTRIBUTION_TYPE, RANDOM_COUNT, RANDOM_PERIOD, RANDOM_PERIOD_TYPE, RANDOM_MIN_DIST, PERIOD_LENGTH, PERIOD_TOTALLENGTH, PERIOD_START, ABS_COUNT, INSERT_USER, CHANGE_USER, ROWID, PRIORITY_TYPE, INCOME_TYPE, EXECUTE_TYPE, MULTIPLE_EXECUTION, SEASON_TYPE, PROCESS_TYPE, INCOME, ON_REPORT_REPLACE_CO_WITH_PO, RED, ENABLE_MONITORING, ENABLE_PRE_START_MONITORING, ENABLE_POST_START_MONITORING, PRE_START, POST_START, ENABLE_PRE_STOP_MONITORING, ENABLE_POST_STOP_MONITORING, PRE_STOP, POST_STOP, ENABLE_PERIOD_MONITORING, MONITORING_PERIOD, ENABLE_NOTIFY, PRE_TRANSPORT_NOTIFY_TIME, NOTIFY_PERIOD, ENABLE_NOTIFY_TRANSPORT, HIDDEN, ALLOWFINGERSCANNING, EXTRAORDER_ID,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.COMMITMENT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_COMMIT_LOC_OBJECT AS
	SELECT COMMITMENT_ID, PROD_OBJ_ID, LOC_OBJ_ID, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.COMMIT_LOC_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_CONTRACT AS 
	SELECT CONTRACT_ID, CONTRACT_NO, CUSTOMER_ID,  
	TO_VARCHAR(CONTACT,'UTF-8') AS CONTACT, 
	INVOICE_LATEST, INVOICED_TO, VALIDTO, MONTHLY_INC_ALL, INSERT_DATE, CHANGE_DATE, VALIDFROM, RENEWED, TERMINATE, CANCELLED, CONTRACT_TYPE_ID, TERM_OF_NOTICE, CANCEL_TYPE_ID, CANCEL_GROUND_ID, INVOICE_TYPE_ID, PAYMENT_MONTH, JOINT_INVOICE, JOINT_INVOICE_SORT, INVOICE_FEE_ID, INVOICE_ACCEPT, TERMS_OF_PAYMNT_ID, MANUAL_ENVELOPE, MONTHLY_INC_CONT, CUSTOMER_REF, INVOICE_TEXT_CODE, SALESMAN_ID, ENGINEER_ID, SIGNED_CONTRACT, PRICE_CHANGE_PERC, PRICE_CHANGE_ID, TOTAL_INV, TOTAL_INV_PREV_Y, TOTAL_INV_THIS_Y, LATEST_INVOICE_ID, LATEST_EXTRA_ID, NEW_CONTRACT, UPDATE_CODE, CANCELLED_BY, PRICE_CHANGE_EARL, REPLACE_OTHER_CONT, REGISTRATION_DATE, REGISTERED_BY, LATEST_CHANGE_DATE, LATEST_CHANGED_BY, ROWIDMASTER, INSERT_USER, CHANGE_USER, ROWID, CONTRACT_CONDITION_ID, PROFITCENTER_ID, MASTER_DATE, CENTRAL_VALIDTO, SYSTEM_CONTRACT_TYPE_ID, CENTRAL_USER, CENTRAL_COMPANY, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.CONTRACT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_CONTRACT_PART AS 
	SELECT CONTRACT_ID, CONTRACT_PART_ID, CONTRACT_PART_NO, CUST_OBJ_ID, CONTRACT_PART_CENTRAL_NO, INSERT_DATE, CHANGE_DATE, 
	PRODUCT_ID, INVOICE_ADDR_CODE, INVOICE_TEXT_CODE, TRANSMITTER_NO, PLANNED_PROD_START, TERMINATION_CODE, LATEST_CONTR_CHAN,
	CONTR_REG_DATE, VALIDFROM, VALIDTO, PORTF_PROFITC_ID, PORTF_MONTH_INCOME, REGISTRATION_DATE, REGISTERED_BY, LATEST_CHANGE_DATE, 
	LATEST_CHANGED_BY, ROWIDMASTER, INSERT_USER, CHANGE_USER, ROWID, MASTER_DATE, CENTRAL_USER, CENTRAL_COMPANY, 
	COMMITMENT_INCOME_TYPE, DESCRIPTION, MULTIPLE_ASSIGNMENTS, COMMITMENT_INCOME_MONEY, TIME_BANK,  
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CONTRACT_PART;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_CONTRACT_TYPE AS 
	SELECT CONTRACT_TYPE_ID, DESCRIPTION, INSERT_DATE, CHANGE_DATE, CONTRACT_TYPE_NO, ROWIDMASTER, INSERT_USER, CHANGE_USER, ROWID, ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CONTRACT_TYPE;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_CONTR_PART_VER AS 
	SELECT CONTRACT_ID, CONTRACT_PART_ID, VERSION_FROM, PROFITCENTER_ID, INSERT_DATE, CHANGE_DATE, VERSION_TO, MONTHLY_INCOME, CONTR_REG_DATE, INVOICE_STATUS, ALTERATION_TYPE, PRICE_CHANGE_CONST, REGISTRATION_DATE, REGISTERED_BY, LATEST_CHANGE_DATE, LATEST_CHANGED_BY, ROWID, DAYTYPE_MINUTES, DATE_MINUTES, DAYTYPE_CALCULATION_READY, DATE_CALCULATION_READY, MASTER_DATE, CHANGE_TYPE_1, CHANGE_TYPE_2, 
	TO_VARCHAR(INSERT_USER,'UTF-8') AS INSERT_USER,
	TO_VARCHAR(CHANGE_USER,'UTF-8') AS CHANGE_USER, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CONTR_PART_VER;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_CUSTOMER AS 
	SELECT CUSTOMER_ID, CUSTOMER_TYPE_ID, VALIDTO, INSERT_DATE, CHANGE_DATE, ORGANIZATION_NO, ROWIDMASTER, INSERT_USER, CHANGE_USER, ROWID, MASTER_DATE, SYSTEM_CUSTOMER_TYPE_ID, SYSTEM_PROFITCENTER_ID, CENTRAL_COMPANY, CONFIRM_QUESTION_LIMIT, GRSRWENABLE, REQUIRESKAMPERMISSION, 
	TO_VARCHAR(CUSTOMER_NO,'UTF-8') AS CUSTOMER_NO,
	TO_VARCHAR(NAME_SEARCH,'UTF-8') AS NAME_SEARCH,
	TO_VARCHAR(NAME_1,'UTF-8') AS NAME_1,
	TO_VARCHAR(NAME_2,'UTF-8') AS NAME_2,
	TO_VARCHAR(ADDRESS,'UTF-8') AS ADDRESS, 
	TO_VARCHAR(POSTCODE,'UTF-8') AS POSTCODE, 
	TO_VARCHAR(POSTADDRESS,'UTF-8') AS POSTADDRESS,
	TO_VARCHAR(POSTDELIVERY_ADDRESS,'UTF-8') AS POSTDELIVERY_ADDRESS, 
	TO_VARCHAR(POSTDELIVERY_ADDRESS_EXTRA,'UTF-8') AS POSTDELIVERY_ADDRESS_EXTRA,
	TO_VARCHAR(TELEPHONE_1,'UTF-8') AS TELEPHONE_1, 
	TO_VARCHAR(TELEPHONE_2,'UTF-8') AS TELEPHONE_2, 
	TO_VARCHAR(TELEFAX,'UTF-8') AS TELEFAX, 
	TO_VARCHAR(MARKET_CODE,'UTF-8') AS MARKET_CODE, 
	TO_VARCHAR(CENTRAL_USER,'UTF-8') AS CENTRAL_USER, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CUSTOMER;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_CUSTOMER_OBJECT AS 
	SELECT  CUST_OBJ_ID, CUST_OBJ_NO_ALT, TERMINATE_DATE, INSERT_DATE, CHANGE_DATE, MARKET_ID, INSERT_USER, CHANGE_USER, ROWID,
	MASTER_DATE, CITY_ID, CITY_PART_ID, BLOCK_ID, INVOICECUSTOMER_NO, CUSTOMER_OBJECT_TYPE, ADDRESSCODE, PROFITCENTER_NO, CENTRAL_USER, CENTRAL_COMPANY, MARKET_ITEM_ID, PROFITCENTER_ID, PROTECTED, ENABLE_PROD_OBJ_POSITION, VISION_ID, ALLOWCAMERA, CALENDAR_TEMPLATE_ID, USECUSTOMERADDRESS, XDE_SUBCONTRACTOR_CCT_NO, XDE_EXTRA_INFORMATION, XDE_PRODUCTS, XDE_IS_EXTERNAL, ISBLACKLISTED, BLACKLISTCOMMENT, GLOBAL_MASTER_NO, 
	TO_VARCHAR(CUST_OBJ_NO,'UTF-8') AS CUST_OBJ_NO,
	TO_VARCHAR(GEO_LAT,'UTF-8') AS LATITUDE,
	TO_VARCHAR(GEO_LONG,'UTF-8') AS LONGITUDE, 
	TO_VARCHAR(NAME,'UTF-8') AS NAME, 
	TO_VARCHAR(POSTDELIVERY_ADDRESS,'UTF-8') AS POSTDELIVERY_ADDRESS, 
	TO_VARCHAR(POSTCODE,'UTF-8') AS POSTCODE,  
	TO_VARCHAR(ADDRESS,'UTF-8') AS ADDRESS,  
	TO_VARCHAR(ADDRESS_2,'UTF-8') AS ADDRESS_2,  
	TO_VARCHAR(POSTADDRESS,'UTF-8') AS POSTADDRESS, 
	TO_VARCHAR(ASSIGNMENTGEOLOCATION,'UTF-8') AS ASSIGNMENTGEOLOCATION, 
	TO_VARCHAR(BLOCK,'UTF-8') AS BLOCK, 
	TO_VARCHAR(DISTRICT,'UTF-8') AS DISTRICT, 
	TO_VARCHAR(REF_PERSON,'UTF-8') AS REF_PERSON, 
	TO_VARCHAR(TELEPHONE,'UTF-8') AS TELEPHONE,  
	TO_VARCHAR(TELEFAX,'UTF-8') AS TELEFAX,  
	TO_VARCHAR(TELEMODEM,'UTF-8') AS TELEMODEM,  
	TO_VARCHAR(POSTDELIVERY_ADDRESS_EXTRA,'UTF-8') AS POSTDELIVERY_ADDRESS_EXTRA, 
	TO_VARCHAR(XPOS,'UTF-8') AS XPOS, 
	TO_VARCHAR(YPOS,'UTF-8') AS YPOS,
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES, 
	TO_VARCHAR(ASSIGNMENTPOSTCODE,'UTF-8') AS ASSIGNMENTPOSTCODE, 
	TO_VARCHAR(XDE_CUSTOMER_NAME,'UTF-8') AS XDE_CUSTOMER_NAME, ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CUSTOMER_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_CUST_CUST_OBJECT AS 
	SELECT DATEFROM, DATETO, CUST_OBJ_ID, CUSTOMER_ID, INSERT_DATE, CHANGE_DATE, INSERT_USER, CHANGE_USER, ROWID, MASTER_DATE,
	 ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CUST_CUST_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_GCS_EXPORT_ERP_CALL_OUTS AS
	SELECT CASE_NUMBER,
	ALARM_NUMBER,
	ALARM_CENTER_NAME,
	ALARM_CENTER_CONTRACT_NUMBER,
	ALARM_TIME,
	ALARM_REACH_TIME,
	ALARM_TYPE,
	ALARM_TYPE_TEXT,
	INSERT_DATE,
	CHANGE_DATE,
	GUARD_SECTION,
	MEASURES_CODE,
	MEASURES_TEXT,
	ALARM_ISSUE_CODE,
	ALARM_ISSUE_DESCRIPTION,
	TRANSFERRING_TIME,
	HANDLE_MANUALLY,
	ALARM_CENTER_NUMBER,
	ALARM_CENTER_REFERENCE,
	ALARM_CENTER_ADDRESS,
	ALARM_CENTER_ZIP_CODE,
	ALARM_CENTER_LOCATION,
	ALARM_CENTER_TELEPHONE_NUMBER,
	CUSTOMER_OBJECT,
	CUSTOMER_ORGANIZATION_ID,
	EXPORTED_TIME_STAMP,
	INSERT_USER,
	CHANGE_USER,
	ROWID,
	TO_VARCHAR(CUSTOMER_NUMBER,'UTF-8') AS CUSTOMER_NUMBER,
	TO_VARCHAR(BUILDING_NUMBER,'UTF-8') AS BUILDING_NUMBER,
    TO_VARCHAR(BUILDING_NAME,'UTF-8') AS BUILDING_NAME,
    TO_VARCHAR(BUILDING_ADDRESS,'UTF-8') AS BUILDING_ADDRESS,
    TO_VARCHAR(BUILDING_LOCATION,'UTF-8') AS BUILDING_LOCATION,
    TO_VARCHAR(BUILDING_SECTION,'UTF-8') AS BUILDING_SECTION,
    TO_VARCHAR(BUILDING_ZIP_CODE,'UTF-8') AS BUILDING_ZIP_CODE,
    TO_VARCHAR(FREE_TEXT_FROM_GUARD,'UTF-8') AS FREE_TEXT_FROM_GUARD,
    TO_VARCHAR(FREE_TEXT_FROM_OPERATOR,'UTF-8') AS FREE_TEXT_FROM_OPERATOR,
    TO_VARCHAR(CUSTOMER_VAT_NUMBER,'UTF-8') AS CUSTOMER_VAT_NUMBER,
    TO_VARCHAR(CUSTOMER_SOCIAL_SECURITY_NUMBER,'UTF-8') AS CUSTOMER_SOCIAL_SECURITY_NUMBER,
    TO_VARCHAR(CUSTOMER_NAME_1,'UTF-8') AS CUSTOMER_NAME_1,
    TO_VARCHAR(CUSTOMER_NAME_2,'UTF-8') AS CUSTOMER_NAME_2,
    TO_VARCHAR(CUSTOMER_ADDRESS,'UTF-8') AS CUSTOMER_ADDRESS,
    TO_VARCHAR(CUSTOMER_ZIP_CODE,'UTF-8') AS CUSTOMER_ZIP_CODE,
    TO_VARCHAR(CUSTOMER_LOCATION,'UTF-8') AS CUSTOMER_LOCATION,
    TO_VARCHAR(INVOICE_CUSTOMER_NAME_1,'UTF-8') AS INVOICE_CUSTOMER_NAME_1,
    TO_VARCHAR(INVOICE_CUSTOMER_NAME_2,'UTF-8') AS INVOICE_CUSTOMER_NAME_2,
    TO_VARCHAR(INVOICE_CUSTOMER_ADDRESS,'UTF-8') AS INVOICE_CUSTOMER_ADDRESS,
	TO_VARCHAR(INVOICE_CUSTOMER_ZIPCODE,'UTF-8') AS INVOICE_CUSTOMER_ZIPCODE,
    TO_VARCHAR(INVOICE_CUSTOMER_LOCATION,'UTF-8') AS INVOICE_CUSTOMER_LOCATION,
	TO_VARCHAR(CALL_OUT_BARCODE,'UTF-8') AS CALL_OUT_BARCODE,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.GCS_EXPORT_ERP_CALL_OUTS;


CREATE OR REPLACE SECURE  VIEW GRSNO_GCS_EXPORT_ERP_CALL_OUT_GUARDS AS 
	SELECT BASE_LOCATION_NUMBER, COST_CENTRE, ARRIVAL_TIME, DEPARTURE_TIME, ELAPSED_TIME, GUARD_TYPE, CASE_NUMBER, VISIT_DETAIL, INSERT_USER, INSERT_DATE, CHANGE_USER, CHANGE_DATE, ROWID, ON_WAY_TIME, RETURN_TIME_BACK_TO_OFFICE,  
	TO_VARCHAR(DECRYPT(EMPLOYMENT_NUMBER,KS.PASSPHRASE,KS.KEY_VALUE,KS.ADVANCED_ENCRYPTION_STD),'UTF-8') AS EMPLOYMENT_NUMBER,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.GCS_EXPORT_ERP_CALL_OUT_GUARDS, DW.CONTROL.KEYSTORE KS
WHERE  ARRAYS_OVERLAP(ARRAY_CONSTRUCT(ODS_SRC_SYSTEM_ID),SOURCESYSTEMID) =TRUE;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_GD AS 
	SELECT GD_ID, GD_NO, INSERT_DATE, CHANGE_DATE, PROFITCENTER_ID, GD_TYPE_ID, GD_KNOWREQ, DATEFROM, DATETO, ROWID, PE_PROFITC, PE_NO, REPORT_MARK_FOLDER_ID, EXPORT_TO_GMP, VISIBLE_IN_153, EXCLUDE_EMPTY_GD_SHIFT, CALENDAR_TEMPLATE_ID, 
	TO_VARCHAR(NAME,'UTF-8') AS NAME, 
    TO_VARCHAR(POSTCODE,'UTF-8') AS POSTCODE,  
	TO_VARCHAR(ADDRESS,'UTF-8') AS ADDRESS,  
    TO_VARCHAR(POSTADDRESS,'UTF-8') AS POSTADDRESS, 
	TO_VARCHAR(REF_PERSON,'UTF-8') AS REF_PERSON, 
	TO_VARCHAR(TELEPHONE,'UTF-8') AS TELEPHONE,  
	TO_VARCHAR(TELEFAX,'UTF-8') AS TELEFAX,  
	TO_VARCHAR(TELEMODEM,'UTF-8') AS TELEMODEM,  
	TO_VARCHAR(POSTDELIVERY_ADDRESS_EXTRA,'UTF-8') AS POSTDELIVERY_ADDRESS_EXTRA,
	TO_VARCHAR(GEOLOCATION,'UTF-8') AS GEOLOCATION,
	TO_VARCHAR(INSERT_USER,'UTF-8') AS INSERT_USER,
	TO_VARCHAR(CHANGE_USER,'UTF-8') AS CHANGE_USER,
	TO_VARCHAR(GEO_LAT,'UTF-8') AS LATITUDE,
	TO_VARCHAR(GEO_LONG,'UTF-8') AS LONGITUDE, 
	TO_VARCHAR(STARTLOCATION,'UTF-8') AS STARTLOCATION,
	 ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.GD;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_GRS_ADDONINFO AS 
	SELECT CASE_NUMBER, CUST_OBJ_NO, GRSR_EVENT_ID, INSERT_DATE, CHANGE_DATE, ALARM_NO, ALARM_GROUP_NO, ALARM_GROUP_NAME, ALARM_PORTABLE_NO, ALARAM_PORTABLE_NAME, CUST_OBJ_NO_ALT, ALARM_ID, ALARM_TIME, INSERT_USER, CHANGE_USER, ROWID, ID, SFU_EVENT_ID, TRANSFERRING_TIME,
	TO_VARCHAR(CUSTOMER_NO,'UTF-8') AS CUSTOMER_NO,
	 ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.GRS_ADDONINFO;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_LOCATION_MARK AS 
	SELECT LOCATION_MARK_ID, BARCODE, POSITION_GUARD_INFO, INSERT_DATE, CHANGE_DATE, PROD_OBJ_ID, LOC_OBJ_ID, LOC_MARK_TYPE_ID, ACTION, ORDER_NO, ORDER_NO_EXTRA, INSERT_USER, CHANGE_USER, ROWID, VALIDTO, VALIDFROM, LOC_MARK_SERVICE_NO, LOC_MARK_SERVICE_LOCATION, LOC_MARK_SERVICE_INTERVAL_ID, LOC_MARK_SERVICE_EXT_INTERVAL_ID, LOC_MARK_SERVICE_TYPE_ID, LOC_MARK_SERVICE_TYPE_ITEM_ID, LOC_MARK_SERVICE_TYPE_ITEM_2_ID, LOC_MARK_SERVICE_YEAR, 
	TO_VARCHAR(POSITION,'UTF-8') AS POSITION, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.LOCATION_MARK;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_LOCATION_OBJECT AS 
	SELECT PROD_OBJ_ID, LOC_OBJ_ID, DESCRIPTION, INSERT_DATE, CHANGE_DATE, INSERT_USER, CHANGE_USER, ROWID, VALIDFROM, VALIDTO, LOCATION_OBJ_ID,  ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.LOCATION_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_LOC_MARK_REPORT AS 
	SELECT LOCATION_MARK_ID, REPORT_MARK_ID, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID, SORT_ORDER, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.LOC_MARK_REPORT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_LOC_MARK_TYPE AS
	SELECT LOC_MARK_TYPE_ID , FORCING, COLOUR, NAME, DESCRIPTION, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID, RGB_COLOUR, ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.LOC_MARK_TYPE;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_PROCESSED_TRANSACTIONS AS 
	SELECT LOGG_ID, TRANS_ID, SUB_ID, GD_ID, PROD_OBJ_ID, LOC_OBJ_ID, MULTIPLICATION_FACTOR, 
	TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	COMMITMENT_ID,
	TO_VARCHAR(POSITION,'UTF-8') AS POSITION,INSERT_DATE,CHANGE_DATE, BARCODE_DATE, BARCODE_TIME,BARCODE_NO,BARCODE_GROUP, 
	BARCODE_TYPE, LOC_MARK_TYPE, REQUIRED, EMPLOYEE_ID, VALID_ASSOCIATION,
	DAY_T_ID, VERSION_FROM, ASSIGNM_TIMEFROM,
	CE_VALID_ASSOCIATION,CE_COMMITMENT_ID,CE_EXCEPTION,CE_DAY_T_ID,CE_DATEFROM,CE_TIMEFROM,
	REQ_CORRECTION_TYPE,ERROR_FLAG, 
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES,
	ASSOCIATION_NORMAL,ASSOCIATION_CE,LOCATION_MARK_ID,ACTION,INSERT_USER,CHANGE_USER,ROWID,
	TO_VARCHAR(EMPLOYEE_NO,'UTF-8') AS EMPLOYEE_NO,
	TO_VARCHAR(FIRSTNAME,'UTF-8') AS FIRSTNAME,
	TO_VARCHAR(LASTNAME,'UTF-8') AS LASTNAME,
	TIME_CONSUMPTION,ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.PROCESSED_TRANSACTIONS;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_PRODUCTION_OBJECT AS 
	SELECT PROD_OBJ_ID, DESCRIPTION, INSERT_DATE, CHANGE_DATE, INSERT_USER, CHANGE_USER, ROWID, 
	TO_VARCHAR(PROD_OBJ_NO,'UTF-8') AS PROD_OBJ_NO, 
	TO_VARCHAR(POSTDELIVERY_ADDRESS,'UTF-8') AS POSTDELIVERY_ADDRESS, 
	TO_VARCHAR(POSTCODE,'UTF-8') AS POSTCODE,  
	TO_VARCHAR(ADDRESS,'UTF-8') AS ADDRESS,  
	TO_VARCHAR(ADDRESS_2,'UTF-8') AS ADDRESS_2,  
	TO_VARCHAR(POSTADDRESS,'UTF-8') AS POSTADDRESS, 
	TO_VARCHAR(REF_PERSON,'UTF-8') AS REF_PERSON, 
	TO_VARCHAR(TELEPHONE,'UTF-8') AS TELEPHONE,  
	TO_VARCHAR(TELEFAX,'UTF-8') AS TELEFAX,  
	TO_VARCHAR(TELEMODEM,'UTF-8') AS TELEMODEM,  
	TO_VARCHAR(POSTDELIVERY_ADDRESS_EXTRA,'UTF-8') AS POSTDELIVERY_ADDRESS_EXTRA,
	TO_VARCHAR(XPOS,'UTF-8') AS XPOS,
	TO_VARCHAR(YPOS,'UTF-8') AS YPOS,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.PRODUCTION_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_PROD_CUST_OBJECT AS
	SELECT PROD_OBJ_ID, CUST_OBJ_ID, DATEFROM, DATETO, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID,
	 ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.PROD_CUST_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_PROFITCENTER AS 
	SELECT PROFITCENTER_ID, PROFITCENTER_NO, INSERT_DATE, CHANGE_DATE, DESCRIPTION, DATEFROM, DATETO, INSERT_USER, CHANGE_USER, ROWID, POSITION_TYPE_REF, VISIBLE, CO_OWNERSHIP_ALLOWED, KPISTARTDATE,  
	TO_VARCHAR(RESPONSIBLE,'UTF-8') AS RESPONSIBLE, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.PROFITCENTER;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_REPORT_MARK AS 
	SELECT REPORT_MARK_ID, REPORT_LABEL, INSERT_DATE, CHANGE_DATE, REP_MARK_TYPE_ID, BARCODE, ACTIVITY_CODE, TIMELIMIT_CODE, INSERT_USER, CHANGE_USER, ROWID, REPORT_MARK_VERSION, RISK_LEVEL, SYSTEM, REPORT_FOLDER_LABEL, STATISTICS_MEMBER, CODE, REPORT_LABEL_2, REPORT_MARK_SET_ONLY, SBA, REPORT_LABEL_GCS_SYNC, ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.REPORT_MARK;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_REPORT_MARK_CULTURE AS 
	SELECT REPORT_MARK_ID, CULTURE_ID, REPORT_LABEL, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY,  ODS_MODIFIEDBY,  ODS_MODIFIEDBY_TIMESTAMP,  ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.REPORT_MARK_CULTURE;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_SFU_COMMITMENTPERFORMED AS
	SELECT COMMITMENT_ID, DATEPERFORMED, GD_ID, GD_STARTDATE, EMPLOYEE_ID, CUST_OBJ_ID, STARTDATETIME, STOPDATATIME, LOGG_ID, NOREPORTS, NOATTACHMENTS, INSERT_USER, INSERT_DATE, CHANGE_USER, CHANGE_DATE, ROWID, MANUALREGISTRATIONDATETIME, START_TRANS_ID, STOP_TRANS_ID, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.SFU_COMMITMENTPERFORMED;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_SFU_COMMITMENTPERFORMEDEXTRAVISITS AS
	SELECT SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID, COMMITMENT_ID, DATEPERFORMED, GD_ID, GD_STARTDATE, EMPLOYEE_ID, CUST_OBJ_ID, STARTDATETIME, STOPDATATIME, LOGG_ID, NOREPORTS, NOATTACHMENTS, INSERT_USER, INSERT_DATE, CHANGE_USER, CHANGE_DATE, ROWID, MANUALREGISTRATIONDATETIME, START_TRANS_ID, STOP_TRANS_ID, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.SFU_COMMITMENTPERFORMEDEXTRAVISITS;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_TEMP_TRANSACTIONS AS 
	SELECT LOGG_ID, TRANS_ID, BARCODE_TIME, BARCODE_NO,BARCODE_GROUP, INSERT_DATE,INSERT_USER, CHANGE_DATE,CHANGE_USER,ROWID,
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES, 
	ADJUSTED_GD_ID,ADJUSTED_EMPLOYEE_ID,MUASSIGNMENT_ID,
	TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	MULTIPLICATION_FACTOR,
	TO_VARCHAR(LATITUDE,'UTF-8') AS LATITUDE, 
	TO_VARCHAR(LONGITUDE,'UTF-8') AS LONGITUDE,
	ASSIGNMENTPLANNEDID, GPSTIMESTAMP,  IS_FINGERSCANNED, ODS_SRC_SYSTEM_ID, 
	ODS_CREATEDBY,  ODS_MODIFIEDBY,  ODS_MODIFIEDBY_TIMESTAMP,  ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.TEMP_TRANSACTIONS;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_TEMP_TRANSACTIONS_ATTACHMENT AS 
	SELECT TEMP_TRANSACTIONS_ATTACHMENT_ID, STATISTICSATTACHMENT_ID, LOGG_ID, TRANS_ID, ATTACHMENT,
	CHECKSUM, MIMETYPE, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID,
	GCS_IMPORTTRANSACTIONSFORMRESPONSE_ID, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP,
	ATTACHMENT_BASESTR
	FROM ODS_GRS_NO.DBO.TEMP_TRANSACTIONS_ATTACHMENT;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_TEMP_TRANSACTIONS_ATTACHMENT_CULTURE AS 
	SELECT TEMP_TRANSACTIONS_ATTACHMENT_CULTURE_ID,TEMP_TRANSACTIONS_ATTACHMENT_ID,
	ATTACHMENT, MIMETYPE, CULTURE_ID, 
	INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP,
	ATTACHMENT_BASESTR
	FROM ODS_GRS_NO.DBO.TEMP_TRANSACTIONS_ATTACHMENT_CULTURE;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_USERS AS 
	SELECT USER_ID, 
	TO_VARCHAR(USER_NO,'UTF-8') AS USER_NO,
	TO_VARCHAR(USER_NAME,'UTF-8') AS USER_NAME,
	INSERT_DATE,
	TO_VARCHAR(INSERT_USER,'UTF-8') AS INSERT_USER,
	CHANGE_DATE,
	TO_VARCHAR(CHANGE_USER,'UTF-8') AS CHANGE_USER,
	ROWID, VALIDFROM, VALIDTO, ONLINEUSER, CULTURE_ID, SUPERUSER, 
	ODS_SRC_SYSTEM_ID,  ODS_CREATEDBY,  ODS_MODIFIEDBY,  ODS_MODIFIEDBY_TIMESTAMP,  ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.USERS;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_XPROCESSED_BARCODES AS 
	SELECT LOGG_ID, TRANS_ID,SUB_ID, GD_ID, PROD_OBJ_ID, LOC_OBJ_ID, MULTIPLICATION_FACTOR, 
	TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	COMMITMENT_ID,
	TO_VARCHAR(POSITION,'UTF-8') AS POSITION,INSERT_DATE,CHANGE_DATE, BARCODE_DATE, BARCODE_TIME,BARCODE_NO,BARCODE_GROUP, 
	BARCODE_TYPE, LOC_MARK_TYPE, REQUIRED, EMPLOYEE_ID, VALID_ASSOCIATION,
	DAY_T_ID, VERSION_FROM, ASSIGNM_TIMEFROM,
	CE_VALID_ASSOCIATION,CE_COMMITMENT_ID,CE_EXCEPTION,CE_DAY_T_ID,CE_DATEFROM,CE_TIMEFROM,
	REQ_CORRECTION_TYPE,ERROR_FLAG, 
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES,
	ASSOCIATION_NORMAL,ASSOCIATION_CE,LOCATION_MARK_ID,ACTION,INSERT_USER,CHANGE_USER,ROWID,
	TO_VARCHAR(EMPLOYEE_NO,'UTF-8') AS EMPLOYEE_NO,
	TO_VARCHAR(FIRSTNAME,'UTF-8') AS FIRSTNAME,
	TO_VARCHAR(LASTNAME,'UTF-8') AS LASTNAME,
	TIME_CONSUMPTION,ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM  ODS_GRS_NO.DBO.XPROCESSED_BARCODES;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_XPROCESSED_TRANSACTIONS AS 
	SELECT LOGG_ID, TRANS_ID,SUB_ID, GD_ID, PROD_OBJ_ID, LOC_OBJ_ID, MULTIPLICATION_FACTOR, 
    TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	COMMITMENT_ID,
	TO_VARCHAR(POSITION,'UTF-8') AS POSITION, 
    INSERT_DATE,CHANGE_DATE, BARCODE_DATE, BARCODE_TIME,BARCODE_NO,BARCODE_GROUP, 
	BARCODE_TYPE, LOC_MARK_TYPE, REQUIRED, EMPLOYEE_ID, VALID_ASSOCIATION,
	DAY_T_ID, VERSION_FROM, ASSIGNM_TIMEFROM,
	CE_VALID_ASSOCIATION,CE_COMMITMENT_ID,CE_EXCEPTION,CE_DAY_T_ID,CE_DATEFROM,CE_TIMEFROM,
	REQ_CORRECTION_TYPE,ERROR_FLAG, 
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES,
	ASSOCIATION_NORMAL,ASSOCIATION_CE,LOCATION_MARK_ID,ACTION,INSERT_USER,CHANGE_USER,ROWID,
	TO_VARCHAR(EMPLOYEE_NO,'UTF-8') AS EMPLOYEE_NO,
	TO_VARCHAR(FIRSTNAME,'UTF-8') AS FIRSTNAME,
	TO_VARCHAR(LASTNAME,'UTF-8') AS LASTNAME,
	TIME_CONSUMPTION,ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM  ODS_GRS_NO.DBO.PROCESSED_TRANSACTIONS;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_XREPORT_MARK AS 
SELECT
	 RM.REPORT_MARK_ID
	,RM.REP_MARK_TYPE_ID
	,RM.BARCODE
	,RM.REPORT_LABEL
	,RM.ACTIVITY_CODE
	,RM.TIMELIMIT_CODE
	,RM.INSERT_DATE
	,RM.INSERT_USER
	,RM.CHANGE_DATE
	,RM.CHANGE_USER
	,RM.ROWID
	,RM.REPORT_MARK_VERSION
	,RM.RISK_LEVEL
	,RM.SYSTEM
	,RM.REPORT_FOLDER_LABEL
	,RM.STATISTICS_MEMBER
	,RM.CODE
	,RM.REPORT_LABEL_2
	,RM.REPORT_MARK_SET_ONLY
	,RM.SBA
	,RM.ODS_SRC_SYSTEM_ID 
	,RM.ODS_CREATEDBY 
	,RM.ODS_MODIFIEDBY
	,RM.ODS_MODIFIEDBY_TIMESTAMP
	,RM.ODS_CREATEDBY_TIMESTAMP
FROM  ODS_GRS_NO.DBO.REPORT_MARK RM	;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_XTEMP_TRANSACTIONS AS 
	 SELECT LOGG_ID, TRANS_ID, BARCODE_TIME, BARCODE_NO,BARCODE_GROUP, INSERT_DATE,INSERT_USER, CHANGE_DATE,CHANGE_USER,ROWID,
    TO_VARCHAR(NOTES,'UTF-8') AS NOTES, 
	ADJUSTED_GD_ID,ADJUSTED_EMPLOYEE_ID,MUASSIGNMENT_ID,
	TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	MULTIPLICATION_FACTOR,
	TO_VARCHAR(LATITUDE,'UTF-8') AS LATITUDE, 
	TO_VARCHAR(LONGITUDE,'UTF-8') AS LONGITUDE,
	ASSIGNMENTPLANNEDID, GPSTIMESTAMP,  IS_FINGERSCANNED, ODS_SRC_SYSTEM_ID, 
	ODS_CREATEDBY,  ODS_MODIFIEDBY,  ODS_MODIFIEDBY_TIMESTAMP,  ODS_CREATEDBY_TIMESTAMP 
	FROM  ODS_GRS_NO.DBO.TEMP_TRANSACTIONS;


CREATE OR REPLACE SECURE VIEW DATAMART.MYSECURITAS.GRSNO_XTEMP_TRANSACTIONS_ATTACHMENT AS
SELECT TA.TEMP_TRANSACTIONS_ATTACHMENT_ID, TA.STATISTICSATTACHMENT_ID, TA.LOGG_ID, TA.TRANS_ID
      ,NVL(TAC.ATTACHMENT, TA.ATTACHMENT) AS ATTACHMENT, TA.CHECKSUM, NVL(TAC.MIMETYPE, TA.MIMETYPE) AS MIMETYPE
      ,TA.INSERT_DATE, TA.INSERT_USER, TA.CHANGE_DATE, TA.CHANGE_USER, TA.ROWID
      ,TA.GCS_IMPORTTRANSACTIONSFORMRESPONSE_ID, NVL(TAC.CULTURE_ID,0) AS CULTURE_ID,TA.ATTACHMENT_BASESTR
	  ,TA.ODS_SRC_SYSTEM_ID, TA.ODS_CREATEDBY, TA.ODS_MODIFIEDBY, TA.ODS_MODIFIEDBY_TIMESTAMP, TA.ODS_CREATEDBY_TIMESTAMP
    FROM ODS_GRS_NO.DBO.TEMP_TRANSACTIONS_ATTACHMENT TA
	LEFT JOIN ODS_GRS_NO.DBO.TEMP_TRANSACTIONS_ATTACHMENT_CULTURE TAC ON TAC.TEMP_TRANSACTIONS_ATTACHMENT_ID = TA.TEMP_TRANSACTIONS_ATTACHMENT_ID AND TAC.CULTURE_ID = 0;


CREATE OR REPLACE SCHEMA RISKPREDICTION;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_ALARM AS
	SELECT ALARM_ID,
	ALARM_NO,
	ALARM_GROUP_ID,
	ALARM_TYPE_ID,
	ALARM_KEY_STORAGE_INCL,
	CUST_OBJ_ID,
	UNIT_PROD_OBJ_ID,
	UNIT_LOC_OBJ_ID,
	CENTRAL_UNIT_TYPE,
	ALARM_ADM_CENTRAL_ID,
	ALARM_DISTRIB_CENTRAL_ID,
	INSERT_DATE,
	INSERT_USER,
	CHANGE_DATE,
	CHANGE_USER,
	ROWID,
	ALARM_PORTABLE_ID,
	TURN_OUT_COUNT,
	DATEFROM,
	DATETO,
	ALARM_PORTABLE_ITEM_ID,
	APPERANCE_TIME,
	APPERANCE_TIME_EXCEPTION,
	APPERANCE_TIME_EXCEPTION_START,
	APPERANCE_TIME_EXCEPTION_STOP,
    TO_VARCHAR(NOTES,'UTF-8') AS NOTES,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.ALARM;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_ALARM_CODES AS 
	SELECT ALARM_CODE_ID, ALARM_CODE_NO, SHORT_DESCRIPTION, DESCRIPTION, INSERT_USER, INSERT_DATE, CHANGE_DATE, CHANGE_USER, ROWID, EXCLUDE_FROM_REPORT, SHOWFORASSIGNMENT, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.ALARM_CODES;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_ALARM_GROUP AS 
	SELECT ALARM_GROUP_ID, ALARM_GROUP_NO, DESCRIPTION, INSERT_DATE, CHANGE_DATE, SORT_ORDER, INSERT_USER, CHANGE_USER, ROWID, PORTABLE_ALARM, TRANSFERTOGCS,  
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.ALARM_GROUP;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_ASSIGNMENT_TYPE AS 
	SELECT ASSIGNMENT_TYPE_ID, ASSIGNMENT_TYPE_NO, DESCRIPTION, INSERT_DATE, CHANGE_DATE, ALLOW_TO_SPLIT, ALLOW_OUTSIDE_GD, MINUTES_REDUCE_ST, 
	MINUTES_REDUCE_END, ALLOW_TO_DISPLACE, MINUTES_ADVANCE, MINUTES_AFTERWARDS, INSERT_USER, CHANGE_USER, ROWID, 
	ALLOW_MULTIPLE_ASSIGNM_PER_DAYT, GROUPED_COMMITMENT, GROUPED_COMMITMENT_MEMBER, RAZZIA, SHOW_PO, Y_TYPE, ICON_ID, 
	TIME_BANK_NOT_USED, EXCLUDE_FROM_TIME_BANK, INTERNAL, UICOLOR, ODS_SRC_SYSTEM_ID, 
	ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.ASSIGNMENT_TYPE;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_COMMITMENT AS
	SELECT COMMITMENT_ID, DESCRIPTION, INSTRUCTION, DATETO, INSERT_DATE, CHANGE_DATE, ASSIGNMENT_TYPE_NO, ASSIGNMENT_TYPE_ID, CONTRACT_ID, CONTRACT_PART_ID, ROAD_TIME_FROM_GD, DATEFROM, VERSION_FROM, VERSION_TO, DISTRIBUTION_TYPE, RANDOM_COUNT, RANDOM_PERIOD, RANDOM_PERIOD_TYPE, RANDOM_MIN_DIST, PERIOD_LENGTH, PERIOD_TOTALLENGTH, PERIOD_START, ABS_COUNT, INSERT_USER, CHANGE_USER, ROWID, PRIORITY_TYPE, INCOME_TYPE, EXECUTE_TYPE, MULTIPLE_EXECUTION, SEASON_TYPE, PROCESS_TYPE, INCOME, ON_REPORT_REPLACE_CO_WITH_PO, RED, ENABLE_MONITORING, ENABLE_PRE_START_MONITORING, ENABLE_POST_START_MONITORING, PRE_START, POST_START, ENABLE_PRE_STOP_MONITORING, ENABLE_POST_STOP_MONITORING, PRE_STOP, POST_STOP, ENABLE_PERIOD_MONITORING, MONITORING_PERIOD, ENABLE_NOTIFY, PRE_TRANSPORT_NOTIFY_TIME, NOTIFY_PERIOD, ENABLE_NOTIFY_TRANSPORT, HIDDEN, ALLOWFINGERSCANNING, EXTRAORDER_ID,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.COMMITMENT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_COMMIT_LOC_OBJECT AS
	SELECT COMMITMENT_ID, PROD_OBJ_ID, LOC_OBJ_ID, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.COMMIT_LOC_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_CONTRACT AS 
	SELECT CONTRACT_ID, CONTRACT_NO, CUSTOMER_ID,  
	TO_VARCHAR(CONTACT,'UTF-8') AS CONTACT, 
	INVOICE_LATEST, INVOICED_TO, VALIDTO, MONTHLY_INC_ALL, INSERT_DATE, CHANGE_DATE, VALIDFROM, RENEWED, TERMINATE, CANCELLED, CONTRACT_TYPE_ID, TERM_OF_NOTICE, CANCEL_TYPE_ID, CANCEL_GROUND_ID, INVOICE_TYPE_ID, PAYMENT_MONTH, JOINT_INVOICE, JOINT_INVOICE_SORT, INVOICE_FEE_ID, INVOICE_ACCEPT, TERMS_OF_PAYMNT_ID, MANUAL_ENVELOPE, MONTHLY_INC_CONT, CUSTOMER_REF, INVOICE_TEXT_CODE, SALESMAN_ID, ENGINEER_ID, SIGNED_CONTRACT, PRICE_CHANGE_PERC, PRICE_CHANGE_ID, TOTAL_INV, TOTAL_INV_PREV_Y, TOTAL_INV_THIS_Y, LATEST_INVOICE_ID, LATEST_EXTRA_ID, NEW_CONTRACT, UPDATE_CODE, CANCELLED_BY, PRICE_CHANGE_EARL, REPLACE_OTHER_CONT, REGISTRATION_DATE, REGISTERED_BY, LATEST_CHANGE_DATE, LATEST_CHANGED_BY, ROWIDMASTER, INSERT_USER, CHANGE_USER, ROWID, CONTRACT_CONDITION_ID, PROFITCENTER_ID, MASTER_DATE, CENTRAL_VALIDTO, SYSTEM_CONTRACT_TYPE_ID, CENTRAL_USER, CENTRAL_COMPANY, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.CONTRACT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_CONTRACT_PART AS 
	SELECT CONTRACT_ID, CONTRACT_PART_ID, CONTRACT_PART_NO, CUST_OBJ_ID, CONTRACT_PART_CENTRAL_NO, INSERT_DATE, CHANGE_DATE, 
	PRODUCT_ID, INVOICE_ADDR_CODE, INVOICE_TEXT_CODE, TRANSMITTER_NO, PLANNED_PROD_START, TERMINATION_CODE, LATEST_CONTR_CHAN,
	CONTR_REG_DATE, VALIDFROM, VALIDTO, PORTF_PROFITC_ID, PORTF_MONTH_INCOME, REGISTRATION_DATE, REGISTERED_BY, LATEST_CHANGE_DATE, 
	LATEST_CHANGED_BY, ROWIDMASTER, INSERT_USER, CHANGE_USER, ROWID, MASTER_DATE, CENTRAL_USER, CENTRAL_COMPANY, 
	COMMITMENT_INCOME_TYPE, DESCRIPTION, MULTIPLE_ASSIGNMENTS, COMMITMENT_INCOME_MONEY, TIME_BANK,  
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CONTRACT_PART;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_CONTRACT_TYPE AS 
	SELECT CONTRACT_TYPE_ID, DESCRIPTION, INSERT_DATE, CHANGE_DATE, CONTRACT_TYPE_NO, ROWIDMASTER, INSERT_USER, CHANGE_USER, ROWID, ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CONTRACT_TYPE;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_CONTR_PART_VER AS 
	SELECT CONTRACT_ID, CONTRACT_PART_ID, VERSION_FROM, PROFITCENTER_ID, INSERT_DATE, CHANGE_DATE, VERSION_TO, MONTHLY_INCOME, CONTR_REG_DATE, INVOICE_STATUS, ALTERATION_TYPE, PRICE_CHANGE_CONST, REGISTRATION_DATE, REGISTERED_BY, LATEST_CHANGE_DATE, LATEST_CHANGED_BY, ROWID, DAYTYPE_MINUTES, DATE_MINUTES, DAYTYPE_CALCULATION_READY, DATE_CALCULATION_READY, MASTER_DATE, CHANGE_TYPE_1, CHANGE_TYPE_2, 
    TO_VARCHAR(INSERT_USER,'UTF-8') AS INSERT_USER,
	TO_VARCHAR(CHANGE_USER,'UTF-8') AS CHANGE_USER, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CONTR_PART_VER;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_CUSTOMER AS 
	SELECT CUSTOMER_ID, CUSTOMER_TYPE_ID, VALIDTO, INSERT_DATE, CHANGE_DATE, ORGANIZATION_NO, ROWIDMASTER, INSERT_USER, CHANGE_USER, ROWID, MASTER_DATE, SYSTEM_CUSTOMER_TYPE_ID, SYSTEM_PROFITCENTER_ID, CENTRAL_COMPANY, CONFIRM_QUESTION_LIMIT, GRSRWENABLE, REQUIRESKAMPERMISSION, 
	TO_VARCHAR(CUSTOMER_NO,'UTF-8') AS CUSTOMER_NO,
	TO_VARCHAR(NAME_SEARCH,'UTF-8') AS NAME_SEARCH,
	TO_VARCHAR(NAME_1,'UTF-8') AS NAME_1,
	TO_VARCHAR(NAME_2,'UTF-8') AS NAME_2,
	TO_VARCHAR(ADDRESS,'UTF-8') AS ADDRESS, 
	TO_VARCHAR(POSTCODE,'UTF-8') AS POSTCODE, 
	TO_VARCHAR(POSTADDRESS,'UTF-8') AS POSTADDRESS,
	TO_VARCHAR(POSTDELIVERY_ADDRESS,'UTF-8') AS POSTDELIVERY_ADDRESS, 
	TO_VARCHAR(POSTDELIVERY_ADDRESS_EXTRA,'UTF-8') AS POSTDELIVERY_ADDRESS_EXTRA,
	TO_VARCHAR(TELEPHONE_1,'UTF-8') AS TELEPHONE_1, 
	TO_VARCHAR(TELEPHONE_2,'UTF-8') AS TELEPHONE_2, 
	TO_VARCHAR(TELEFAX,'UTF-8') AS TELEFAX, 
	TO_VARCHAR(MARKET_CODE,'UTF-8') AS MARKET_CODE, 
	TO_VARCHAR(CENTRAL_USER,'UTF-8') AS CENTRAL_USER, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CUSTOMER;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_CUSTOMER_OBJECT AS 
	SELECT  CUST_OBJ_ID, CUST_OBJ_NO_ALT, TERMINATE_DATE, INSERT_DATE, CHANGE_DATE, MARKET_ID, INSERT_USER, CHANGE_USER, ROWID,
	MASTER_DATE, CITY_ID, CITY_PART_ID, BLOCK_ID, INVOICECUSTOMER_NO, CUSTOMER_OBJECT_TYPE, ADDRESSCODE, PROFITCENTER_NO, CENTRAL_USER, CENTRAL_COMPANY, MARKET_ITEM_ID, PROFITCENTER_ID, PROTECTED, ENABLE_PROD_OBJ_POSITION, VISION_ID, ALLOWCAMERA, CALENDAR_TEMPLATE_ID, USECUSTOMERADDRESS, XDE_SUBCONTRACTOR_CCT_NO, XDE_EXTRA_INFORMATION, XDE_PRODUCTS, XDE_IS_EXTERNAL, ISBLACKLISTED, BLACKLISTCOMMENT, GLOBAL_MASTER_NO, 
	TO_VARCHAR(CUST_OBJ_NO,'UTF-8') AS CUST_OBJ_NO,
	TO_VARCHAR(GEO_LAT,'UTF-8') AS LATITUDE,
	TO_VARCHAR(GEO_LONG,'UTF-8') AS LONGITUDE, 
	TO_VARCHAR(NAME,'UTF-8') AS NAME, 
	TO_VARCHAR(POSTDELIVERY_ADDRESS,'UTF-8') AS POSTDELIVERY_ADDRESS, 
	TO_VARCHAR(POSTCODE,'UTF-8') AS POSTCODE,  
	TO_VARCHAR(ADDRESS,'UTF-8') AS ADDRESS,  
	TO_VARCHAR(ADDRESS_2,'UTF-8') AS ADDRESS_2,  
	TO_VARCHAR(POSTADDRESS,'UTF-8') AS POSTADDRESS, 
	TO_VARCHAR(ASSIGNMENTGEOLOCATION,'UTF-8') AS ASSIGNMENTGEOLOCATION, 
	TO_VARCHAR(BLOCK,'UTF-8') AS BLOCK, 
	TO_VARCHAR(DISTRICT,'UTF-8') AS DISTRICT, 
	TO_VARCHAR(REF_PERSON,'UTF-8') AS REF_PERSON, 
	TO_VARCHAR(TELEPHONE,'UTF-8') AS TELEPHONE,  
	TO_VARCHAR(TELEFAX,'UTF-8') AS TELEFAX,  
	TO_VARCHAR(TELEMODEM,'UTF-8') AS TELEMODEM,  
	TO_VARCHAR(POSTDELIVERY_ADDRESS_EXTRA,'UTF-8') AS POSTDELIVERY_ADDRESS_EXTRA, 
	TO_VARCHAR(XPOS,'UTF-8') AS XPOS, 
	TO_VARCHAR(YPOS,'UTF-8') AS YPOS,
	TO_VARCHAR(NOTES,'UTF-8')  AS NOTES, 
	TO_VARCHAR(ASSIGNMENTPOSTCODE,'UTF-8') AS ASSIGNMENTPOSTCODE, 
	TO_VARCHAR(XDE_CUSTOMER_NAME,'UTF-8') AS XDE_CUSTOMER_NAME,
    ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CUSTOMER_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_CUST_CUST_OBJECT AS 
	SELECT DATEFROM, DATETO, CUST_OBJ_ID, CUSTOMER_ID, INSERT_DATE, CHANGE_DATE, INSERT_USER, CHANGE_USER, ROWID, MASTER_DATE,
	 ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.CUST_CUST_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_GCS_EXPORT_ERP_CALL_OUTS AS
	SELECT CASE_NUMBER,
	ALARM_NUMBER,
	ALARM_CENTER_NAME,
	ALARM_CENTER_CONTRACT_NUMBER,
	ALARM_TIME,
	ALARM_REACH_TIME,
	ALARM_TYPE,
	ALARM_TYPE_TEXT,
	INSERT_DATE,
	CHANGE_DATE,
	GUARD_SECTION,
	MEASURES_CODE,
	MEASURES_TEXT,
	ALARM_ISSUE_CODE,
	ALARM_ISSUE_DESCRIPTION,
	TRANSFERRING_TIME,
	HANDLE_MANUALLY,
	ALARM_CENTER_NUMBER,
	ALARM_CENTER_REFERENCE,
	ALARM_CENTER_ADDRESS,
	ALARM_CENTER_ZIP_CODE,
	ALARM_CENTER_LOCATION,
	ALARM_CENTER_TELEPHONE_NUMBER,
	CUSTOMER_OBJECT,
	CUSTOMER_ORGANIZATION_ID,
	EXPORTED_TIME_STAMP,
	INSERT_USER,
	CHANGE_USER,
	ROWID,
	TO_VARCHAR(CUSTOMER_NUMBER,'UTF-8') AS CUSTOMER_NUMBER,
	TO_VARCHAR(BUILDING_NUMBER,'UTF-8') AS BUILDING_NUMBER,
    TO_VARCHAR(BUILDING_NAME,'UTF-8') AS BUILDING_NAME,
    TO_VARCHAR(BUILDING_ADDRESS,'UTF-8') AS BUILDING_ADDRESS,
    TO_VARCHAR(BUILDING_LOCATION,'UTF-8') AS BUILDING_LOCATION,
    TO_VARCHAR(BUILDING_SECTION,'UTF-8') AS BUILDING_SECTION,
    TO_VARCHAR(BUILDING_ZIP_CODE,'UTF-8') AS BUILDING_ZIP_CODE,
    TO_VARCHAR(FREE_TEXT_FROM_GUARD,'UTF-8') AS FREE_TEXT_FROM_GUARD,
    TO_VARCHAR(FREE_TEXT_FROM_OPERATOR,'UTF-8') AS FREE_TEXT_FROM_OPERATOR,
    TO_VARCHAR(CUSTOMER_VAT_NUMBER,'UTF-8') AS CUSTOMER_VAT_NUMBER,
    TO_VARCHAR(CUSTOMER_SOCIAL_SECURITY_NUMBER,'UTF-8') AS CUSTOMER_SOCIAL_SECURITY_NUMBER,
    TO_VARCHAR(CUSTOMER_NAME_1,'UTF-8') AS CUSTOMER_NAME_1,
    TO_VARCHAR(CUSTOMER_NAME_2,'UTF-8') AS CUSTOMER_NAME_2,
    TO_VARCHAR(CUSTOMER_ADDRESS,'UTF-8') AS CUSTOMER_ADDRESS,
    TO_VARCHAR(CUSTOMER_ZIP_CODE,'UTF-8') AS CUSTOMER_ZIP_CODE,
    TO_VARCHAR(CUSTOMER_LOCATION,'UTF-8') AS CUSTOMER_LOCATION,
    TO_VARCHAR(INVOICE_CUSTOMER_NAME_1,'UTF-8') AS INVOICE_CUSTOMER_NAME_1,
    TO_VARCHAR(INVOICE_CUSTOMER_NAME_2,'UTF-8') AS INVOICE_CUSTOMER_NAME_2,
    TO_VARCHAR(INVOICE_CUSTOMER_ADDRESS,'UTF-8') AS INVOICE_CUSTOMER_ADDRESS,
    TO_VARCHAR(INVOICE_CUSTOMER_ZIPCODE,'UTF-8') AS INVOICE_CUSTOMER_ZIPCODE,
    TO_VARCHAR(INVOICE_CUSTOMER_LOCATION,'UTF-8') AS INVOICE_CUSTOMER_LOCATION,
    TO_VARCHAR(CALL_OUT_BARCODE,'UTF-8') AS CALL_OUT_BARCODE,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.GCS_EXPORT_ERP_CALL_OUTS;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_GCS_EXPORT_ERP_CALL_OUT_GUARDS AS 
	SELECT BASE_LOCATION_NUMBER, COST_CENTRE, ARRIVAL_TIME, DEPARTURE_TIME, ELAPSED_TIME, GUARD_TYPE, CASE_NUMBER, VISIT_DETAIL, INSERT_USER, INSERT_DATE, CHANGE_USER, CHANGE_DATE, ROWID, ON_WAY_TIME, RETURN_TIME_BACK_TO_OFFICE,  
	TO_VARCHAR(DECRYPT(EMPLOYMENT_NUMBER,KS.PASSPHRASE,KS.KEY_VALUE,KS.ADVANCED_ENCRYPTION_STD),'UTF-8') AS EMPLOYMENT_NUMBER,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.GCS_EXPORT_ERP_CALL_OUT_GUARDS, DW.CONTROL.KEYSTORE KS
WHERE  ARRAYS_OVERLAP(ARRAY_CONSTRUCT(ODS_SRC_SYSTEM_ID),SOURCESYSTEMID) =TRUE;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_GD AS 
	SELECT GD_ID, GD_NO, INSERT_DATE, CHANGE_DATE, PROFITCENTER_ID, GD_TYPE_ID, GD_KNOWREQ, DATEFROM, DATETO, ROWID, PE_PROFITC, PE_NO, REPORT_MARK_FOLDER_ID, EXPORT_TO_GMP, VISIBLE_IN_153, EXCLUDE_EMPTY_GD_SHIFT, CALENDAR_TEMPLATE_ID, 
    TO_VARCHAR(NAME,'UTF-8') AS NAME, 
    TO_VARCHAR(POSTCODE,'UTF-8') AS POSTCODE,  
    TO_VARCHAR(ADDRESS,'UTF-8') AS ADDRESS,  
    TO_VARCHAR(POSTADDRESS,'UTF-8') AS POSTADDRESS, 
    TO_VARCHAR(REF_PERSON,'UTF-8') AS REF_PERSON, 
    TO_VARCHAR(TELEPHONE,'UTF-8') AS TELEPHONE,  
    TO_VARCHAR(TELEFAX,'UTF-8') AS TELEFAX,  
    TO_VARCHAR(TELEMODEM,'UTF-8') AS TELEMODEM,  
    TO_VARCHAR(POSTDELIVERY_ADDRESS_EXTRA,'UTF-8') AS POSTDELIVERY_ADDRESS_EXTRA,
    TO_VARCHAR(GEOLOCATION,'UTF-8') AS GEOLOCATION,
    TO_VARCHAR(INSERT_USER,'UTF-8') AS INSERT_USER,
    TO_VARCHAR(CHANGE_USER,'UTF-8') AS CHANGE_USER,
    TO_VARCHAR(GEO_LAT,'UTF-8') AS LATITUDE,
    TO_VARCHAR(GEO_LONG,'UTF-8') AS LONGITUDE, 
    TO_VARCHAR(STARTLOCATION,'UTF-8') AS STARTLOCATION,
	 ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.GD;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_GRS_ADDONINFO AS 
	SELECT CASE_NUMBER, CUST_OBJ_NO, GRSR_EVENT_ID, INSERT_DATE, CHANGE_DATE, ALARM_NO, ALARM_GROUP_NO, ALARM_GROUP_NAME, ALARM_PORTABLE_NO, ALARAM_PORTABLE_NAME, CUST_OBJ_NO_ALT, ALARM_ID, ALARM_TIME, INSERT_USER, CHANGE_USER, ROWID, ID, SFU_EVENT_ID, TRANSFERRING_TIME,
    TO_VARCHAR(CUSTOMER_NO,'UTF-8') AS CUSTOMER_NO,
	 ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.GRS_ADDONINFO;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_LOCATION_MARK AS 
	SELECT LOCATION_MARK_ID, BARCODE, POSITION_GUARD_INFO, INSERT_DATE, CHANGE_DATE, PROD_OBJ_ID, LOC_OBJ_ID, LOC_MARK_TYPE_ID, ACTION, ORDER_NO, ORDER_NO_EXTRA, INSERT_USER, CHANGE_USER, ROWID, VALIDTO, VALIDFROM, LOC_MARK_SERVICE_NO, LOC_MARK_SERVICE_LOCATION, LOC_MARK_SERVICE_INTERVAL_ID, LOC_MARK_SERVICE_EXT_INTERVAL_ID, LOC_MARK_SERVICE_TYPE_ID, LOC_MARK_SERVICE_TYPE_ITEM_ID, LOC_MARK_SERVICE_TYPE_ITEM_2_ID, LOC_MARK_SERVICE_YEAR, 
    TO_VARCHAR(POSITION,'UTF-8') AS POSITION, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.LOCATION_MARK;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_LOCATION_OBJECT AS 
	SELECT PROD_OBJ_ID, LOC_OBJ_ID, DESCRIPTION, INSERT_DATE, CHANGE_DATE, INSERT_USER, CHANGE_USER, ROWID, VALIDFROM, VALIDTO, LOCATION_OBJ_ID,  ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.LOCATION_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_LOC_MARK_REPORT AS 
	SELECT LOCATION_MARK_ID, REPORT_MARK_ID, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID, SORT_ORDER, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.LOC_MARK_REPORT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_PROCESSED_TRANSACTIONS AS 
	SELECT LOGG_ID, TRANS_ID, SUB_ID, GD_ID, PROD_OBJ_ID, LOC_OBJ_ID, MULTIPLICATION_FACTOR, 
	TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	COMMITMENT_ID,
	TO_VARCHAR(POSITION,'UTF-8') AS POSITION,INSERT_DATE,CHANGE_DATE, BARCODE_DATE, BARCODE_TIME,BARCODE_NO,BARCODE_GROUP, 
	BARCODE_TYPE, LOC_MARK_TYPE, REQUIRED, EMPLOYEE_ID, VALID_ASSOCIATION,
	DAY_T_ID, VERSION_FROM, ASSIGNM_TIMEFROM,
	CE_VALID_ASSOCIATION,CE_COMMITMENT_ID,CE_EXCEPTION,CE_DAY_T_ID,CE_DATEFROM,CE_TIMEFROM,
	REQ_CORRECTION_TYPE,ERROR_FLAG, 
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES,
	ASSOCIATION_NORMAL,ASSOCIATION_CE,LOCATION_MARK_ID,ACTION,INSERT_USER,CHANGE_USER,ROWID,
	TO_VARCHAR(EMPLOYEE_NO,'UTF-8') AS EMPLOYEE_NO,
	TO_VARCHAR(FIRSTNAME,'UTF-8') AS FIRSTNAME,
	TO_VARCHAR(LASTNAME,'UTF-8') AS LASTNAME,
	TIME_CONSUMPTION,ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.PROCESSED_TRANSACTIONS;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_PRODUCTION_OBJECT AS 
	SELECT PROD_OBJ_ID, DESCRIPTION, INSERT_DATE, CHANGE_DATE, INSERT_USER, CHANGE_USER, ROWID, 
	TO_VARCHAR(PROD_OBJ_NO,'UTF-8') AS PROD_OBJ_NO, 
	TO_VARCHAR(POSTDELIVERY_ADDRESS,'UTF-8') AS POSTDELIVERY_ADDRESS, 
	TO_VARCHAR(POSTCODE,'UTF-8') AS POSTCODE,  
	TO_VARCHAR(ADDRESS,'UTF-8') AS ADDRESS,  
	TO_VARCHAR(ADDRESS_2,'UTF-8') AS ADDRESS_2,  
	TO_VARCHAR(POSTADDRESS,'UTF-8') AS POSTADDRESS, 
	TO_VARCHAR(REF_PERSON,'UTF-8') AS REF_PERSON, 
	TO_VARCHAR(TELEPHONE,'UTF-8') AS TELEPHONE,  
	TO_VARCHAR(TELEFAX,'UTF-8') AS TELEFAX,  
	TO_VARCHAR(TELEMODEM,'UTF-8') AS TELEMODEM,  
	TO_VARCHAR(POSTDELIVERY_ADDRESS_EXTRA,'UTF-8') AS POSTDELIVERY_ADDRESS_EXTRA,
	TO_VARCHAR(XPOS,'UTF-8') AS XPOS,
	TO_VARCHAR(YPOS,'UTF-8') AS YPOS,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.PRODUCTION_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_PROD_CUST_OBJECT AS
	SELECT PROD_OBJ_ID, CUST_OBJ_ID, DATEFROM, DATETO, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID,
	 ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.PROD_CUST_OBJECT;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_PROFITCENTER AS 
	SELECT PROFITCENTER_ID, PROFITCENTER_NO, INSERT_DATE, CHANGE_DATE, DESCRIPTION, DATEFROM, DATETO, INSERT_USER, CHANGE_USER, ROWID, POSITION_TYPE_REF, VISIBLE, CO_OWNERSHIP_ALLOWED, KPISTARTDATE,  
	TO_VARCHAR(RESPONSIBLE,'UTF-8') AS RESPONSIBLE, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.PROFITCENTER;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_REPORT_MARK AS 
	SELECT REPORT_MARK_ID, REPORT_LABEL, INSERT_DATE, CHANGE_DATE, REP_MARK_TYPE_ID, BARCODE, ACTIVITY_CODE, TIMELIMIT_CODE, INSERT_USER, CHANGE_USER, ROWID, REPORT_MARK_VERSION, RISK_LEVEL, SYSTEM, REPORT_FOLDER_LABEL, STATISTICS_MEMBER, CODE, REPORT_LABEL_2, REPORT_MARK_SET_ONLY, SBA, REPORT_LABEL_GCS_SYNC, ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.REPORT_MARK;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_REPORT_MARK_CULTURE AS 
	SELECT REPORT_MARK_ID, CULTURE_ID, REPORT_LABEL, INSERT_DATE, INSERT_USER, CHANGE_DATE, CHANGE_USER, ROWID,
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY,  ODS_MODIFIEDBY,  ODS_MODIFIEDBY_TIMESTAMP,  ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.REPORT_MARK_CULTURE;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_SFU_COMMITMENTPERFORMED AS
	SELECT COMMITMENT_ID, DATEPERFORMED, GD_ID, GD_STARTDATE, EMPLOYEE_ID, CUST_OBJ_ID, STARTDATETIME, STOPDATATIME, LOGG_ID, NOREPORTS, NOATTACHMENTS, INSERT_USER, INSERT_DATE, CHANGE_USER, CHANGE_DATE, ROWID, MANUALREGISTRATIONDATETIME, START_TRANS_ID, STOP_TRANS_ID, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.SFU_COMMITMENTPERFORMED;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_SFU_COMMITMENTPERFORMEDEXTRAVISITS AS
	SELECT SFU_COMMITMENTPERFORMEDEXTRAVISITS_ID, COMMITMENT_ID, DATEPERFORMED, GD_ID, GD_STARTDATE, EMPLOYEE_ID, CUST_OBJ_ID, STARTDATETIME, STOPDATATIME, LOGG_ID, NOREPORTS, NOATTACHMENTS, INSERT_USER, INSERT_DATE, CHANGE_USER, CHANGE_DATE, ROWID, MANUALREGISTRATIONDATETIME, START_TRANS_ID, STOP_TRANS_ID, 
	ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.SFU_COMMITMENTPERFORMEDEXTRAVISITS;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_TEMP_TRANSACTIONS AS 
	SELECT LOGG_ID, TRANS_ID, BARCODE_TIME, BARCODE_NO,BARCODE_GROUP, INSERT_DATE,INSERT_USER, CHANGE_DATE,CHANGE_USER,ROWID,
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES, 
	ADJUSTED_GD_ID,ADJUSTED_EMPLOYEE_ID,MUASSIGNMENT_ID,
	TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	MULTIPLICATION_FACTOR,
	TO_VARCHAR(LATITUDE,'UTF-8') AS LATITUDE, 
	TO_VARCHAR(LONGITUDE,'UTF-8') AS LONGITUDE,
	ASSIGNMENTPLANNEDID, GPSTIMESTAMP,  IS_FINGERSCANNED, ODS_SRC_SYSTEM_ID, 
	ODS_CREATEDBY,  ODS_MODIFIEDBY,  ODS_MODIFIEDBY_TIMESTAMP,  ODS_CREATEDBY_TIMESTAMP
	FROM ODS_GRS_NO.DBO.TEMP_TRANSACTIONS;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_USERS AS 
	SELECT USER_ID, 
	TO_VARCHAR(USER_NO,'UTF-8') AS USER_NO,
	TO_VARCHAR(USER_NAME,'UTF-8') AS USER_NAME,
	INSERT_DATE,
	TO_VARCHAR(INSERT_USER,'UTF-8') AS INSERT_USER,
	CHANGE_DATE,
	TO_VARCHAR(CHANGE_USER,'UTF-8') AS CHANGE_USER,
	ROWID, VALIDFROM, VALIDTO, ONLINEUSER, CULTURE_ID, SUPERUSER, 
	ODS_SRC_SYSTEM_ID,  ODS_CREATEDBY,  ODS_MODIFIEDBY,  ODS_MODIFIEDBY_TIMESTAMP,  ODS_CREATEDBY_TIMESTAMP 
	FROM ODS_GRS_NO.DBO.USERS;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_XPROCESSED_BARCODES AS 
	SELECT LOGG_ID, TRANS_ID,SUB_ID, GD_ID, PROD_OBJ_ID, LOC_OBJ_ID, MULTIPLICATION_FACTOR, 
	TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	COMMITMENT_ID,
	TO_VARCHAR(POSITION,'UTF-8') AS POSITION,INSERT_DATE,CHANGE_DATE,BARCODE_DATE, BARCODE_TIME,BARCODE_NO,BARCODE_GROUP, 
	BARCODE_TYPE, LOC_MARK_TYPE, REQUIRED, EMPLOYEE_ID, VALID_ASSOCIATION,
	DAY_T_ID, VERSION_FROM, ASSIGNM_TIMEFROM,
	CE_VALID_ASSOCIATION,CE_COMMITMENT_ID,CE_EXCEPTION,CE_DAY_T_ID,CE_DATEFROM,CE_TIMEFROM,
	REQ_CORRECTION_TYPE,ERROR_FLAG, 
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES,
	ASSOCIATION_NORMAL,ASSOCIATION_CE,LOCATION_MARK_ID,ACTION,INSERT_USER,CHANGE_USER,ROWID,
	TO_VARCHAR(EMPLOYEE_NO,'UTF-8') AS EMPLOYEE_NO,
	TO_VARCHAR(FIRSTNAME,'UTF-8') AS FIRSTNAME,
	TO_VARCHAR(LASTNAME,'UTF-8') AS LASTNAME,
	TIME_CONSUMPTION,ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM  ODS_GRS_NO.DBO.XPROCESSED_BARCODES;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_XPROCESSED_TRANSACTIONS AS 
	SELECT LOGG_ID, TRANS_ID,SUB_ID, GD_ID, PROD_OBJ_ID, LOC_OBJ_ID, MULTIPLICATION_FACTOR, 
    TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	COMMITMENT_ID,
	TO_VARCHAR(POSITION,'UTF-8') AS POSITION, 
    INSERT_DATE,CHANGE_DATE, BARCODE_DATE, BARCODE_TIME,BARCODE_NO,BARCODE_GROUP, 
	BARCODE_TYPE, LOC_MARK_TYPE, REQUIRED, EMPLOYEE_ID, VALID_ASSOCIATION,
	DAY_T_ID, VERSION_FROM, ASSIGNM_TIMEFROM,
	CE_VALID_ASSOCIATION,CE_COMMITMENT_ID,CE_EXCEPTION,CE_DAY_T_ID,CE_DATEFROM,CE_TIMEFROM,
	REQ_CORRECTION_TYPE,ERROR_FLAG, 
	TO_VARCHAR(NOTES,'UTF-8') AS NOTES,
	ASSOCIATION_NORMAL,ASSOCIATION_CE,LOCATION_MARK_ID,ACTION,INSERT_USER,CHANGE_USER,ROWID,
	TO_VARCHAR(EMPLOYEE_NO,'UTF-8') AS EMPLOYEE_NO,
	TO_VARCHAR(FIRSTNAME,'UTF-8') AS FIRSTNAME,
	TO_VARCHAR(LASTNAME,'UTF-8') AS LASTNAME,
	TIME_CONSUMPTION,ODS_SRC_SYSTEM_ID, ODS_CREATEDBY, ODS_MODIFIEDBY, ODS_MODIFIEDBY_TIMESTAMP, ODS_CREATEDBY_TIMESTAMP
	FROM  ODS_GRS_NO.DBO.PROCESSED_TRANSACTIONS;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_XREPORT_MARK AS 
SELECT
	 RM.REPORT_MARK_ID
	,RM.REP_MARK_TYPE_ID
	,RM.BARCODE
	,RM.REPORT_LABEL
	,RM.ACTIVITY_CODE
	,RM.TIMELIMIT_CODE
	,RM.INSERT_DATE
	,RM.INSERT_USER
	,RM.CHANGE_DATE
	,RM.CHANGE_USER
	,RM.ROWID
	,RM.REPORT_MARK_VERSION
	,RM.RISK_LEVEL
	,RM.SYSTEM
	,RM.REPORT_FOLDER_LABEL
	,RM.STATISTICS_MEMBER
	,RM.CODE
	,RM.REPORT_LABEL_2
	,RM.REPORT_MARK_SET_ONLY
	,RM.SBA
	,RM.ODS_SRC_SYSTEM_ID 
	,RM.ODS_CREATEDBY 
	,RM.ODS_MODIFIEDBY
	,RM.ODS_MODIFIEDBY_TIMESTAMP
	,RM.ODS_CREATEDBY_TIMESTAMP
FROM  ODS_GRS_NO.DBO.REPORT_MARK RM	;


CREATE OR REPLACE SECURE VIEW DATAMART.RISKPREDICTION.GRSNO_XTEMP_TRANSACTIONS AS 
	 SELECT LOGG_ID, TRANS_ID, BARCODE_TIME, BARCODE_NO,BARCODE_GROUP, INSERT_DATE,INSERT_USER, CHANGE_DATE,CHANGE_USER,ROWID,
    TO_VARCHAR(NOTES,'UTF-8') AS NOTES, 
	ADJUSTED_GD_ID,ADJUSTED_EMPLOYEE_ID,MUASSIGNMENT_ID,
	TO_VARCHAR(REPORT_NOTES,'UTF-8') AS REPORT_NOTES, 
	MULTIPLICATION_FACTOR,
	TO_VARCHAR(LATITUDE,'UTF-8') AS LATITUDE, 
	TO_VARCHAR(LONGITUDE,'UTF-8') AS LONGITUDE,
	ASSIGNMENTPLANNEDID, GPSTIMESTAMP,  IS_FINGERSCANNED, ODS_SRC_SYSTEM_ID, 
	ODS_CREATEDBY,  ODS_MODIFIEDBY,  ODS_MODIFIEDBY_TIMESTAMP,  ODS_CREATEDBY_TIMESTAMP 
	FROM  ODS_GRS_NO.DBO.TEMP_TRANSACTIONS;
	