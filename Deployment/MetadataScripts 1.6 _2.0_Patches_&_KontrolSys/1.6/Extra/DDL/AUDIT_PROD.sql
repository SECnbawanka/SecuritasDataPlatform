CREATE OR REPLACE DATABASE AUDIT;

CREATE OR REPLACE SCHEMA AUDIT.BASE;

CREATE OR REPLACE TABLE AUDIT.BASE.DBGRANTS (
	CREATED_ON TIMESTAMP_LTZ(9),
	PRIVILEGE VARCHAR(16777216),
	GRANTED_ON VARCHAR(16777216),
	NAME VARCHAR(16777216),
	GRANTED_TO VARCHAR(16777216),
	GRANTEE_NAME VARCHAR(16777216),
	GRANT_OPTION VARCHAR(16777216),
	GRANTED_BY VARCHAR(16777216),
	REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
);
CREATE OR REPLACE TABLE AUDIT.BASE.DBROLES (
	CREATED_ON TIMESTAMP_LTZ(9),
	NAME VARCHAR(16777216),
	IS_DEFAULT VARCHAR(16777216),
	IS_CURRENT VARCHAR(16777216),
	IS_INHERITED VARCHAR(16777216),
	ASSIGNED_TO_USERS NUMBER(38,0),
	GRANTED_TO_ROLES NUMBER(38,0),
	GRANTED_ROLES NUMBER(38,0),
	OWNER VARCHAR(16777216),
	RCOMMENT VARCHAR(16777216),
	REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
);
CREATE OR REPLACE TABLE AUDIT.BASE.DBUSERS (
	NAME VARCHAR(16777216),
	CREATED_ON TIMESTAMP_LTZ(9),
	LOGIN_NAME VARCHAR(16777216),
	DISPLAY_NAME VARCHAR(16777216),
	FIRST_NAME VARCHAR(16777216),
	LAST_NAME VARCHAR(16777216),
	EMAIL VARCHAR(16777216),
	MINS_TO_UNLOCK VARCHAR(16777216),
	DAYS_TO_EXPIRY VARCHAR(16777216),
	TCOMMENT VARCHAR(16777216),
	DISABLED VARCHAR(16777216),
	MUST_CHANGE_PASSWORD VARCHAR(16777216),
	SNOWFLAKE_LOCK VARCHAR(16777216),
	DEFAULT_WAREHOUSE VARCHAR(16777216),
	DEFAULT_NAMESPACE VARCHAR(16777216),
	DEFAULT_ROLE VARCHAR(16777216),
	EXT_AUTHN_DUO VARCHAR(16777216),
	EXT_AUTHN_UID VARCHAR(16777216),
	MINS_TO_BYPASS_MFA VARCHAR(16777216),
	OWNER VARCHAR(16777216),
	LAST_SUCCESS_LOGIN TIMESTAMP_LTZ(9),
	EXPIRES_AT_TIME TIMESTAMP_LTZ(9),
	LOCKED_UNTIL_TIME TIMESTAMP_LTZ(9),
	HAS_PASSWORD VARCHAR(16777216),
	HAS_RSA_PUBLIC_KEY VARCHAR(16777216),
	REFRESH_DATE TIMESTAMP_LTZ(9) DEFAULT CURRENT_TIMESTAMP()
);
CREATE OR REPLACE TABLE AUDIT.BASE.MATILLION_DETAIL (
	ID VARCHAR(2000) NOT NULL,
	TYPE VARCHAR(2000),
	JOBTIMESTAMP VARCHAR(2000),
	COMPONENTNAME VARCHAR(2000),
	STATE VARCHAR(2000),
	ROWCOUNT VARCHAR(2000),
	STARTTIME VARCHAR(2000),
	ENDTIME VARCHAR(2000),
	MESSAGE VARCHAR(2000),
	AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
	AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_MATILLION_DETAIL PRIMARY KEY (ID)
);
CREATE OR REPLACE TABLE AUDIT.BASE.MATILLION_LOG (
	ID NUMBER(38,0) NOT NULL,
	JOB_TYPE VARCHAR(1024),
	GROUPNAME VARCHAR(1024),
	PROJECTNAME VARCHAR(1024),
	VERSIONID NUMBER(38,0),
	VERSIONNAME VARCHAR(1024),
	ENVIRONMENTNAME VARCHAR(1024),
	JOBNAME VARCHAR(1024),
	JOB_STATE VARCHAR(250),
	JOB_ENQUEUEDTIME TIMESTAMP_LTZ(9),
	JOB_STARTTIME TIMESTAMP_LTZ(9),
	JOB_ENDTIME TIMESTAMP_LTZ(9),
	JOB_MESSAGE VARCHAR(1024),
	COMPONENT_TYPE VARCHAR(1024),
	JOB_TIMESTAMP TIMESTAMP_LTZ(9),
	COMPONENT_NAME VARCHAR(1024),
	COMPONENT_STATE VARCHAR(256),
	ROWCOUNT NUMBER(38,0),
	COMPONENT_STARTTIME TIMESTAMP_LTZ(9),
	COMPONENT_ENDTIME TIMESTAMP_LTZ(9),
	COMPONENT_MESSAGE VARCHAR(16777216),
	AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
	AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_MATILLION_LOG PRIMARY KEY (ID)
);
CREATE OR REPLACE TABLE AUDIT.BASE.MATILLION_SUMMARY (
	ID VARCHAR(2000) NOT NULL,
	TYPE VARCHAR(2000),
	GROUPNAME VARCHAR(2000),
	PROJECTNAME VARCHAR(2000),
	VERSIONID VARCHAR(2000),
	VERSIONNAME VARCHAR(2000),
	ENVIRONMENTNAME VARCHAR(2000),
	JOBNAME VARCHAR(2000),
	STATE VARCHAR(2000),
	ENQUEUEDTIME VARCHAR(2000),
	STARTTIME VARCHAR(2000),
	ENDTIME VARCHAR(2000),
	MESSAGE VARCHAR(2000),
	AUDIT_SRC_SYSTEM_ID VARCHAR(1024),
	AUDIT_CREATEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_CREATEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	AUDIT_MODIFIEDBY VARCHAR(255) NOT NULL DEFAULT CURRENT_USER(),
	AUDIT_MODIFIEDBY_TIMESTAMP TIMESTAMP_LTZ(9) NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT PK_MATILLION_SUMMARY PRIMARY KEY (ID)
);
CREATE OR REPLACE TABLE AUDIT.BASE.STG_MATILLION_DETAIL (
	"ID" VARCHAR(2000),
	"TYPE" VARCHAR(2000),
	"JOBTIMESTAMP" VARCHAR(2000),
	"COMPONENTNAME" VARCHAR(2000),
	"STATE" VARCHAR(2000),
	"ROWCOUNT" VARCHAR(2000),
	"STARTTIME" VARCHAR(2000),
	"ENDTIME" VARCHAR(2000),
	"MESSAGE" VARCHAR(2000),
	"SINCE" VARCHAR(2000)
);
CREATE OR REPLACE TABLE AUDIT.BASE.STG_MATILLION_SUMMARY (
	"ID" VARCHAR(2000),
	"TYPE" VARCHAR(2000),
	"GROUPNAME" VARCHAR(2000),
	"PROJECTNAME" VARCHAR(2000),
	"VERSIONID" VARCHAR(2000),
	"VERSIONNAME" VARCHAR(2000),
	"ENVIRONMENTNAME" VARCHAR(2000),
	"JOBNAME" VARCHAR(2000),
	"STATE" VARCHAR(2000),
	"ENQUEUEDTIME" VARCHAR(2000),
	"STARTTIME" VARCHAR(2000),
	"ENDTIME" VARCHAR(2000),
	"MESSAGE" VARCHAR(2000)
);
CREATE OR REPLACE PROCEDURE "SNAPSHOT_GRANTS"()
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS '
	FUNCTION ROLE_GRANTS() {
		VAR OBJ_RS = SNOWFLAKE.EXECUTE({SQLTEXT: ''SELECT NAME FROM DBROLES;''});
		WHILE(OBJ_RS.NEXT()) {
            SNOWFLAKE.EXECUTE({SQLTEXT: `SHOW GRANTS TO ROLE ` + OBJ_RS.GETCOLUMNVALUE(1) + ` ;` });
			SNOWFLAKE.EXECUTE( {SQLTEXT: `INSERT INTO DBGRANTS SELECT *, CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`});
			SNOWFLAKE.EXECUTE({SQLTEXT: `SHOW GRANTS ON ROLE ` + OBJ_RS.GETCOLUMNVALUE(1) + ` ;` });
			SNOWFLAKE.EXECUTE( {SQLTEXT: `INSERT INTO DBGRANTS SELECT *, CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`});
		}
	}// — — — — — — — — — — — — — — — — — — — — — — — —
	FUNCTION USER_GRANTS() {
		VAR OBJ_RS = SNOWFLAKE.EXECUTE({SQLTEXT: `SELECT NAME FROM DBUSERS;`});
		WHILE(OBJ_RS.NEXT()) {
			SNOWFLAKE.EXECUTE({SQLTEXT: `SHOW GRANTS TO USER "` + OBJ_RS.GETCOLUMNVALUE(1) + `" ;` });
			SNOWFLAKE.EXECUTE( {SQLTEXT:`INSERT INTO DBGRANTS SELECT *,NULL,NULL,NULL,CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`});
			SNOWFLAKE.EXECUTE({SQLTEXT: `SHOW GRANTS ON USER "` + OBJ_RS.GETCOLUMNVALUE(1) + `" ;` });
			SNOWFLAKE.EXECUTE( {SQLTEXT:`INSERT INTO DBGRANTS SELECT *,CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`});
		}
	}// — — — — — — — — — — — — — — — — — — — — — — — —
	VAR RESULT = ''SUCCESS'';
	TRY {
		SNOWFLAKE.EXECUTE( {SQLTEXT: ''TRUNCATE TABLE DBGRANTS;''} );
		ROLE_GRANTS();
		USER_GRANTS();
	} 
	CATCH (ERR) {
		RESULT = ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;
		RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;
		RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;
	}
	RETURN RESULT;
';
CREATE OR REPLACE PROCEDURE "SNAPSHOT_ROLES"()
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS '
	VAR RESULT = ''SUCCESS'';
	TRY {
		SNOWFLAKE.EXECUTE( {SQLTEXT: ''TRUNCATE TABLE DBROLES;''} );
		SNOWFLAKE.EXECUTE( {SQLTEXT: ''SHOW ROLES;''} );
		VAR DBROLES_TBL_SQL = `INSERT INTO DBROLES SELECT *,CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`;
		SNOWFLAKE.EXECUTE( {SQLTEXT: DBROLES_TBL_SQL} );
	} 
	CATCH (ERR) {
		RESULT = ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;
	}
	RETURN RESULT;
';
CREATE OR REPLACE PROCEDURE "SNAPSHOT_USERS"()
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS ' 
    VAR RESULT = ''SUCCESS'';
    TRY {
        SNOWFLAKE.EXECUTE( {SQLTEXT: ''TRUNCATE TABLE DBUSERS;''} );
        SNOWFLAKE.EXECUTE( {SQLTEXT: ''SHOW USERS;''} );
        VAR DBUSERS_TBL_SQL = `INSERT INTO DBUSERS SELECT * ,CURRENT_TIMESTAMP() FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));`;
        SNOWFLAKE.EXECUTE( {SQLTEXT: DBUSERS_TBL_SQL} );
	} 
	CATCH (ERR) {
		RESULT = ''FAILED: CODE: '' + ERR.CODE + ''\\N STATE: '' + ERR.STATE;RESULT += ''\\N MESSAGE: '' + ERR.MESSAGE;RESULT += ''\\NSTACK TRACE:\\N'' + ERR.STACKTRACETXT;
	}
	RETURN RESULT;
';
CREATE OR REPLACE TASK TASK_SNAPSHOT_GRANTS
	WAREHOUSE=WH_DATA_LOAD
	AFTER AUDIT.BASE.TASK_SNAPSHOT_ROLES
	AS CALL SNAPSHOT_GRANTS();
CREATE OR REPLACE TASK TASK_SNAPSHOT_ROLES
	WAREHOUSE=WH_DATA_LOAD
	AFTER AUDIT.BASE.TASK_SNAPSHOT_USERS
	AS CALL SNAPSHOT_ROLES();
CREATE OR REPLACE TASK TASK_SNAPSHOT_USERS
	WAREHOUSE=WH_DATA_LOAD
	SCHEDULE='USING CRON 00 12 * * * AMERICA/NEW_YORK'
	AS CALL SNAPSHOT_USERS();